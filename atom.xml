<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Northpark博客</title>
  <subtitle>Today does not walk, will have to run tomorrow.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://liuhouer.github.io/"/>
  <updated>2017-08-15T08:14:52.000Z</updated>
  <id>http://liuhouer.github.io/</id>
  
  <author>
    <name>Bruce</name>
    <email>zhangyang.z@icloud.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>MySQL安全配置向导</title>
    <link href="http://liuhouer.github.io/2017/08/15/MySQL%E5%AE%89%E5%85%A8%E9%85%8D%E7%BD%AE%E5%90%91%E5%AF%BC/"/>
    <id>http://liuhouer.github.io/2017/08/15/MySQL安全配置向导/</id>
    <published>2017-08-15T08:58:17.545Z</published>
    <updated>2017-08-15T08:14:52.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote>
<p>主要介绍了MySQL安全配置向导mysql_secure_installation各项配置的含义,并依据经验给予一了一些建议<br><strong>安装完mysql-server 会提示可以运行mysql_secure_installation。运行mysql_secure_installation会执行几个设置：</strong></p>
<ul>
<li>为root用户设置密码</li>
<li>删除匿名账号</li>
<li>取消root用户远程登录</li>
<li>删除test库和对test库的访问权限</li>
<li>刷新授权表使修改生效<br><strong>通过这几项的设置能够提高mysql库的安全。建议生产环境中mysql安装这完成后一定要运行一次mysql_secure_installation，详细步骤请参看下面的命令:</strong></li>
</ul>
</blockquote>
<a id="more"></a>
<figure class="highlight vbnet"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line">[root@server1 ~]<span class="meta"># mysql_secure_installation</span></div><div class="line">NOTE: RUNNING ALL PARTS <span class="keyword">OF</span> THIS SCRIPT <span class="keyword">IS</span> RECOMMENDED <span class="keyword">FOR</span> ALL MySQL</div><div class="line">SERVERS <span class="keyword">IN</span> PRODUCTION USE! PLEASE READ <span class="keyword">EACH</span> <span class="keyword">STEP</span> CAREFULLY!</div><div class="line"><span class="keyword">In</span> <span class="keyword">order</span> <span class="keyword">to</span> log <span class="keyword">into</span> MySQL <span class="keyword">to</span> secure it, we<span class="comment">'ll need the current</span></div><div class="line">password <span class="keyword">for</span> the root user. <span class="keyword">If</span> you<span class="comment">'ve just installed MySQL, and</span></div><div class="line">you haven<span class="comment">'t set the root password yet, the password will be blank,</span></div><div class="line">so you should just press enter here.</div><div class="line">Enter current password <span class="keyword">for</span> root (enter <span class="keyword">for</span> none):&lt;–初次运行直接回车</div><div class="line">OK, successfully used password, moving <span class="keyword">on</span>…</div><div class="line">Setting the root password ensures that nobody can log <span class="keyword">into</span> the MySQL</div><div class="line">root user without the proper authorisation.</div><div class="line"><span class="keyword">Set</span> root password? [Y/n] ==&lt;– 是否设置root用户密码，输入y并回车或直接回车==</div><div class="line"><span class="keyword">New</span> password: ==&lt;– 设置root用户的密码==</div><div class="line">Re-enter <span class="keyword">new</span> password: ==&lt;– 再输入一次你设置的密码==</div><div class="line">Password updated successfully!</div><div class="line">Reloading privilege tables..</div><div class="line">… Success!</div><div class="line"><span class="keyword">By</span> <span class="keyword">default</span>, a MySQL installation has an anonymous user, allowing anyone</div><div class="line"><span class="keyword">to</span> log <span class="keyword">into</span> MySQL without having <span class="keyword">to</span> have a user account created <span class="keyword">for</span></div><div class="line">them. This <span class="keyword">is</span> intended only <span class="keyword">for</span> testing, <span class="keyword">and</span> <span class="keyword">to</span> make the installation</div><div class="line">go a bit smoother. You should remove them before moving <span class="keyword">into</span> a</div><div class="line">production environment.</div><div class="line">Remove anonymous users? [Y/n] ==&lt;– 是否删除匿名用户,生产环境建议删除，所以直接回车==</div><div class="line">… Success!</div><div class="line">Normally, root should only be allowed <span class="keyword">to</span> connect <span class="keyword">from</span> <span class="comment">'localhost'. This</span></div><div class="line">ensures that someone cannot guess at the root password <span class="keyword">from</span> the network.</div><div class="line">Disallow root login remotely? [Y/n] ==&lt;–是否禁止root远程登录,根据自己的需求选择Y/n并回车,建议禁止==</div><div class="line">… Success!</div><div class="line"><span class="keyword">By</span> <span class="keyword">default</span>, MySQL comes <span class="keyword">with</span> a database named <span class="comment">'test' that anyone can</span></div><div class="line">access. This <span class="keyword">is</span> also intended only <span class="keyword">for</span> testing, <span class="keyword">and</span> should be removed</div><div class="line">before moving <span class="keyword">into</span> a production environment.</div><div class="line">Remove test database <span class="keyword">and</span> access <span class="keyword">to</span> it? [Y/n] ==&lt;– 是否删除test数据库,直接回车==</div><div class="line">- Dropping test database…</div><div class="line">… Success!</div><div class="line">- Removing privileges <span class="keyword">on</span> test database…</div><div class="line">… Success!</div><div class="line">Reloading the privilege tables will ensure that all changes made so far</div><div class="line">will <span class="keyword">take</span> effect immediately.</div><div class="line">Reload privilege tables now? [Y/n] ==&lt;– 是否重新加载权限表，直接回车==</div><div class="line">… Success!</div><div class="line">Cleaning up…</div><div class="line">All done! <span class="keyword">If</span> you<span class="comment">'ve completed all of the above steps, your MySQL</span></div><div class="line">installation should now be secure.</div><div class="line">Thanks <span class="keyword">for</span> <span class="keyword">using</span> MySQL!</div><div class="line">[root@server1 ~]<span class="meta">#</span></div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;主要介绍了MySQL安全配置向导mysql_secure_installation各项配置的含义,并依据经验给予一了一些建议&lt;br&gt;&lt;strong&gt;安装完mysql-server 会提示可以运行mysql_secure_installation。运行mysql_secure_installation会执行几个设置：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;为root用户设置密码&lt;/li&gt;
&lt;li&gt;删除匿名账号&lt;/li&gt;
&lt;li&gt;取消root用户远程登录&lt;/li&gt;
&lt;li&gt;删除test库和对test库的访问权限&lt;/li&gt;
&lt;li&gt;刷新授权表使修改生效&lt;br&gt;&lt;strong&gt;通过这几项的设置能够提高mysql库的安全。建议生产环境中mysql安装这完成后一定要运行一次mysql_secure_installation，详细步骤请参看下面的命令:&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="mysql" scheme="http://liuhouer.github.io/categories/mysql/"/>
    
    
      <category term="mysql" scheme="http://liuhouer.github.io/tags/mysql/"/>
    
      <category term="linux" scheme="http://liuhouer.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>centos 6.5 安装 MySql 6.7</title>
    <link href="http://liuhouer.github.io/2017/07/27/centos%206.5%20%E5%AE%89%E8%A3%85%20MySql%206.7/"/>
    <id>http://liuhouer.github.io/2017/07/27/centos 6.5 安装 MySql 6.7/</id>
    <published>2017-07-27T02:24:09.000Z</published>
    <updated>2017-08-15T08:57:42.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote>
<p>之前尝试过3次centos安装mysql服务，都失败了，严重的时候，系统都挂了，所有服务重新撘~<br>我尝试了各种安装方式,例如:</p>
<blockquote>
<blockquote>
<p>下载别人提供好的tag.gz，解压缩，按照人家的步骤一步步来，结果安装完后启动失败~<br> 这样指令安装：yum install -y mysql-server mysql mysql-devel，安装完后启动失败，fuck！！！</p>
</blockquote>
<p>希望有同样遭遇的小伙伴，可以按照我的方式来装一次，版本号相同的话，肯定是可以的，所有的雷我都替你们趟过了！！ </p>
</blockquote>
</blockquote>
<h2 id="1-安装-MySQL-yum-资源库"><a href="#1-安装-MySQL-yum-资源库" class="headerlink" title="1.安装 MySQL yum 资源库"></a>1.安装 MySQL yum 资源库</h2><p> 找到需要下载的资源: <a href="http://dev.mysql.com/downloads/repo/yum/" target="_blank" rel="external">http://dev.mysql.com/downloads/repo/yum/</a></p>
<p><img src="http://7xpfpd.com1.z0.glb.clouddn.com/1.png" alt="找到需要下载的资源"></p>
<p>MySQL Yum 下载页面</p>
<p><img src="http://7xpfpd.com1.z0.glb.clouddn.com/2.png" alt="MySQL Yum 下载页面"></p>
<blockquote>
<p>复制了下载链接，wget获取资源库，确保没有错误，用md5校验，确保和官网文件是一致没错误的</p>
</blockquote>
<a id="more"></a>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wget <span class="string">http:</span><span class="comment">//dev.mysql.com/get/mysql57-community-release-el6-7.noarch.rpm</span></div></pre></td></tr></table></figure>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">md5sum mysql57-community-release-el6-<span class="number">7</span><span class="selector-class">.noarch</span><span class="selector-class">.rpm</span></div></pre></td></tr></table></figure>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rpm -ivh mysql57-community-release-el6-<span class="number">7</span><span class="selector-class">.noarch</span><span class="selector-class">.rpm</span></div></pre></td></tr></table></figure>
<p><img src="http://7xpfpd.com1.z0.glb.clouddn.com/3.jpg" alt="指令界面"></p>
<h2 id="2-安装-MySQL-5-7服务端和客户端依赖包"><a href="#2-安装-MySQL-5-7服务端和客户端依赖包" class="headerlink" title="2. 安装 MySQL 5.7服务端和客户端依赖包"></a>2. 安装 MySQL 5.7服务端和客户端依赖包</h2><blockquote>
<p>以上我们安装了mysql5.7的yum资源库，可以开始安装mysql服务端和客户端依赖包了</p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum <span class="keyword">install</span> -y mysql-community-<span class="keyword">client</span> mysql-community-<span class="keyword">server</span></div></pre></td></tr></table></figure>
<p><img src="http://7xpfpd.com1.z0.glb.clouddn.com/4.jpg" alt="指令界面"></p>
<h2 id="3-启动-MySQL-5-7-Server-配置连接"><a href="#3-启动-MySQL-5-7-Server-配置连接" class="headerlink" title="3. 启动 MySQL 5.7 Server 配置连接 !"></a>3. 启动 MySQL 5.7 Server 配置连接 !</h2><blockquote>
<p>  Start MySQL 5.7 service<br>  打开mysql服务</p>
</blockquote>
<figure class="highlight ebnf"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">service mysqld start</span></div></pre></td></tr></table></figure>
<blockquote>
<p>And find initial mysql 5.7 root password from log file<br>找到初始化mysql的管理员密码，初始化密码在log文件中</p>
</blockquote>
<figure class="highlight maxima"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">grep -i temporary /<span class="built_in">var</span>/<span class="built_in">log</span>/mysqld.<span class="built_in">log</span></div></pre></td></tr></table></figure>
<blockquote>
<p>Login into MySQL 5.7 using password you got from temporary password<br>that you searched from above<br>利用初始化密码登录到mysql</p>
</blockquote>
<figure class="highlight ebnf"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">mysql -uroot -p</span></div></pre></td></tr></table></figure>
<blockquote>
<p>Only command MySQL 5.7 is going to let you run once you login with<br>your default password is password command<br>设置你的mysql管理员的新密码</p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SET</span> <span class="keyword">PASSWORD</span> <span class="keyword">FOR</span> <span class="string">'root'</span>@<span class="string">'localhost'</span> = <span class="keyword">PASSWORD</span>(<span class="string">'Yourpassword1!'</span>);</div></pre></td></tr></table></figure>
<p><img src="http://7xpfpd.com1.z0.glb.clouddn.com/5.jpg" alt="指令界面5-获取mysql初始化密码，设置管理员密码"></p>
<blockquote>
<p>这样就成功安装了MySQL 5.7 server<br>下面进行一些必要的配置</p>
</blockquote>
<h2 id="4-一些必要的配置"><a href="#4-一些必要的配置" class="headerlink" title="4.一些必要的配置"></a>4.一些必要的配置</h2><h3 id="1、-输入mysql管理员密码登录"><a href="#1、-输入mysql管理员密码登录" class="headerlink" title="1、 输入mysql管理员密码登录"></a>1、 输入mysql管理员密码登录</h3><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">mysql -uroot -p</span></div></pre></td></tr></table></figure>
<h3 id="2、授权权限"><a href="#2、授权权限" class="headerlink" title="2、授权权限"></a>2、授权权限</h3><blockquote>
<p>允许任何主机使用“myuser”账号和“mypwd”密码连接到 MySQL 服务器。</p>
</blockquote>
<figure class="highlight lasso"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">mysql&gt; </div><div class="line">GRANT <span class="literal">ALL</span> PRIVILEGES <span class="keyword">ON</span> *.* <span class="keyword">TO</span> <span class="string">'root'</span>@<span class="string">'%'</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">'noface@@^'</span> <span class="keyword">WITH</span> GRANT OPTION;  </div><div class="line"></div><div class="line">GRANT <span class="literal">ALL</span> PRIVILEGES <span class="keyword">ON</span> *.* <span class="keyword">TO</span> <span class="string">'noface'</span>@<span class="string">'%'</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">'noface@'</span> <span class="keyword">WITH</span> GRANT OPTION;</div></pre></td></tr></table></figure>
<h3 id="3、立刻刷新生效"><a href="#3、立刻刷新生效" class="headerlink" title="3、立刻刷新生效"></a>3、立刻刷新生效</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql&gt; FLUSH PRIVILEGES;</div></pre></td></tr></table></figure>
<h3 id="4、之后还可以放开防火墙、设定自启动、增强MySQL安全设置等。"><a href="#4、之后还可以放开防火墙、设定自启动、增强MySQL安全设置等。" class="headerlink" title="4、之后还可以放开防火墙、设定自启动、增强MySQL安全设置等。"></a>4、之后还可以放开防火墙、设定自启动、增强MySQL安全设置等。</h3><figure class="highlight pf"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">iptables -I INPUT -p tcp -m <span class="keyword">state</span> --state NEW -m tcp --dport <span class="number">3306</span> -j ACCEPT</div></pre></td></tr></table></figure>
<figure class="highlight maxima"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/etc/init.d/iptables <span class="built_in">save</span></div></pre></td></tr></table></figure>
<figure class="highlight nginx"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">chkconfig</span> mysqld <span class="literal">on</span></div></pre></td></tr></table></figure>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql_secure_installation</div></pre></td></tr></table></figure>
<p>了解更多增强MySQL安全设置来<a href="http://blog.northpark.cn/2017/08/15/MySQL%E5%AE%89%E5%85%A8%E9%85%8D%E7%BD%AE%E5%90%91%E5%AF%BC/" target="_blank" rel="external">Northpark博客</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;之前尝试过3次centos安装mysql服务，都失败了，严重的时候，系统都挂了，所有服务重新撘~&lt;br&gt;我尝试了各种安装方式,例如:&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;下载别人提供好的tag.gz，解压缩，按照人家的步骤一步步来，结果安装完后启动失败~&lt;br&gt; 这样指令安装：yum install -y mysql-server mysql mysql-devel，安装完后启动失败，fuck！！！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;希望有同样遭遇的小伙伴，可以按照我的方式来装一次，版本号相同的话，肯定是可以的，所有的雷我都替你们趟过了！！ &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;1-安装-MySQL-yum-资源库&quot;&gt;&lt;a href=&quot;#1-安装-MySQL-yum-资源库&quot; class=&quot;headerlink&quot; title=&quot;1.安装 MySQL yum 资源库&quot;&gt;&lt;/a&gt;1.安装 MySQL yum 资源库&lt;/h2&gt;&lt;p&gt; 找到需要下载的资源: &lt;a href=&quot;http://dev.mysql.com/downloads/repo/yum/&quot;&gt;http://dev.mysql.com/downloads/repo/yum/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xpfpd.com1.z0.glb.clouddn.com/1.png&quot; alt=&quot;找到需要下载的资源&quot;&gt;&lt;/p&gt;
&lt;p&gt;MySQL Yum 下载页面&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xpfpd.com1.z0.glb.clouddn.com/2.png&quot; alt=&quot;MySQL Yum 下载页面&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;复制了下载链接，wget获取资源库，确保没有错误，用md5校验，确保和官网文件是一致没错误的&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="mysql" scheme="http://liuhouer.github.io/categories/mysql/"/>
    
    
      <category term="mysql" scheme="http://liuhouer.github.io/tags/mysql/"/>
    
      <category term="linux" scheme="http://liuhouer.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>西安春游攻略</title>
    <link href="http://liuhouer.github.io/2017/03/23/%E5%8D%8E%E5%B1%B1%E4%B9%8B%E5%B7%85%E6%94%BB%E7%95%A5/"/>
    <id>http://liuhouer.github.io/2017/03/23/华山之巅攻略/</id>
    <published>2017-03-23T02:24:09.000Z</published>
    <updated>2017-03-23T03:21:57.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="碎碎念"><a href="#碎碎念" class="headerlink" title="碎碎念"></a>碎碎念</h2><blockquote>
<p>12月份mac系统升级，黑屏了，Genius Bar 客服告诉我只能格式化，重装新系统。我(。_°☆╲(- – )…..((/- -)/<br>我的博客代码也没备份，一直懒惰，这几个月也没更新博文了。 终于，今天勤奋一会，把博客代码重写重搭了~</p>
</blockquote>
<h2 id="题记"><a href="#题记" class="headerlink" title="题记"></a>题记</h2><blockquote>
<ul>
<li>再有一周就要去陕西赏春了，快按耐不住躁动的心情了~撒欢</li>
<li>内心憧憬的华山是“三峰森翠倚云棱，凝睇烟萝最上层。” 亦是“云含幽兮月添冷，月凝晖兮江漾影。”华山！等着我们</li>
</ul>
<p><img src="http://7xpfpd.com1.z0.glb.clouddn.com/f1a03ac79f3df8dc6c623e2bcd11728b46102898.jpg" alt=""></p>
<p><img src="http://7xpfpd.com1.z0.glb.clouddn.com/fa8355e736d12f2ec4551fda4fc2d562843568a3.jpg" alt=""></p>
<p><img src="http://7xpfpd.com1.z0.glb.clouddn.com/313ef9198618367ad2e5ce672e738bd4b21ce58f.jpg" alt=""></p>
<ul>
<li>哥们刚刚从陕西那边玩回来，和我们的行程比较匹配，下面引用一下他的攻略</li>
</ul>
</blockquote>
<a id="more"></a>
<h2 id="西安攻略"><a href="#西安攻略" class="headerlink" title="西安攻略"></a>西安攻略</h2><blockquote>
<pre><code>  文     波波
整理     jeyy
</code></pre><ul>
<li>文笔不好，咱们直入主题！<h2 id="gt-准备阶段"><a href="#gt-准备阶段" class="headerlink" title="&gt;  # 准备阶段"></a>&gt;  # 准备阶段</h2><ul>
<li>西安，其实要真是想游个遍，讲真还是有一定难度的！毕竟西安的文化底蕴还是不了低估的！单是那些古建筑就满大街都是，什么大雁塔，古城墙，华清池，兵马俑在地图上你随便一搜就够你转几天的。不过我这个人怎么说的，反正就是不大喜欢那些什么大院，什么寺庙，什么宫的……完全不感冒！而且也感觉千篇一律。但是我比较喜欢大自然的那些山山水水的，还有就是我是一名铁杆吃货，西安的美食也是我来西安的一项重要任务！</li>
<li>其实不管去哪里游玩，有一个问题必须先解决掉——住宿！</li>
<li>俗话说<code>“兵马未动，粮草先行”</code>也是这么个理，后方必须有保障！</li>
<li>住宿一般要根据自己的旅行计划来，一般我的方案是走到哪儿住到哪儿;</li>
<li>还有一种省心的方案就是只要在一个城市，找个地理位置居中交通便利的地段一直住下！</li>
<li>其实，我还是喜欢前者，因为不同地段的美食文化什么的，只有住下了才能深入了解。但是还有个弊端就是需要带着行李搬来搬去（这也是旅行尽量轻装出行）。</li>
<li>一般找旅馆就是在地图或者蚂蜂窝上景点附近酒店推荐就可以对比判断（多看看评价以及酒店周边环境），然后千万要打电话确认有没有空房以及房费问题与网络报价是否一致！</li>
<li>但是，我并不推荐提前预定，因为地图有的时候定位不准就会各种找不到，所以最好是找到店以后再定或者直接店付（西安一般150左右就能找到不错的大床房）。<h2 id="gt-吃货攻略"><a href="#gt-吃货攻略" class="headerlink" title="&gt;  # 吃货攻略"></a>&gt;  # 吃货攻略</h2></li>
<li>对于西安景点推荐旅游攻略什么的我还真说不上，因为去了西安我只有两点主题——吃，登华山！但是吃的地方我倒是有几句话要说，很多人去了西安吃的地方就想到了回民街，不错那儿的东西的确多，但是物价也稍微有点儿贵，一般比较适合时间不充足的游客去体验一把西安美食文化，听西安同学说要想吃地地道道的没事儿，就应该去袁家村（咸阳的）因为那里实惠，而且种类繁多（但是因为我没找到去的方法转念一想来回路费都能补差价了就直接在回民街体验了）！如果想去的小伙伴可以提前做做功课！至于去了以后吃什么特色，蚂蜂窝上一搜，各种推荐以及酌情选择就可以！</li>
</ul>
</li>
</ul>
<ul>
<li><img src="http://7xpfpd.com1.z0.glb.clouddn.com/wKgBZ1jREPCABH_2AAw5i4os97Q77%281%29.jpeg" alt=""></li>
</ul>
<ul>
<li><p><img src="http://7xpfpd.com1.z0.glb.clouddn.com/wKgBZ1jREPSAKt9BAB_q1qVZqT812.jpeg" alt=""></p>
</li>
<li><p><img src="http://7xpfpd.com1.z0.glb.clouddn.com/wKgBZ1jREPCABH_2AAw5i4os97Q77.jpeg" alt=""></p>
<h2 id="gt-华山攻略"><a href="#gt-华山攻略" class="headerlink" title="&gt;  # 华山攻略"></a>&gt;  # 华山攻略</h2><ul>
<li>在西安住了一晚第二天早上又简单转了转我就转战华山了，从西安去华山我是坐的高铁（西安北—华山北）30分钟，班次也很多！下了车站找出租就行（切记20元即可去玉泉院），一般来说登山都需要从玉泉院那儿往上爬，玉泉院是不收费的寺院听说陈抟老祖就是在那儿清修，个人感觉还可以。</li>
<li>登华山看日出一般有两种，在山下留宿然后夜爬和白天爬在山上留宿第二天下来，山下宾馆便宜100左右都是，山上就比较贵了，像点样子的就得300＋估计。</li>
<li>夜爬一般需要23点左右就要开始了，这样中间也有个休息缓劲儿的时间（我们那天连休息带爬一共近7个小时）！</li>
<li>爬山之前一定要把登山装备准备好，一般来说<em><code>吃的</code></em>，<em><code>喝的（一般每人1L左右）</code></em>，<em><code>手套（山下超市两三元一副）</code></em>，<em><code>手电</code></em>，<em><code>充电宝</code></em>，<em><code>保暖衣物</code></em>，<em><code>登山包</code></em>，<em><code>雨衣</code></em>。</li>
<li>还有一条就是登山一定要准备好<em><code>登山鞋</code></em>或者<em><code>防滑运动鞋</code></em>！</li>
<li>登华山，切记不要心急，节奏很重要，很多人（包括我）可能检票进去后走了一段觉得路宽又平，一点都不险么，其实，那两三千米你还没有真正开始登……后面有你受的！</li>
<li>还有那些登山拐杖，年轻人别买，登山那就是个累赘！</li>
<li>登华山也简单，只要路没封，跟着路标有就行！有人可能会选择坐汽车跟缆车，首先提示晚上没有，而且我也觉得登山坐那些东西反而丧失了登山的乐趣！</li>
<li>我们是晚上登的，周边景色没看到所以下山也纯走（如果爬山过程中欣赏了抑或觉得累了什么的下山坐缆车什么的也未尝不可，毕竟上山容易下山难）！</li>
<li>看日出，就是去东峰，完事儿可以再做行程安排（我爬完东峰就下来了，体力感觉已经不行了）。还有两件事要提醒大家如果想登山看日出要提前关注天气变化噢，还有就是登山<code>一定要注意安全，一定要注意安全，一定要注意安全！</code></li>
</ul>
</li>
</ul>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;碎碎念&quot;&gt;&lt;a href=&quot;#碎碎念&quot; class=&quot;headerlink&quot; title=&quot;碎碎念&quot;&gt;&lt;/a&gt;碎碎念&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;12月份mac系统升级，黑屏了，Genius Bar 客服告诉我只能格式化，重装新系统。我(。_°☆╲(- – )…..((/- -)/&lt;br&gt;我的博客代码也没备份，一直懒惰，这几个月也没更新博文了。 终于，今天勤奋一会，把博客代码重写重搭了~&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;题记&quot;&gt;&lt;a href=&quot;#题记&quot; class=&quot;headerlink&quot; title=&quot;题记&quot;&gt;&lt;/a&gt;题记&lt;/h2&gt;&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;再有一周就要去陕西赏春了，快按耐不住躁动的心情了~撒欢&lt;/li&gt;
&lt;li&gt;内心憧憬的华山是“三峰森翠倚云棱，凝睇烟萝最上层。” 亦是“云含幽兮月添冷，月凝晖兮江漾影。”华山！等着我们&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://7xpfpd.com1.z0.glb.clouddn.com/f1a03ac79f3df8dc6c623e2bcd11728b46102898.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xpfpd.com1.z0.glb.clouddn.com/fa8355e736d12f2ec4551fda4fc2d562843568a3.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xpfpd.com1.z0.glb.clouddn.com/313ef9198618367ad2e5ce672e738bd4b21ce58f.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;哥们刚刚从陕西那边玩回来，和我们的行程比较匹配，下面引用一下他的攻略&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="旅游" scheme="http://liuhouer.github.io/categories/%E6%97%85%E6%B8%B8/"/>
    
    
      <category term="攻略" scheme="http://liuhouer.github.io/tags/%E6%94%BB%E7%95%A5/"/>
    
      <category term="游记" scheme="http://liuhouer.github.io/tags/%E6%B8%B8%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>创业需要考虑那些细节以及所需成本</title>
    <link href="http://liuhouer.github.io/2016/10/24/%E5%88%9B%E4%B8%9A%E6%88%90%E6%9C%AC%E4%BC%B0%E7%AE%97/"/>
    <id>http://liuhouer.github.io/2016/10/24/创业成本估算/</id>
    <published>2016-10-24T15:46:49.000Z</published>
    <updated>2017-03-23T03:21:21.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>作为一名苦逼的移动互联网创业者，经常会听到外行的朋友们问这样的问题：“做一个网站需要多少钱？”或者“做一个APP需要多少钱？”</p>
<p>3年前，天真的我认为做一个APP顶多5000块钱，网站2000块以内就能搞定。高于这个价格就是唬小孩。后来我确实花过1000块钱买了个模板网页，5000块钱买个模板APP，干了这些傻事。最后的结果就像淘宝上的买家秀和卖家秀的天差地别，钱打了水漂。</p>
<p>本着信天信地不信邪的原则，我们开始组建自己的技术团队，从UI，到后台，前端，安卓，苹果各类程序员和产品经理，组成了一个最基本的APP开发团队。到现在已经做过五个APP，其中三个都获得了融资，另外两个是政府扶持项目。给团队发了将近一年工资，对于一个APP从无到有的开发到底要花多少钱，实在是再清楚不过。</p>
</blockquote>
<h2 id="今天从创业者的角度一起来算一下需要付出多少成本"><a href="#今天从创业者的角度一起来算一下需要付出多少成本" class="headerlink" title="今天从创业者的角度一起来算一下需要付出多少成本"></a>今天从创业者的角度一起来算一下需要付出多少成本</h2><blockquote>
<p>首先，如果你也是创业者，而且满腔热血，那么产品就必须自己开发。因为创业是很牛逼的事，所有的环节都要最好的。把产品技术开发交给外包难免不放心，当时我们也是这么想的。自己懂技术，是相关专业出身还好。但据我了解，一般的创业者难免都不懂。所以，如果你要做一个APP，以此为切入点，首先需要知道至少需要哪些人员配置。</p>
</blockquote>
<h2 id="招兵买马"><a href="#招兵买马" class="headerlink" title="招兵买马"></a>招兵买马</h2><blockquote>
<p>包含研发一个新产品过程中一些常见的工作，团队的结构以架构师兼后台开发1名+安卓2名+iOS开发1名+产品经理1名+前端开发1名+设计师1名，你可能也发现了这些人员配备都是单点的，一旦有人生病或请假，某个职位就会缺失，项目进度就会拖后，创业公司员工任职不稳定可是很正常的现象，所以我们大约配备2个浮动名额，也就是，初始团队大概有9名。估计一般的创业者都想越快越好的让产品开发上线，假设你想的的产品上线期3~6个月。</p>
</blockquote>
<a id="more"></a>
<h2 id="第一步：招人"><a href="#第一步：招人" class="headerlink" title="第一步：招人"></a>第一步：招人</h2><blockquote>
<p>北上广一线深城市还好，只要资金充裕人才不愁，简历丰富挨个筛选。但是在常州这样的二三线城市，一个WEB前端足足招了7个月才有人投简历上门面试。更为可怕的是我们同时付费在“拉勾”“前程无忧”“智联招聘”甚至“赶集”这些非专业平台以及朋友圈，各种无限寻找的情况下。我们从第一个人入职，到团队勉强能够开工一共花了5个月招聘时间。</p>
<p>这里有一个比较好的经验，先把所有的力气去寻找一个志同道合的技术总监，高薪是必须的。但是薪资高了他可以在开发上帮你少走弯路省回来。</p>
<p>所以第一步的花费大概是–招聘平台网站会员费：平均1000元/家*3=3000元。然后是假设你3个月就招聘齐活儿了。</p>
<p>这三个月平均要发4个人工资，试用期内薪资80%算，而且还不用五险一金。常州此类人才一般需要招聘至少有过一年以上开发经验的，要不然开发质量难以保障。</p>
<p>这样人才平均薪资大概在8K左右。所以这三个月你要发（8000元80%试用期4个人*3个月=76800）。</p>
</blockquote>
<h2 id="第二步：场地"><a href="#第二步：场地" class="headerlink" title="第二步：场地"></a>第二步：场地</h2><blockquote>
<p>8人团队可以选择中低端的办公场所，这类的办公场所在常州大约是70元/㎡，大约需要100平米，并不是很好找。</p>
<p>创业孵化器是很不错的选择。在现在的大背景下，孵化器现在很多很容易找。孵化器的租金会比较便宜甚至免费，在接纳创业团队之前一般会签署协议，需要以场地作为股权置换条件，或者是优先投资权。至于孵化器是否划算，得创业团队自己掂量。算上水电、物业，一个月10000左右算比较节省。</p>
</blockquote>
<h2 id="第三步：设备"><a href="#第三步：设备" class="headerlink" title="第三步：设备"></a>第三步：设备</h2><blockquote>
<p>普通的人体工程学椅子价格在150元左右，如果不买工程学椅子用普通的椅子代替，加上桌子平摊成本，桌椅需要200左右。这些一次性付出，6000元可以搞定吧，拍脑袋也得付。</p>
<p>加上设计师和程序猿电脑，配置在4000一台，一共七台包括一台IOS机。开发移动APP需要提供样机，二手就行，安卓系统4部，2000元一部，苹果系统也要4部，3500一部。</p>
<p>好，算一算6000元+4000元7+2000元4+3500*4=56000元</p>
</blockquote>
<h2 id="第四步：工具齐活，正式开始"><a href="#第四步：工具齐活，正式开始" class="headerlink" title="第四步：工具齐活，正式开始"></a>第四步：工具齐活，正式开始</h2><blockquote>
<p>APP开发之前，你知道自己想做个什么样的APP软件，但一般不知道自己具体要做什么东西，需求是什么，产品定位是什么。这时候产品经理就需要出马，跟老板各种沟通、理清需求、找产品定位。</p>
<p>这阶段大概需要花费两周，好说歹说仔细分析，才会把产品的定位、一期的需求想清楚。期间架构师可以开始构思产品的技术架构，还未能正式开工。产品定位以及早期的需求确定出来之后，需要构思产品名称、需求调研、竞品调研分析、注册域名、购置服务器以及周边基础能力（如CDN存储、短信服务、消息推送等）、商标（未注册商标、很多团队就是吃了这个亏）、抢注域名、设计logo。这阶段如果不中途改变计划、不变更产品需求和定位的前提下，最起码花费一周时间。这时候产品的原型、技术架构的雏形也呈现，基本可以进入真刀真枪的干活。</p>
<p>这一步假设域名不需要花大价钱购买，全部费用算起来拍脑袋15000元/年。</p>
<p>其中短信2000，服务器1000一个月。域名等商标注册2000一个，商标，软著，LOGO一次性投入有10000左右。</p>
</blockquote>
<h2 id="第五步：产品版本策划、架构设计"><a href="#第五步：产品版本策划、架构设计" class="headerlink" title="第五步：产品版本策划、架构设计"></a>第五步：产品版本策划、架构设计</h2><blockquote>
<p>看似一切都准备就绪之后，产品开始整理需求，按照需求优先级规划版本。架构师按照产品的发展方向构想，开始着手进入开发环境、生产环境部署、基础代码研发阶段。</p>
<p>很有必要提一下的是，做APP比较常见的两种功能实现方式有native原生和webview<br>方式，这两种方式的优劣不在本文的讨论范围，一般为了保证体验，以原生的方式为主，webview的方式为辅。以原生的方式做开发，版本是尤为重要的。</p>
<p>其一，APP开发完成之后，需要把上架到APP store（假设我们只上iOS和安卓），iOS 的APP Store<br>有冗长的应用审核周期，你必须提前把往后几个中小版本的功能规划好了才不至于在这个环节自乱阵脚；</p>
<p>其二，你的APP安装到用户的手机上时你肯定希望他大部分时候运行的都是最新的版本，如果你的版本更新过于频繁，用户也会嫌烦。</p>
<p>看起来过程似乎非常顺利，产品经理把产品的思路理清之后，开始准备产品V1.0 的规划。</p>
</blockquote>
<h2 id="新产品从无到有常见的工作："><a href="#新产品从无到有常见的工作：" class="headerlink" title="新产品从无到有常见的工作："></a>新产品从无到有常见的工作：</h2><blockquote>
<p>（1）产品官网，产品官网是产品、公司、团队的脸面，让用户进入之后能以最快的速度了解你的定位以及产品特性，也就是什么样的人在为解决什么样的问题，做着什么样的事情。</p>
<p>（2）用户协议。是的，如果用户要注册、使用你的产品，你得起草你的用户协议，跟律师或法务不断沟通调整。</p>
<p>（3）种子用户。你要思考你的第一批种子用户从哪里来，如何组织，怎么管理，他们是检验你产品的第一群人，对于验证你的产品定位、发现产品问题、提升产品体验来说至关重要。</p>
<p>（4）基础数据上报规划。你要知道产品一旦发布，在对用户行为一无所知的情况下，需要收集什么数据来优化、调整你的产品设计，思考你的产品方向。</p>
<p>（5）UI设计与交互标准制定。不能保证产品的UI以及交互一上线就有让用户觉得惊艳的效果，但是必须保证UI/交互在一致性上没有问题。</p>
<p>（6）后台管理系统。如论是查看数据还是内容管理，后台管理系统是你工作的有效辅助，也不能少。</p>
<p>（7）APP。这是你的产品的重中之重，密切观察跟踪。</p>
<p>如果一切顺利，那么在3-6个月之后，你的APP第一版应该有了第一个雏形。</p>
</blockquote>
<h2 id="内部测试、打磨阶段"><a href="#内部测试、打磨阶段" class="headerlink" title="内部测试、打磨阶段"></a>内部测试、打磨阶段</h2><blockquote>
<p>在这个阶段，你要跟设计、研发、种子用户之间保持密切沟通，不断收集问题、发现问题、优化、解决问题，期间可能需要发布1-3个beta子版本。同时，你要想办法保持种子用户的活跃与配合的激情，这是一项艰巨的工作，谁做谁知道。</p>
</blockquote>
<h2 id="发布阶段"><a href="#发布阶段" class="headerlink" title="发布阶段"></a>发布阶段</h2><blockquote>
<p>发布的时候，不算渠道宣传费用，不打广告，上线iOS APP Store<br>需要注册开发者账号，购买证书，也需要花费一定的费用，不多，也就99美元/年。</p>
<p>如果你做得多一些，找安全团队帮你做ac安全评估，这里也要花上一些钱，这里就不算了。至于负载均衡、加速技术什么的，你的APP刚上线，应该用不上。</p>
<p>6个月的时间，一个APP从无到有已经十分迅速。那么这一整个步骤里面。可能人员成本最大，8个人平均薪资是8K。一般当时急着招人都会有其它福利的。</p>
<p>五险一金，公司最低要为每个人补贴1100元左右。十三薪，折合每个月，相当于每个月多发1000元。团队刚招过来没有磨合时间，所以需要尽快出产品，肯定需要加班，加班是要有加班工资的，周末加一天班算200一天。</p>
<p>那么平均每人加班工资是500.将近7个月，肯定有节假日，还需要有节日福利吧，平常肯定有团队建设费用吧。平均每人每月摊头上多100元。</p>
<p>好的，那么一个人一个月平均费用为（8000+1100+1000+200+500+100=10900）</p>
<p>我这里假设招聘完全后，开发只用了4个月上线（这还是算快的）。就是（109004个月8个人=348800元）。这还不算什么，你要想，现在做互联网的哪个是一开始能赚钱的，这批功臣，每个月固定人员开销是87200元。</p>
<p>那么最后，如果你要创业自己组建技术团队的话，从招人到产品制作完成。一共算是招全人3个月，制作4个月。一共7个月计算的总花费是：</p>
<p>人员费用：76800元（招人期间）+ 348800（正式阶段）=425600 房租水电：10000/月*7个月=70000<br>办公设备：56000元 商标等注册服务器：20000元 一共是：425600+70000+56000+10000=571600元</p>
<p>这里还没有算你的市场人员，财务人员，营销推广。而且只算了4个月的正式开发期，每个月你的固定技术人员开销是87200。</p>
<p>所以当有人问自己组建团队做一个APP需要多少钱时，你可以回答一个不太复杂的APP，在像常州这样的2.5线城市，从无到有半年第一个版本出来，至少需要60万。如果在一线城市，至少也是100万。</p>
<p>如果找别的成熟团队或公司做，4个月上架的话，他们的成本大概是87200*4=348800元。不过一般可以接外包的公司，很多类型都已经做过，做一些死板的开发不需要太高的成本。</p>
<p>所以各位苦逼的创业者们。如果自己有信心，口袋里至少有个百来万，可以考虑自己组建技术团队。</p>
<p>但记住最多9个月，9个月后要么融资要么盈利。如果自己只有小几十万，产品盈利性是在后期，那么建议还是还是找个靠谱点的外包公司做，，一点一点从细节完善合同。</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;作为一名苦逼的移动互联网创业者，经常会听到外行的朋友们问这样的问题：“做一个网站需要多少钱？”或者“做一个APP需要多少钱？”&lt;/p&gt;
&lt;p&gt;3年前，天真的我认为做一个APP顶多5000块钱，网站2000块以内就能搞定。高于这个价格就是唬小孩。后来我确实花过1000块钱买了个模板网页，5000块钱买个模板APP，干了这些傻事。最后的结果就像淘宝上的买家秀和卖家秀的天差地别，钱打了水漂。&lt;/p&gt;
&lt;p&gt;本着信天信地不信邪的原则，我们开始组建自己的技术团队，从UI，到后台，前端，安卓，苹果各类程序员和产品经理，组成了一个最基本的APP开发团队。到现在已经做过五个APP，其中三个都获得了融资，另外两个是政府扶持项目。给团队发了将近一年工资，对于一个APP从无到有的开发到底要花多少钱，实在是再清楚不过。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;今天从创业者的角度一起来算一下需要付出多少成本&quot;&gt;&lt;a href=&quot;#今天从创业者的角度一起来算一下需要付出多少成本&quot; class=&quot;headerlink&quot; title=&quot;今天从创业者的角度一起来算一下需要付出多少成本&quot;&gt;&lt;/a&gt;今天从创业者的角度一起来算一下需要付出多少成本&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;首先，如果你也是创业者，而且满腔热血，那么产品就必须自己开发。因为创业是很牛逼的事，所有的环节都要最好的。把产品技术开发交给外包难免不放心，当时我们也是这么想的。自己懂技术，是相关专业出身还好。但据我了解，一般的创业者难免都不懂。所以，如果你要做一个APP，以此为切入点，首先需要知道至少需要哪些人员配置。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;招兵买马&quot;&gt;&lt;a href=&quot;#招兵买马&quot; class=&quot;headerlink&quot; title=&quot;招兵买马&quot;&gt;&lt;/a&gt;招兵买马&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;包含研发一个新产品过程中一些常见的工作，团队的结构以架构师兼后台开发1名+安卓2名+iOS开发1名+产品经理1名+前端开发1名+设计师1名，你可能也发现了这些人员配备都是单点的，一旦有人生病或请假，某个职位就会缺失，项目进度就会拖后，创业公司员工任职不稳定可是很正常的现象，所以我们大约配备2个浮动名额，也就是，初始团队大概有9名。估计一般的创业者都想越快越好的让产品开发上线，假设你想的的产品上线期3~6个月。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="创业" scheme="http://liuhouer.github.io/categories/%E5%88%9B%E4%B8%9A/"/>
    
    
      <category term="创业" scheme="http://liuhouer.github.io/tags/%E5%88%9B%E4%B8%9A/"/>
    
      <category term="败家" scheme="http://liuhouer.github.io/tags/%E8%B4%A5%E5%AE%B6/"/>
    
  </entry>
  
  <entry>
    <title>Spring配置数据源的几种形式</title>
    <link href="http://liuhouer.github.io/2016/09/20/Spring%E9%85%8D%E7%BD%AE%E6%95%B0%E6%8D%AE%E6%BA%90%E7%9A%84%E5%87%A0%E7%A7%8D%E5%BD%A2%E5%BC%8F/"/>
    <id>http://liuhouer.github.io/2016/09/20/Spring配置数据源的几种形式/</id>
    <published>2016-09-20T15:46:49.000Z</published>
    <updated>2017-03-23T02:13:26.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Spring配置数据源的几种形式"><a href="#Spring配置数据源的几种形式" class="headerlink" title="Spring配置数据源的几种形式"></a>Spring配置数据源的几种形式</h1><blockquote>
<p>由于我的网站之前用的c3p0数据连接池配置，总是引发一些莫名其妙的错误，几次内存泄漏都和这个有关系，google之发现好多人都发现了这些bug.<br>于是了解了一下常见的数据源的配置，并改成了dbcp的配置方案。</p>
</blockquote>
<p>Spring中提供了4种不同形式的数据源配置方式：</p>
<ul>
<li><p>1、Spring自带的数据源(DriverMangerDataSource);</p>
</li>
<li><p>2、DBCP数据源;</p>
</li>
<li><p>3、C3P0数据源;</p>
</li>
<li><p>4、JNDI数据源。</p>
</li>
</ul>
<p>以上数据源配置需要用的Jar包在<a href="http://www.java2s.com/Code/Jar/c/Catalogc.htm中都可以下载到" target="_blank" rel="external">http://www.java2s.com/Code/Jar/c/Catalogc.htm中都可以下载到</a></p>
<p>下面详细介绍这四种数据源配置方式：</p>
<h2 id="1-DriverMangerDataSource"><a href="#1-DriverMangerDataSource" class="headerlink" title="1. DriverMangerDataSource"></a>1. DriverMangerDataSource</h2><blockquote>
<p>使用org.springframework.jdbc.datasource.DriverManagerDataSource<br>说明：DriverManagerDataSource建立连接是只要有连接就新建一个connection,根本没有连接池的作用。</p>
</blockquote>
<p>XML代码</p>
<figure class="highlight vbscript-html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&lt;bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource"&gt; </div><div class="line">          &lt;property name="driverClassName"&gt;&lt;value&gt;$&#123;jdbc.driverClassName&#125;&lt;/value&gt;&lt;/property&gt; </div><div class="line">          &lt;property name="url"&gt;&lt;value&gt;$&#123;jdbc.url&#125;&lt;/value&gt;&lt;/property&gt; </div><div class="line">          &lt;property name="username"&gt;&lt;value&gt;$&#123;jdbc.username&#125;&lt;/value&gt;&lt;/property&gt; </div><div class="line">          &lt;property name="password"&gt;&lt;value&gt;$&#123;jdbc.password&#125;&lt;/value&gt;&lt;/property&gt; </div><div class="line"></div><div class="line">&lt;/bean&gt;</div></pre></td></tr></table></figure>
<h2 id="2-DBCP数据源"><a href="#2-DBCP数据源" class="headerlink" title="2.DBCP数据源"></a>2.DBCP数据源</h2><blockquote>
<p>使用org.apache.commons.dbcp.BasicDataSource<br>说明:这是一种推荐说明的数据源配置方式，它真正使用了连接池技术</p>
<p>DBCP的配置依赖于2个jar包commons-dbcp.jar，commons-pool.jar。</p>
</blockquote>
<p>XML代码：</p>
<figure class="highlight vbscript-html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line">&lt;!-- 使用org.apache.commons.dbcp.BasicDataSource   </div><div class="line">         说明:这是一种推荐说明的数据源配置方式，它真正使用了连接池技术 --&gt;</div><div class="line">&lt;bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"</div><div class="line">destroy-method="close"&gt;</div><div class="line">&lt;property name="driverClassName" value="$&#123;jdbc.driver&#125;" /&gt;</div><div class="line">&lt;property name="url" value="$&#123;jdbc.url&#125;" /&gt;</div><div class="line">&lt;property name="username" value="$&#123;jdbc.username&#125;" /&gt;</div><div class="line">&lt;property name="password" value="$&#123;jdbc.password&#125;" /&gt;</div><div class="line">&lt;!--maxActive: 最大连接数量 --&gt;</div><div class="line">&lt;property name="maxActive" value="150" /&gt;</div><div class="line">&lt;!--minIdle: 最小空闲连接 --&gt;</div><div class="line">&lt;property name="minIdle" value="5" /&gt;</div><div class="line">&lt;!--maxIdle: 最大空闲连接 --&gt;</div><div class="line">&lt;property name="maxIdle" value="20" /&gt;</div><div class="line">&lt;!--initialSize: 初始化连接 --&gt;</div><div class="line">&lt;property name="initialSize" value="30" /&gt;</div><div class="line">&lt;!-- 连接被泄露时是否打印 --&gt;</div><div class="line">&lt;property name="logAbandoned" value="true" /&gt;</div><div class="line">&lt;!--removeAbandoned: 是否自动回收超时连接 --&gt;</div><div class="line">&lt;property name="removeAbandoned" value="true" /&gt;</div><div class="line">&lt;!--removeAbandonedTimeout: 超时时间(以秒数为单位) --&gt;</div><div class="line">&lt;property name="removeAbandonedTimeout" value="10" /&gt;</div><div class="line">&lt;!--maxWait: 超时等待时间以毫秒为单位 1000等于60秒 --&gt;</div><div class="line">&lt;property name="maxWait" value="1000" /&gt;</div><div class="line">&lt;!-- 在空闲连接回收器线程运行期间休眠的时间值,以毫秒为单位. --&gt;</div><div class="line">&lt;property name="timeBetweenEvictionRunsMillis" value="10000" /&gt;</div><div class="line">&lt;!-- 在每次空闲连接回收器线程(如果有)运行时检查的连接数量 --&gt;</div><div class="line">&lt;property name="numTestsPerEvictionRun" value="10" /&gt;</div><div class="line">&lt;!-- 1000 * 60 * 30 连接在池中保持空闲而不被空闲连接回收器线程 --&gt;</div><div class="line">&lt;property name="minEvictableIdleTimeMillis" value="10000" /&gt;</div><div class="line">&lt;property name="validationQuery" value="SELECT NOW() FROM DUAL" /&gt;</div><div class="line">&lt;/bean&gt;</div></pre></td></tr></table></figure>
<p>上面代码的解释：</p>
<blockquote>
<p>BasicDataSource提供了close()方法关闭数据源，所以必须设定destroy-method=”close”属性，<br>以便Spring容器关闭时，数据源能够正常关闭。除以上必须的数据源属性外，还有一些常用的属性：</p>
<p>defaultAutoCommit：设置从数据源中返回的连接是否采用自动提交机制，默认值为 true；<br>defaultReadOnly：设置数据源是否仅能执行只读操作， 默认值为 false；<br>maxActive：最大连接数据库连接数，设置为0时，表示没有限制； maxIdle：最大等待连接中的数量，设置为0时，表示没有限制；<br>maxWait：最大等待秒数，单位为毫秒， 超过时间会报出错误信息；<br>validationQuery：用于验证连接是否成功的查询SQL语句，SQL语句必须至少要返回一行数据，<br>如你可以简单地设置为：“select count(*) from user”； removeAbandoned：是否自我中断，默认是<br>false ；<br>removeAbandonedTimeout：几秒后数据连接会自动断开，在removeAbandoned为true，提供该值；<br>logAbandoned：是否记录中断事件， 默认为 false；</p>
</blockquote>
<a id="more"></a>
<h2 id="3-C3P0数据源"><a href="#3-C3P0数据源" class="headerlink" title="3.C3P0数据源"></a>3.C3P0数据源</h2><blockquote>
<p>C3P0是一个开放源代码的JDBC数据源实现项目，C3P0依赖于jar包c3p0.jar。</p>
</blockquote>
<p>XML代码：</p>
<figure class="highlight vbscript-html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">&lt;!-- 配置数据源 c3p0 --&gt;</div><div class="line">&lt;bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"</div><div class="line">destroy-method="close"&gt;</div><div class="line">&lt;property name="driverClass" value="$&#123;jdbc.driver&#125;" /&gt;</div><div class="line">&lt;property name="jdbcUrl" value="$&#123;jdbc.url&#125;" /&gt;</div><div class="line">&lt;property name="user" value="$&#123;jdbc.username&#125;" /&gt;</div><div class="line">&lt;property name="password" value="$&#123;jdbc.password&#125;" /&gt;</div><div class="line"></div><div class="line">&lt;!-- 请求超时时间 --&gt;</div><div class="line">&lt;!--当连接池用完时客户端调用getConnection()后等待获取新连接的时间，超时后将抛出</div><div class="line">SQLException,如设为0则无限期等待。单位毫秒。Default: 0 --&gt;</div><div class="line">&lt;property name="checkoutTimeout" value="5000" /&gt;</div><div class="line">&lt;!-- 每60秒检查所有连接池中的空闲连接。默认值: 0，不检查 --&gt;</div><div class="line">&lt;property name="idleConnectionTestPeriod" value="60" /&gt;</div><div class="line">&lt;!-- 连接数据库连接池最大空闲时间 --&gt;</div><div class="line">&lt;property name="maxIdleTime" value="30" /&gt;</div><div class="line">&lt;!-- 连接池初始化连接数 --&gt;</div><div class="line">&lt;property name="initialPoolSize" value="5" /&gt;</div><div class="line">&lt;property name="minPoolSize" value="5" /&gt;</div><div class="line">&lt;property name="maxPoolSize" value="20" /&gt;</div><div class="line">&lt;!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。默认值: 3 --&gt;</div><div class="line">&lt;property name="acquireIncrement" value="5" /&gt;</div><div class="line">&lt;!--定义在从数据库获取新连接失败后重复尝试的次数。Default: 30 --&gt;</div><div class="line">&lt;property name="acquireRetryAttempts" value="10" /&gt;</div><div class="line">&lt;!--获取连接失败将会引起所有等待连接池来获取连接的线程抛出异常。但是数据源仍有效</div><div class="line">保留，并在下次调用getConnection()的时候继续尝试获取连接。如果设为true，那么在尝试</div><div class="line">获取连接失败后该数据源将申明已断开并永久关闭。Default: false--&gt;</div><div class="line">&lt;property name="breakAfterAcquireFailure" value="true" /&gt;</div><div class="line">&lt;!--因性能消耗大请只在需要的时候使用它。如果设为true那么在每个connection提交的</div><div class="line">时候都将校验其有效性。建议使用idleConnectionTestPeriod或automaticTestTable</div><div class="line">等方法来提升连接测试的性能。Default: false --&gt;</div><div class="line">&lt;property name="testConnectionOnCheckout" value="false" /&gt;</div><div class="line">&lt;/bean&gt;</div></pre></td></tr></table></figure>
<h2 id="4-JNDI数据源"><a href="#4-JNDI数据源" class="headerlink" title="4.JNDI数据源"></a>4.JNDI数据源</h2><blockquote>
<p>使用org.springframework.jndi.JndiObjectFactoryBean<br>说明:JndiObjectFactoryBean 能够通过JNDI获取DataSource<br>如果应用配置在高性能的应用服务器（如WebLogic或Websphere,tomcat等）上，我们可能更希望使用应用服务器本身提供的数据源。应用服务器的数据源<br>使用JNDI开放调用者使用，Spring为此专门提供引用JNDI资源的JndiObjectFactoryBean类。</p>
</blockquote>
<p>xml 代码：</p>
<figure class="highlight nix"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">&lt;bean <span class="attr">id="dataSource"</span> <span class="attr">class="org.springframework.jndi.JndiObjectFactoryBean"&gt;</span></div><div class="line"></div><div class="line">&lt;property <span class="attr">name="jndiName"</span> <span class="attr">value="java:comp/env/jdbc/orclight"/&gt;</span>        </div><div class="line"></div><div class="line">&lt;/bean&gt;</div><div class="line"></div><div class="line">&lt;beans <span class="attr">xmlns=http://www.springframework.org/schema/beans</span></div><div class="line"></div><div class="line">xmlns:<span class="attr">xsi=http://www.w3.org/2001/XMLSchema-instance</span></div><div class="line"></div><div class="line">xmlns:<span class="attr">jee=http://www.springframework.org/schema/jee</span></div><div class="line"></div><div class="line">xsi:<span class="attr">schemaLocation="http://www.springframework.org/schema/beans</span></div><div class="line"></div><div class="line">http://www.springframework.org/schema/beans/spring-beans-<span class="number">2.0</span>.xsd</div><div class="line"></div><div class="line">http://www.springframework.org/schema/jee</div><div class="line"></div><div class="line">http://www.springframework.org/schema/jee/spring-jee-<span class="number">2.0</span>.xsd<span class="string">"&gt;</span></div><div class="line"></div><div class="line">&lt;jee:jndi-lookup id="dataSource<span class="string">" jndi-name="</span> java:comp/env/jdbc/orclight<span class="string">"/&gt;</span></div><div class="line"></div><div class="line">&lt;/beans\&gt;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Spring配置数据源的几种形式&quot;&gt;&lt;a href=&quot;#Spring配置数据源的几种形式&quot; class=&quot;headerlink&quot; title=&quot;Spring配置数据源的几种形式&quot;&gt;&lt;/a&gt;Spring配置数据源的几种形式&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;由于我的网站之前用的c3p0数据连接池配置，总是引发一些莫名其妙的错误，几次内存泄漏都和这个有关系，google之发现好多人都发现了这些bug.&lt;br&gt;于是了解了一下常见的数据源的配置，并改成了dbcp的配置方案。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Spring中提供了4种不同形式的数据源配置方式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;1、Spring自带的数据源(DriverMangerDataSource);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;2、DBCP数据源;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;3、C3P0数据源;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;4、JNDI数据源。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以上数据源配置需要用的Jar包在&lt;a href=&quot;http://www.java2s.com/Code/Jar/c/Catalogc.htm中都可以下载到&quot;&gt;http://www.java2s.com/Code/Jar/c/Catalogc.htm中都可以下载到&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;下面详细介绍这四种数据源配置方式：&lt;/p&gt;
&lt;h2 id=&quot;1-DriverMangerDataSource&quot;&gt;&lt;a href=&quot;#1-DriverMangerDataSource&quot; class=&quot;headerlink&quot; title=&quot;1. DriverMangerDataSource&quot;&gt;&lt;/a&gt;1. DriverMangerDataSource&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;使用org.springframework.jdbc.datasource.DriverManagerDataSource&lt;br&gt;说明：DriverManagerDataSource建立连接是只要有连接就新建一个connection,根本没有连接池的作用。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;XML代码&lt;/p&gt;
&lt;figure class=&quot;highlight vbscript-html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;bean id=&quot;dataSource&quot; class=&quot;org.springframework.jdbc.datasource.DriverManagerDataSource&quot;&amp;gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          &amp;lt;property name=&quot;driverClassName&quot;&amp;gt;&amp;lt;value&amp;gt;$&amp;#123;jdbc.driverClassName&amp;#125;&amp;lt;/value&amp;gt;&amp;lt;/property&amp;gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          &amp;lt;property name=&quot;url&quot;&amp;gt;&amp;lt;value&amp;gt;$&amp;#123;jdbc.url&amp;#125;&amp;lt;/value&amp;gt;&amp;lt;/property&amp;gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          &amp;lt;property name=&quot;username&quot;&amp;gt;&amp;lt;value&amp;gt;$&amp;#123;jdbc.username&amp;#125;&amp;lt;/value&amp;gt;&amp;lt;/property&amp;gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          &amp;lt;property name=&quot;password&quot;&amp;gt;&amp;lt;value&amp;gt;$&amp;#123;jdbc.password&amp;#125;&amp;lt;/value&amp;gt;&amp;lt;/property&amp;gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;/bean&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;2-DBCP数据源&quot;&gt;&lt;a href=&quot;#2-DBCP数据源&quot; class=&quot;headerlink&quot; title=&quot;2.DBCP数据源&quot;&gt;&lt;/a&gt;2.DBCP数据源&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;使用org.apache.commons.dbcp.BasicDataSource&lt;br&gt;说明:这是一种推荐说明的数据源配置方式，它真正使用了连接池技术&lt;/p&gt;
&lt;p&gt;DBCP的配置依赖于2个jar包commons-dbcp.jar，commons-pool.jar。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;XML代码：&lt;/p&gt;
&lt;figure class=&quot;highlight vbscript-html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;!-- 使用org.apache.commons.dbcp.BasicDataSource   &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;         说明:这是一种推荐说明的数据源配置方式，它真正使用了连接池技术 --&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;bean id=&quot;dataSource&quot; class=&quot;org.apache.commons.dbcp.BasicDataSource&quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;destroy-method=&quot;close&quot;&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;property name=&quot;driverClassName&quot; value=&quot;$&amp;#123;jdbc.driver&amp;#125;&quot; /&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;property name=&quot;url&quot; value=&quot;$&amp;#123;jdbc.url&amp;#125;&quot; /&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;property name=&quot;username&quot; value=&quot;$&amp;#123;jdbc.username&amp;#125;&quot; /&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;property name=&quot;password&quot; value=&quot;$&amp;#123;jdbc.password&amp;#125;&quot; /&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;!--maxActive: 最大连接数量 --&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;property name=&quot;maxActive&quot; value=&quot;150&quot; /&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;!--minIdle: 最小空闲连接 --&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;property name=&quot;minIdle&quot; value=&quot;5&quot; /&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;!--maxIdle: 最大空闲连接 --&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;property name=&quot;maxIdle&quot; value=&quot;20&quot; /&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;!--initialSize: 初始化连接 --&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;property name=&quot;initialSize&quot; value=&quot;30&quot; /&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;!-- 连接被泄露时是否打印 --&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;property name=&quot;logAbandoned&quot; value=&quot;true&quot; /&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;!--removeAbandoned: 是否自动回收超时连接 --&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;property name=&quot;removeAbandoned&quot; value=&quot;true&quot; /&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;!--removeAbandonedTimeout: 超时时间(以秒数为单位) --&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;property name=&quot;removeAbandonedTimeout&quot; value=&quot;10&quot; /&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;!--maxWait: 超时等待时间以毫秒为单位 1000等于60秒 --&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;property name=&quot;maxWait&quot; value=&quot;1000&quot; /&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;!-- 在空闲连接回收器线程运行期间休眠的时间值,以毫秒为单位. --&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;property name=&quot;timeBetweenEvictionRunsMillis&quot; value=&quot;10000&quot; /&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;!-- 在每次空闲连接回收器线程(如果有)运行时检查的连接数量 --&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;property name=&quot;numTestsPerEvictionRun&quot; value=&quot;10&quot; /&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;!-- 1000 * 60 * 30 连接在池中保持空闲而不被空闲连接回收器线程 --&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;property name=&quot;minEvictableIdleTimeMillis&quot; value=&quot;10000&quot; /&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;property name=&quot;validationQuery&quot; value=&quot;SELECT NOW() FROM DUAL&quot; /&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;/bean&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面代码的解释：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;BasicDataSource提供了close()方法关闭数据源，所以必须设定destroy-method=”close”属性，&lt;br&gt;以便Spring容器关闭时，数据源能够正常关闭。除以上必须的数据源属性外，还有一些常用的属性：&lt;/p&gt;
&lt;p&gt;defaultAutoCommit：设置从数据源中返回的连接是否采用自动提交机制，默认值为 true；&lt;br&gt;defaultReadOnly：设置数据源是否仅能执行只读操作， 默认值为 false；&lt;br&gt;maxActive：最大连接数据库连接数，设置为0时，表示没有限制； maxIdle：最大等待连接中的数量，设置为0时，表示没有限制；&lt;br&gt;maxWait：最大等待秒数，单位为毫秒， 超过时间会报出错误信息；&lt;br&gt;validationQuery：用于验证连接是否成功的查询SQL语句，SQL语句必须至少要返回一行数据，&lt;br&gt;如你可以简单地设置为：“select count(*) from user”； removeAbandoned：是否自我中断，默认是&lt;br&gt;false ；&lt;br&gt;removeAbandonedTimeout：几秒后数据连接会自动断开，在removeAbandoned为true，提供该值；&lt;br&gt;logAbandoned：是否记录中断事件， 默认为 false；&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="java" scheme="http://liuhouer.github.io/categories/java/"/>
    
    
      <category term="java" scheme="http://liuhouer.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>使用 django-blog-zinnia 搭建个人博客</title>
    <link href="http://liuhouer.github.io/2016/09/09/%E4%BD%BF%E7%94%A8%20django-blog-zinnia%20%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://liuhouer.github.io/2016/09/09/使用 django-blog-zinnia 搭建个人博客/</id>
    <published>2016-09-09T15:46:49.000Z</published>
    <updated>2017-03-23T02:13:26.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>目前网上搭建个人博客的方案很多，虽然使用诸如 Wordpress ( PHP )、Hexo ( Node.js )<br>等可以方便快速地搭建一款功能齐全的高性能个人博客，但是本文将尝试一种更为小众化的方案 —— 一款基于 django-blog-zinnia<br>( Python ) 的个人博客应用。 django-blog-zinnia<br>虽然小巧，但是具备了个人博客应用的全部基础功能，且具有很高的拓展性，并且开箱即用。以下是官方列出的一些特性：</p>
</blockquote>
<ul>
<li><p>评论</p>
</li>
<li><p>站点地图（用于搜索引擎优化）</p>
</li>
<li>文章归档视图（自动按时间归档博文，包括年、月、星期、日各个时间维度）</li>
<li>RSS 或者 Atom Feed</li>
<li>分类和标签云</li>
<li>全文搜索</li>
<li>Markdown 语法标记</li>
<li>等等其他一些博客应用具备的全部基本功能。</li>
<li>你可以参照它的官方文档 ( django-blog-zinnia documentation ) 的 installation 部分进行初始的安装，但本文也会给出详细的安装教程，并对相关的细节进行进一步补充，对功能进行进一步地拓展设置。</li>
</ul>
<p><strong>注：本博客在写作时每一个步骤均在实际环境下测试了一遍，基本确保没有问题。但是由于个人写作时的疏忽或者计算机环境的差异，也可能会有一些错误导致你卡在某个地方无法继续进行下去。如果是这样请给我留言，我和你一起排查问题，如果发现是博客写作时的错误也好使我尽快更正。</strong></p>
<h2 id="建立虚拟环境"><a href="#建立虚拟环境" class="headerlink" title="建立虚拟环境"></a>建立虚拟环境</h2><p>因为在安装 django-blog-zinnia 的过程中会安装很多其他第三方依赖包，因此强烈建议使用虚拟环境安装，以免把系统环境弄乱。</p>
<p>假设你的 python 版本是 3.4 或更高（建议使用 3.4 以上版本，当然 django-blog-zinnia 本身是兼容 python2.7 及以上版本的），且已经安装了虚拟环境管理工具 virtualenv，如果没有的话通过<code>pip install virtualenv</code> 安装。打开命令行，进入到你想建立虚拟环境的目录，通过命令 <code>virtualenv zinnia_demo_env</code> 创建一个名为 zinnia_demo_env 的虚拟环境，当然 zinnia_demo_env 这个目录名你可以任意指定。进入到创建的虚拟环境的 Scripts 目录下，输入 activate 命令激活虚拟环境，此时命令行前多了一个 ( zinnia_demo_env ) 说明已经激活，例如我的是：</p>
<figure class="highlight tex"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">(zinnia_demo_env) D:<span class="tag">\<span class="name">Users</span></span><span class="tag">\<span class="name">zmrenwu</span></span><span class="tag">\<span class="name">Envs</span></span><span class="tag">\<span class="name">zinnia</span></span>_demo_env<span class="tag">\<span class="name">Scripts</span></span>&gt;</div></pre></td></tr></table></figure>
<p>通过 pip install django==1.9.6 安装 django，建议使用 1.9.6 版本，当然 &gt;=1.9 的版本都是兼容的，但注意目前不兼容 django1.10。</p>
<a id="more"></a>
<h2 id="建立-django-工程"><a href="#建立-django-工程" class="headerlink" title="建立 django 工程"></a>建立 django 工程</h2><p>进入你喜欢的目录（确保依然在虚拟环境中，如果没有则按照上面的方法重新开启，且下边的操作默认都在虚拟环境中运行，因此不要退出），通过命令<code>python django-admin.py startproject zinnia_demo</code> 创建一个 django 工程。这里 zinnia_demo 是项目名，可以取任何你喜欢的名字。此时你会发现多了一个名为 zinnia_demo 的目录，这样 django 工程就建立好了。进入到这个目录，会看到有一个 manage.py 文件，尝试运行命令 <code>python manage.py runserver</code>，不报错的话，在浏览器输入 127.0.0.1:8000，看到如下字样说明 django 工程已经可以正确运行。</p>
<blockquote>
<p>It worked! Congratulations on your first Django-powered page. Of<br>course, you haven’t actually done any work yet. Next, start your first<br>app by running python manage.py startapp app_label.</p>
<p>You’re seeing this message because you have DEBUG = True in your<br>Django settings file and you haven’t configured any URLs. Get to work!<br>按 Ctrl + c 退出服务器。</p>
</blockquote>
<h2 id="安装-zinnia-及其依赖"><a href="#安装-zinnia-及其依赖" class="headerlink" title="安装 zinnia 及其依赖"></a>安装 zinnia 及其依赖</h2><p>在虚拟环境中输入 <code>pip install django-blog-zinnia</code> 安装 django-blog-zinnia，必要的依赖其会自动帮我们安装，但是一些拓展依赖需要我们手动安装，包括：</p>
<p><code>pip install markdown</code>安装 <em>markdown</em>，以便使博客文章支持 markdown 格式的文本。</p>
<p><code>pip install pygments</code> 安装 <em>pygments</em>，以便支持代码语法高亮。</p>
<h2 id="设置-settings-py-文件"><a href="#设置-settings-py-文件" class="headerlink" title="设置 settings.py 文件"></a>设置 settings.py 文件</h2><p>进入到 zinnia_demo/zinnia_demo （当然你可能设置了其他项目名，但我相信你能找到），打开 settings.py 文件（用文本编辑器或者 python IDE 打开，不要直接运行），在 INSTALL_APPS 列表里添加以下的 APP，这些 APP 都是 django-blog-zinnia 依赖运行的 APP ：</p>
<figure class="highlight sml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">zinnia_demo/zinnia_demo/settings.py</div><div class="line"></div><div class="line"><span class="type">INSTALLED_APPS</span> = [</div><div class="line">工程建立时默认添加的app</div><div class="line"><span class="symbol">'django</span>.contrib.admin',</div><div class="line"><span class="symbol">'django</span>.contrib.auth',</div><div class="line"><span class="symbol">'django</span>.contrib.contenttypes',</div><div class="line"><span class="symbol">'django</span>.contrib.sessions',</div><div class="line"><span class="symbol">'django</span>.contrib.messages',</div><div class="line"><span class="symbol">'django</span>.contrib.staticfiles',</div><div class="line"></div><div class="line">项目添加的app</div><div class="line"><span class="symbol">'django</span>.contrib.sites',</div><div class="line"><span class="symbol">'django_comments'</span>,</div><div class="line"><span class="symbol">'mptt'</span>,</div><div class="line"><span class="symbol">'tagging'</span>,</div><div class="line"><span class="symbol">'zinnia'</span>,</div><div class="line">]</div></pre></td></tr></table></figure>
<p>在 TEMPLATES 列表的如下位置加入 <code>zinnia.context_processors.version</code> ，当然这一步是可选的，其作用只是在博客页面的底部显示一个django-blog-zinnia 的版本号：</p>
<figure class="highlight nimrod"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">zinnia_demo/zinnia_demo/settings.py</div><div class="line"></div><div class="line"><span class="type">TEMPLATES</span> = [</div><div class="line">&#123;</div><div class="line">'<span class="type">BACKEND</span>': 'django.<span class="keyword">template</span>.backends.django.<span class="type">DjangoTemplates</span>',</div><div class="line">'<span class="type">DIRS</span>': [],</div><div class="line">'<span class="type">APP_DIRS</span>': <span class="type">True</span>,</div><div class="line">'<span class="type">OPTIONS</span>': &#123;</div><div class="line">'context_processors': [</div><div class="line">'django.<span class="keyword">template</span>.context_processors.debug',</div><div class="line">'django.<span class="keyword">template</span>.context_processors.request',</div><div class="line">'django.contrib.auth.context_processors.auth',</div><div class="line">'django.contrib.messages.context_processors.messages',</div><div class="line"></div><div class="line">添加这句</div><div class="line">'zinnia.context_processors.version',  <span class="comment"># Optional</span></div><div class="line">],</div><div class="line">&#125;,</div><div class="line">&#125;,</div><div class="line">]</div></pre></td></tr></table></figure>
<p>在 ALLOWED_HOSTS = 的下面添加 SITE_ID = 1</p>
<figure class="highlight protobuf"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">zinnia_demo/zinnia_demo/settings.py</div><div class="line"></div><div class="line">ALLOWED_HOSTS = []</div><div class="line">SITE_ID = <span class="number">1</span></div></pre></td></tr></table></figure>
<p>并修改语言和时区，获得更友善的语言和时间显示，注意 + 号表示添加的行，- 号表示删去的行：</p>
<figure class="highlight sml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">zinnia_demo/zinnia_demo/settings.py</div><div class="line"></div><div class="line"><span class="type">LANGUAGE_CODE</span> = <span class="symbol">'en</span>-us'</div><div class="line"><span class="type">LANGUAGE_CODE</span> = <span class="symbol">'zh</span>-hans'</div><div class="line"></div><div class="line"><span class="type">TIME_ZONE</span> = <span class="symbol">'UTC'</span></div><div class="line"><span class="type">TIME_ZONE</span> = <span class="symbol">'Asia</span>/<span class="type">Shanghai'</span></div></pre></td></tr></table></figure>
<h2 id="设置-urls-py-文件"><a href="#设置-urls-py-文件" class="headerlink" title="设置 urls.py 文件"></a>设置 urls.py 文件</h2><p>打开相同目录下的 urls.py 文件，做如下修改，注意 + 号表示添加的行，- 号表示删去的行：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">zinnia_demo/zinnia_demo/urls.py</div><div class="line"></div><div class="line"><span class="keyword">from</span> django.conf.urls <span class="keyword">import</span> url</div><div class="line"><span class="keyword">from</span> django.conf.urls <span class="keyword">import</span> url,include</div><div class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</div><div class="line"></div><div class="line">urlpatterns = [</div><div class="line">url(<span class="string">r'^admin/'</span>, admin.site.urls),</div><div class="line">url(<span class="string">r'^weblog/'</span>, include(<span class="string">'zinnia.urls'</span>)),</div><div class="line">    url(<span class="string">r'^comments/'</span>, include(<span class="string">'django_comments.urls'</span>)),</div><div class="line">]</div></pre></td></tr></table></figure>
<h2 id="同步数据库并创建后台管理员账户"><a href="#同步数据库并创建后台管理员账户" class="headerlink" title="同步数据库并创建后台管理员账户"></a>同步数据库并创建后台管理员账户</h2><p>在 manage.py 文件所在目录下输入 <code>python manage.py migrate</code> 建立相应的数据库表结构。此时会看到目录下多了一个 db.sqlite 文件，这是存储博客数据的数据库文件，默认使用的 sqlite3。输入命令 <code>python manage.py createsuperuser</code> 创建后台管理员账户，命令行会提示你输入用户名、邮箱、密码。注意密码输入时不会有任何显示，只管输下去就行。</p>
<h2 id="开启开发服务器"><a href="#开启开发服务器" class="headerlink" title="开启开发服务器"></a>开启开发服务器</h2><p>再次运行<code>python manage.py runserver</code> 开启开发服务器，在浏览器输入 <code>127.0.0.1:8000/weblog</code> 将看到博客的首页面。输入 <em>127.0.0.1:8000/admin</em> 会进入后台登录页面，输入刚才创建的管理员账户用户名和密码就可以登录到后台管理界面。在日志后面点击增加按钮尝试着添加一篇博客看看！再次进入 <em>127.0.0.1:8000/weblog</em> 就可以看到刚才发表的博客了。</p>
<p><img src="http://o8a5h1k2v.bkt.clouddn.com/16-9-8/33882098.jpg" alt=""></p>
<p>至此基本的博客已经搭建完毕，接下来是一些可选功能拓展，包括 markdown 语法支持，代码高亮，bootstrap 主题的安装。</p>
<h2 id="OPTIONAL-Markdown-语法支持"><a href="#OPTIONAL-Markdown-语法支持" class="headerlink" title="( OPTIONAL ) Markdown 语法支持"></a>( OPTIONAL ) Markdown 语法支持</h2><p>再次打开 settings.py 文件，在文件的最后添加：</p>
<figure class="highlight sml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">zinnia_demo/zinnia_demo/settings.py</div><div class="line"></div><div class="line">...</div><div class="line"><span class="type">ZINNIA_MARKUP_LANGUAGE</span> = <span class="symbol">'markdown'</span></div><div class="line"><span class="type">ZINNIA_MARKDOWN_EXTENSIONS</span> = [<span class="symbol">'markdown</span>.extensions.extra', <span class="symbol">'markdown</span>.extensions.codehilite']</div></pre></td></tr></table></figure>
<p>bingo！！</p>
<p>ZINNIA_MARKUP_LANGUAGE 指明了使用 markdown 语法标记，ZINNIA_MARKDOWN_EXTENSIONS 做了两个拓展，其中 markdown.extensions.codehilite 表示支持语法高亮，markdown.extensions.extra 包含的特性请参见 markdown 相关文档。</p>
<h2 id="OPTIONAL-安装-Bootstrap-主题"><a href="#OPTIONAL-安装-Bootstrap-主题" class="headerlink" title="( OPTIONAL ) 安装 Bootstrap 主题"></a>( OPTIONAL ) 安装 Bootstrap 主题</h2><p>如果你不喜欢原生的主题的话，django-blog-zinnia 为我们提供了一套 bootstrap 主题，相对来说更加好看一点。虽然说实在话内置的主题感觉都已经过时了，因此我重新为它设置了一套全新的主题，稍后会有介绍。</p>
<p>中断服务器的运行，进入到虚拟环境（如果你已经退出了的话），首先输入命令<code>pip install django-app-namespace-template-loader</code>安装 <em>django-app-namespace-template-loader</em>，这是替换主题的一个必要组件。再输入 <code>pip install zinnia-theme-bootstrap</code> 安装<em>主题 APP</em> ，打开 <em>settings.py</em> 文件，在 <em>INSTALLED_APPS</em> 中注册主题 APP ，注意主题 zinnia_bootstrap 一定要在 zinnia 之前：</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">zinnia_demo/zinnia_demo/settings<span class="selector-class">.py</span></div><div class="line"></div><div class="line">INSTALLED_APPS = [</div><div class="line">...</div><div class="line"><span class="string">'zinnia_bootstrap'</span>,</div><div class="line">  <span class="string">'zinnia'</span>,</div><div class="line">]</div></pre></td></tr></table></figure>
<p>再将 TEMPLATES 列表做如下修改：</p>
<figure class="highlight nimrod"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">zinnia_demo/zinnia_demo/settings.py</div><div class="line"></div><div class="line"><span class="type">TEMPLATES</span> = [</div><div class="line">&#123;</div><div class="line">'<span class="type">BACKEND</span>': 'django.<span class="keyword">template</span>.backends.django.<span class="type">DjangoTemplates</span>',</div><div class="line">'<span class="type">DIRS</span>': [],</div><div class="line">'<span class="type">APP_DIRS</span>': <span class="type">True</span>,</div><div class="line">    '<span class="type">APP_DIRS</span>': <span class="type">False</span>,</div><div class="line">        '<span class="type">OPTIONS</span>': &#123;</div><div class="line">        'context_processors': [</div><div class="line">        'django.<span class="keyword">template</span>.context_processors.debug',</div><div class="line">        'django.<span class="keyword">template</span>.context_processors.request',</div><div class="line">        'django.contrib.auth.context_processors.auth',</div><div class="line">        'django.contrib.messages.context_processors.messages',</div><div class="line">        'zinnia.context_processors.version',  <span class="comment"># Optional</span></div><div class="line">        ],</div><div class="line"></div><div class="line">        添加下面这几行</div><div class="line">        'loaders': [</div><div class="line">           'app_namespace.<span class="type">Loader</span>',</div><div class="line">           'django.<span class="keyword">template</span>.loaders.filesystem.<span class="type">Loader</span>',</div><div class="line">           'django.<span class="keyword">template</span>.loaders.app_directories.<span class="type">Loader</span>',</div><div class="line">        ],</div><div class="line">        添加上面几行</div><div class="line">        &#125;,</div><div class="line">    &#125;,</div><div class="line">]</div></pre></td></tr></table></figure>
<p>此时再次开启服务器，进入主页 <code>127.0.0.1:8000/weblog</code> 就可以看到主题变成了 bootstrap 样式了。</p>
<h2 id="OPTIONAL-语法高亮支持"><a href="#OPTIONAL-语法高亮支持" class="headerlink" title="( OPTIONAL ) 语法高亮支持"></a>( OPTIONAL ) 语法高亮支持</h2><p>注意：这一步必须在安装完 bootstrap 主题之后。</p>
<p>pygments 已经帮我做好了一切语法高亮的准备，其原理就是把 html 中的代码文本分成很多块，用适当的 html 标签包裹，并且添加相应的 css 类，我们只需引入一个相应的 css 样式文件即可。</p>
<p>为了方便起见，我们新建一个 APP 来存放我的需要引入的 css 样式文件，在 zinnia_demo/ 目录下（与 manage.py 同级）下输入 <code>python manage.py startapp theme</code>，这样我们就创建了一个名为 theme 的 app，可以看到 zinnia_demo/ 多了一个 theme 的文件夹。</p>
<p>在 zinnia_demo/ 目录下（与 manage.py 同级）建立如下的目录结构和文件：</p>
<p>zinnia_demo/templates/zinnia/skeleton.html，把这里面的内容：skeleton 模板代码 ，复制到 skeleton.html中，并且在 skeleton.html 的 \ 标签里添加一行：</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">zinnia_demo/templates/zinnia/skeleton<span class="selector-class">.html</span></div><div class="line"></div><div class="line">&lt;link rel=<span class="string">"stylesheet"</span> href=<span class="string">"&#123;% static "</span>theme/css/github.css<span class="string">" %&#125;"</span> /&gt;</div></pre></td></tr></table></figure>
<p>再在 zinnia_demo/ 下建立如下的目录结构和文件：</p>
<p>zinnia_demo/theme/static/theme/css/github.css，把这里面的内容：=<a href="https://github.com/zmrenwu/ZinniaBlog/blob/master/zinnia_twts/static/zinnia_twts/theme/css/github.css" target="_blank" rel="external">github.css</a> 样式代码 ，复制到 github.css 文件中。</p>
<p>打开 settings.py 文件，做如下修改：</p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">zinnia_demo<span class="regexp">/zinnia_demo/</span>settings.py</div><div class="line"></div><div class="line">TEMPLATES = [</div><div class="line">&#123;</div><div class="line">...</div><div class="line">修改成下面的样子，作用是指明模板文件所在目录，即上面我们写的skeleton.html</div><div class="line"><span class="string">'DIRS'</span>: [os.path.<span class="keyword">join</span>(BASE_DIR, <span class="string">'templates'</span>)],</div><div class="line">...</div><div class="line">&#125;</div><div class="line">]</div></pre></td></tr></table></figure>
<p>将 theme app 注册到 INSTALLED_APPS 列表中：</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">zinnia_demo/zinnia_demo/settings<span class="selector-class">.py</span></div><div class="line"></div><div class="line">INSTALLED_APPS = [</div><div class="line">...</div><div class="line"><span class="string">'theme'</span>,</div><div class="line"><span class="string">'zinnia_bootstrap'</span>,</div><div class="line"><span class="string">'zinnia'</span>,</div><div class="line">]</div></pre></td></tr></table></figure>
<p>打开开发服务器，进入相应页面就可以看到代码高亮效果了。记得事先填充一些代码到博客文章中。</p>
<h2 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h2><p>PS：</p>
<p>自带的评论功能当有人回复你发表的博客文章后会发送一封 email 给你的后台管理员账户邮箱（创建后台管理员账户填写的）。不过需要设置好发送邮件的邮箱，参考配置如下，在 settings.py 中：</p>
<figure class="highlight nix"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">zinnia_demo/zinnia_demo/settings.py</div><div class="line"></div><div class="line"><span class="attr">EMAIL_BACKEND</span> = 'django.core.mail.backends.smtp.EmailBackend'</div><div class="line"><span class="attr">EMAIL_HOST</span> = 'smtp.<span class="number">163</span>.com' <span class="comment"># 如果不是163邮箱请替换为邮箱服务商的smtp服务器地址</span></div><div class="line"><span class="attr">EMAIL_PORT</span> = <span class="number">465</span></div><div class="line"><span class="attr">EMAIL_HOST_USER</span> = '你的邮箱账号'  <span class="comment"># add your own accounts for local test</span></div><div class="line"><span class="attr">EMAIL_HOST_PASSWORD</span> = '你的邮箱密码'</div><div class="line"><span class="attr">EMAIL_USE_SSL</span> = True</div><div class="line"><span class="attr">DEFAULT_FROM_EMAIL</span> = EMAIL_HOST_USER</div></pre></td></tr></table></figure>
<p>不过要确保你的邮箱开启了 SMTP，如果没有的话请参考邮箱服务商的相关设置进行开启。</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;目前网上搭建个人博客的方案很多，虽然使用诸如 Wordpress ( PHP )、Hexo ( Node.js )&lt;br&gt;等可以方便快速地搭建一款功能齐全的高性能个人博客，但是本文将尝试一种更为小众化的方案 —— 一款基于 django-blog-zinnia&lt;br&gt;( Python ) 的个人博客应用。 django-blog-zinnia&lt;br&gt;虽然小巧，但是具备了个人博客应用的全部基础功能，且具有很高的拓展性，并且开箱即用。以下是官方列出的一些特性：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;评论&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;站点地图（用于搜索引擎优化）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;文章归档视图（自动按时间归档博文，包括年、月、星期、日各个时间维度）&lt;/li&gt;
&lt;li&gt;RSS 或者 Atom Feed&lt;/li&gt;
&lt;li&gt;分类和标签云&lt;/li&gt;
&lt;li&gt;全文搜索&lt;/li&gt;
&lt;li&gt;Markdown 语法标记&lt;/li&gt;
&lt;li&gt;等等其他一些博客应用具备的全部基本功能。&lt;/li&gt;
&lt;li&gt;你可以参照它的官方文档 ( django-blog-zinnia documentation ) 的 installation 部分进行初始的安装，但本文也会给出详细的安装教程，并对相关的细节进行进一步补充，对功能进行进一步地拓展设置。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;注：本博客在写作时每一个步骤均在实际环境下测试了一遍，基本确保没有问题。但是由于个人写作时的疏忽或者计算机环境的差异，也可能会有一些错误导致你卡在某个地方无法继续进行下去。如果是这样请给我留言，我和你一起排查问题，如果发现是博客写作时的错误也好使我尽快更正。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;建立虚拟环境&quot;&gt;&lt;a href=&quot;#建立虚拟环境&quot; class=&quot;headerlink&quot; title=&quot;建立虚拟环境&quot;&gt;&lt;/a&gt;建立虚拟环境&lt;/h2&gt;&lt;p&gt;因为在安装 django-blog-zinnia 的过程中会安装很多其他第三方依赖包，因此强烈建议使用虚拟环境安装，以免把系统环境弄乱。&lt;/p&gt;
&lt;p&gt;假设你的 python 版本是 3.4 或更高（建议使用 3.4 以上版本，当然 django-blog-zinnia 本身是兼容 python2.7 及以上版本的），且已经安装了虚拟环境管理工具 virtualenv，如果没有的话通过&lt;code&gt;pip install virtualenv&lt;/code&gt; 安装。打开命令行，进入到你想建立虚拟环境的目录，通过命令 &lt;code&gt;virtualenv zinnia_demo_env&lt;/code&gt; 创建一个名为 zinnia_demo_env 的虚拟环境，当然 zinnia_demo_env 这个目录名你可以任意指定。进入到创建的虚拟环境的 Scripts 目录下，输入 activate 命令激活虚拟环境，此时命令行前多了一个 ( zinnia_demo_env ) 说明已经激活，例如我的是：&lt;/p&gt;
&lt;figure class=&quot;highlight tex&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;(zinnia_demo_env) D:&lt;span class=&quot;tag&quot;&gt;\&lt;span class=&quot;name&quot;&gt;Users&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;\&lt;span class=&quot;name&quot;&gt;zmrenwu&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;\&lt;span class=&quot;name&quot;&gt;Envs&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;\&lt;span class=&quot;name&quot;&gt;zinnia&lt;/span&gt;&lt;/span&gt;_demo_env&lt;span class=&quot;tag&quot;&gt;\&lt;span class=&quot;name&quot;&gt;Scripts&lt;/span&gt;&lt;/span&gt;&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;通过 pip install django==1.9.6 安装 django，建议使用 1.9.6 版本，当然 &amp;gt;=1.9 的版本都是兼容的，但注意目前不兼容 django1.10。&lt;/p&gt;
    
    </summary>
    
      <category term="博客" scheme="http://liuhouer.github.io/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="blog" scheme="http://liuhouer.github.io/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>比较合适的div+css的命名</title>
    <link href="http://liuhouer.github.io/2016/07/19/%E6%AF%94%E8%BE%83%E5%90%88%E9%80%82%E7%9A%84div+css%E7%9A%84%E5%91%BD%E5%90%8D/"/>
    <id>http://liuhouer.github.io/2016/07/19/比较合适的div+css的命名/</id>
    <published>2016-07-19T15:46:49.000Z</published>
    <updated>2017-03-23T02:13:26.000Z</updated>
    
    <content type="html"><![CDATA[<ul>
<li>页头：header 登陆条：loginBar 注册：regsiter</li>
<li>标志：logo 主导航：nav</li>
<li>广告：banner</li>
<li>搜索：search</li>
</ul>
<hr>
<ul>
<li>外套：wrap</li>
<li>整个页面：content</li>
<li>侧栏：sideBar 页面主体：main</li>
<li>子导航：subMenu</li>
</ul>
<hr>
<ul>
<li>页脚：footer</li>
<li>友情链接：friendLink</li>
<li>合作伙伴：partner</li>
<li>加入：joinUs</li>
<li>指南：guild</li>
<li>服务：service</li>
<li>版权：copyRight<br>-</li>
</ul>
<hr>
<ul>
<li>滚动：scroll</li>
<li>容器：container</li>
<li>标签页：tab</li>
<li>文章列表：list</li>
<li>栏目标题：title</li>
<li>提示信息：msg</li>
<li>小技巧：tips</li>
<li>商标:label</li>
</ul>
<hr>
<ul>
<li>热点：hot</li>
<li>新闻：news</li>
<li>状态：status</li>
<li>按钮：btn</li>
<li>投票：vote</li>
<li>注释： note</li>
<li>下载：download</li>
</ul>
<hr>
<ul>
<li>边导航：sideBar</li>
<li>左导航：leftsideBar</li>
<li>右导航：rightsideBar</li>
<li>菜单：menu</li>
<li>子菜单：subMenu</li>
<li>边导航图标：sidebarIcon</li>
<li>面包屑：breadCrumb（即页面所处位置导航提示）</li>
<li>当前的：current</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;页头：header 登陆条：loginBar 注册：regsiter&lt;/li&gt;
&lt;li&gt;标志：logo 主导航：nav&lt;/li&gt;
&lt;li&gt;广告：banner&lt;/li&gt;
&lt;li&gt;搜索：search&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;外套：wrap&lt;
    
    </summary>
    
      <category term="html" scheme="http://liuhouer.github.io/categories/html/"/>
    
    
      <category term="html" scheme="http://liuhouer.github.io/tags/html/"/>
    
  </entry>
  
  <entry>
    <title>水魔方游玩攻略</title>
    <link href="http://liuhouer.github.io/2016/07/13/%E6%B0%B4%E9%AD%94%E6%96%B9%E6%B8%B8%E7%8E%A9%E6%94%BB%E7%95%A5/"/>
    <id>http://liuhouer.github.io/2016/07/13/水魔方游玩攻略/</id>
    <published>2016-07-13T15:46:49.000Z</published>
    <updated>2017-03-23T02:13:26.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="水魔方游玩提前须！（网上扒的，四哥copy、小五整理，必为精品！！！）"><a href="#水魔方游玩提前须！（网上扒的，四哥copy、小五整理，必为精品！！！）" class="headerlink" title="水魔方游玩提前须！（网上扒的，四哥copy、小五整理，必为精品！！！）"></a>水魔方游玩提前须！（网上扒的，四哥copy、小五整理，必为精品！！！）</h1><h2 id="网友旅游攻略-1"><a href="#网友旅游攻略-1" class="headerlink" title="网友旅游攻略(1):"></a>网友旅游攻略(1):</h2><ul>
<li>我是2016.7.9号周六去玩的，9点半到的，晚上4点半走的，人比较多，但是能玩的基本都玩遍了，非常过瘾。<h3 id="时间把控"><a href="#时间把控" class="headerlink" title="- 时间把控"></a>- 时间把控</h3></li>
<li>要在早上9点半之前到现场领票，这样可以尽快的玩你想玩的项目，否则再晚就要排10-60分钟不等的队才能玩上。<br>然后进门右手边向前，依次是洗澡间和买柜子处。 首先到买柜子处，最少300元现金买一个柜子手环，里面冲有250元现金，可以在园内消费。<br>驴妈妈的票价比别处便宜5块，但是需要到门口右侧的马路边再往水魔方方向走，那里有一把特别小的小伞，会有驴妈妈工作人员，直接给你票。<br>一个柜子可以放下2人左右的东西，可以先买一个试试是否都能放下。</li>
</ul>
<h3 id="携带东西"><a href="#携带东西" class="headerlink" title="- 携带东西"></a>- 携带东西</h3><ul>
<li>泳衣</li>
<li>泳镜</li>
<li>防晒霜，要每隔1～2小时涂一次脸蛋和肩膀，否则晒伤好痛，我的肩膀疼了好多天</li>
<li>浴巾每人一条，可以非常好的起到防晒作用，否则肩膀后背基本都会晒伤</li>
<li>可爱塑料小提兜，可以把近视镜和泳镜等偶尔项目不让带的东西放里面，同时游玩时浴巾放在上面不会弄脏</li>
<li>洗澡用品</li>
<li>拖鞋最好每人带两双，因为在玩大波浪时人太多经常会有人穿错拖鞋，如果你不想穿别人的，最好自备两双，或者现场买45元一双的。记住，游玩时最好把鞋子藏到一个别人一般不动的地方。</li>
<li>太阳伞就不用拿了，人太多不方便打。</li>
<li>游泳圈，最好每人网上买一个，每人一个，园内45元租一个，太贵，都够买好几个了。玩大波浪如果有游泳圈就可以非常爽的体验波浪的壮观而不被拍到水底，有危险。</li>
<li>水和零食可以自带一些，有时候会查有时候不查，看自己感觉了。</li>
<li><p>进去之后最左侧的第一个，第二个，第三个，都非常的好玩，建议进去先玩，然后大波浪有时间限制，看好时间再去玩。有几个项目12点以后才开，看好时间早点去排队把。</p>
<a id="more"></a>
</li>
</ul>
<h2 id="网友旅游攻略-2-："><a href="#网友旅游攻略-2-：" class="headerlink" title="网友旅游攻略(2)："></a>网友旅游攻略(2)：</h2><blockquote>
<p>我总结一下经验！ 因为住回龙观所以一早七点多就出发了！ 怕路上堵车，幸运的是没有堵车！八点半不到就到了！<br>首先说明一下正门北边的停车场是员工停车场！因为去的早可以停在这里！<br>不要停车费！八点四十左右有保安管理所以不要在车上呆着可以在安检通道大棚下等候！不然就叫你去停车场里了！哪里收费5元一小时！还要注意的是一定在安检通道前等待！早进去也没有用，倒时候还要把你哄出来安检！<br>如果多人去的话九点半安检可以先叫一个人不拿东西去售票窗口换票，6、7、8是网络换票口！其他人拿东西过安检到大门口排队，因为十点才能进大门所以这样最省时间！我们一直排第一名！<br>还有水只能带矿泉水！别的有色饮料都不行！吃的可以带些火腿肠和巧克力！九点五十多门口有开园欢迎仪式！进入园区后先找一个人去换储物柜！存里面200到300之间就行！如果不在园区吃饭的话存100就够了！<br>园区吃饭普遍比外面要贵一倍多！量也少！盖饭在40左右，面也要25元！我们四个人吃了快两百！<br>剩下的人去换衣服，换完储物柜的人在去找换衣服的人这样最省时间！<br>储物柜两个人用一个就可以了！没有想象的那么小！还要注意的是买手机防水袋的还是先把手机放在储物柜里！因为你进去先玩大型戏水项目是什么都不让带的！我们就是又回去放了次手机！<br>左手边的两个项目非常刺激！一进去可以多玩几次！<br>因为早上排队的比较少可以连着玩！到了下午就要排好半天了！玩完大型项目就可以回去拿手机了！去沙滩等待冲浪最早一次是11点半！<br>不会游泳的要带好游泳圈，里面租35不限时间！我们自己带了游泳圈但是打气的不给力，去买游泳圈那充的气一个要15元，觉得有点被黑的感觉！<br>冲浪相当刺激！玩了就不想玩别的了！<br>还有注意的是防晒还有拖鞋的事情，最好带个看不到里面东西的布袋！大家把拖鞋放一起这样不容易丢！因为到下午冲浪时人非常多！我就看到一个人穿了个久拖鞋换了个别人的新的！<br>一直玩到晚上八点我们才走！非常愉快的一次游玩！<br>感谢驴妈妈旅游网价格合理公道！门口到票的也没办法在便宜！只能说他们的票可以一直玩到晚上叫我们退票买他的！我们没有相信，后来在门口知道白天的票本来就可以玩到晚上！就写到这里吧！希望可以对大家有帮助！</p>
</blockquote>
<h2 id="准备篇："><a href="#准备篇：" class="headerlink" title="准备篇："></a>准备篇：</h2><ul>
<li><p>最好最好四个人结伴前往，前提是四个人都是“敢玩”的，因为大的游乐设施都是2或4人一组，多了少了都不让上去。</p>
</li>
<li><p>能不周末就不周末去，今天是周六，园内的工作人员说，预计两万的客流，实际达到了四万。那人，，，，煮饺子！！</p>
</li>
<li><p>带泳衣就可以了，想游两下的话带上泳镜，重要的是要穿拖鞋，里边不提供而且地非常烫，游泳圈特别没必要，尤其在门口买的小摊上的更是亏，园内提供泳圈和救生衣，泳帽是根本不用滴。</p>
</li>
<li><p>非常晒预备好防晒霜和浴巾还有伞，其实太阳那么大个人认为防晒霜已经浮云了，浴巾非常有必要，当你排队两三个小时的时候就会发现有个浴巾遮下太阳非常有用。</p>
</li>
<li><p>拿水有必要，但是里面也有卖的，矿泉水4块一瓶这个价位，门口也有小摊，这个倒是没什么太纠结的。</p>
</li>
<li><p>基本上一去就是一天，做好准备吧。早去晚归。</p>
</li>
</ul>
<h2 id="进门篇："><a href="#进门篇：" class="headerlink" title="进门篇："></a>进门篇：</h2><ul>
<li><p>不要以为团购并不普及，全是团购去的！那兑票的队，长！打架的骂人的插队的应有尽有，所以最好最好九点就到把票换了，晚了九点半到，十点以后的话，用一个愤青的话“排两个小时了没动窝”。</p>
</li>
<li><p>可能人太多了管理特别差劲，身份证根本没用了。。。但也最好预备着。</p>
</li>
<li><p>有传言说丰台的身份证半价，但是仍需验证。</p>
</li>
</ul>
<h2 id="设施篇："><a href="#设施篇：" class="headerlink" title="设施篇："></a>设施篇：</h2><ul>
<li><p>进门直奔造浪池，看好几点有造浪表演，这个可是水魔方不可错过的一项，确定参加哪一场后开始安排玩其他设施的时间，以保证及时冲浪冲浪池最深的地方1.4m越来越浅直到沙滩，1.4m那里很猛哒我姐夫在1.4m那里，有个女的泳裤被冲掉了就被他们抛啊抛的哈哈还听别人说有的女的，上半身全被冲掉啦==</p>
</li>
<li><p>以周末为例，最好多人分头排队，最高最火的那个滑梯，同时也是水魔方精彩的项目，我们排了足足三个小时，工作人员还跟游客骂起来了啊各种骂啊最高的滑梯一定不要错过！！不然你就白来水魔方了！！爽啊</p>
</li>
<li><p>龙卷风我们没排上因为马上要关门了，也是必去项目之一，四人一起的，每个出来的人第一句话都是“我*！”惊险可想而知。</p>
</li>
<li><p>魔幻漩涡。别小看这个看起来并不怎么样的实施，必去之一！！不必最高的那个滑梯次。如果跟我们一样倒着出来就悲剧咯</p>
</li>
<li><p>精彩的肯定还有，剩下的没开or没排上，总之还是挺好玩的。休闲的也有漂流池和SPA池，休闲好去处</p>
</li>
</ul>
<h2 id="其他篇："><a href="#其他篇：" class="headerlink" title="其他篇："></a>其他篇：</h2><ul>
<li><p>看到N多人为了抢不到双人游泳圈苦苦寻觅，其实去漂流池旁边等最有效的，好多人在那里都抛弃了自己的泳圈，随便拿一个就走人啦，用不着在设施底下排队等也用不到等人家慢慢充气啦。</p>
</li>
<li><p>本来他们设计的是园内手牌消费，不知人太多了还是没有完善系统，今天是现金，所以不要把钱也锁到储物柜啦，没法买东西啦。</p>
</li>
<li><p>关于饭，价钱和吉野家差不多，一个纸筒一份饭，个人觉得味道和吉野家也差不多，但是我姐不这么认为。鸡块12块四小块，烤肠5块一根差不多就这个价位，饮料6或8，咖啡奶茶啥的普遍12+。</p>
</li>
<li><p>零食也是有必要的，因为我们排漫长队的时候看到别人吃零食真是羡慕嫉妒恨啊。</p>
</li>
<li><p>关于看队伍目测时间，楼梯上可以排队的设施基本上到楼梯口就需要30min了，这里指的是比较大的设施，高滑梯那种是10个10个往上放人，插队的具多，排到楼梯口也还需要多则一小时少则半小时。</p>
</li>
<li><p>三个高滑梯的身体要求，最高的那个有身高要求是1.4M+,三个共有的是40kg以上90kg以下，不符合的不要费劲排队了，轻了重了都有可能滑不下来。今天看到不少孩子排了好几个小时最后也上不去。</p>
</li>
<li><p>任何首饰手表卡子啥的都别带进去了，玩设施前都会让你摘下，也有就不听劝的，个人认为一个首饰就别带进去了，而且确实有个设施以因为一个首饰碰到了不该碰的按钮停运了10分钟的场面，何必。</p>
</li>
<li><p>除了造浪池最深1.4m,其他的基本0.9m，还是有一定安全保障的。</p>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;水魔方游玩提前须！（网上扒的，四哥copy、小五整理，必为精品！！！）&quot;&gt;&lt;a href=&quot;#水魔方游玩提前须！（网上扒的，四哥copy、小五整理，必为精品！！！）&quot; class=&quot;headerlink&quot; title=&quot;水魔方游玩提前须！（网上扒的，四哥copy、小五整理，必为精品！！！）&quot;&gt;&lt;/a&gt;水魔方游玩提前须！（网上扒的，四哥copy、小五整理，必为精品！！！）&lt;/h1&gt;&lt;h2 id=&quot;网友旅游攻略-1&quot;&gt;&lt;a href=&quot;#网友旅游攻略-1&quot; class=&quot;headerlink&quot; title=&quot;网友旅游攻略(1):&quot;&gt;&lt;/a&gt;网友旅游攻略(1):&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;我是2016.7.9号周六去玩的，9点半到的，晚上4点半走的，人比较多，但是能玩的基本都玩遍了，非常过瘾。&lt;h3 id=&quot;时间把控&quot;&gt;&lt;a href=&quot;#时间把控&quot; class=&quot;headerlink&quot; title=&quot;- 时间把控&quot;&gt;&lt;/a&gt;- 时间把控&lt;/h3&gt;&lt;/li&gt;
&lt;li&gt;要在早上9点半之前到现场领票，这样可以尽快的玩你想玩的项目，否则再晚就要排10-60分钟不等的队才能玩上。&lt;br&gt;然后进门右手边向前，依次是洗澡间和买柜子处。 首先到买柜子处，最少300元现金买一个柜子手环，里面冲有250元现金，可以在园内消费。&lt;br&gt;驴妈妈的票价比别处便宜5块，但是需要到门口右侧的马路边再往水魔方方向走，那里有一把特别小的小伞，会有驴妈妈工作人员，直接给你票。&lt;br&gt;一个柜子可以放下2人左右的东西，可以先买一个试试是否都能放下。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;携带东西&quot;&gt;&lt;a href=&quot;#携带东西&quot; class=&quot;headerlink&quot; title=&quot;- 携带东西&quot;&gt;&lt;/a&gt;- 携带东西&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;泳衣&lt;/li&gt;
&lt;li&gt;泳镜&lt;/li&gt;
&lt;li&gt;防晒霜，要每隔1～2小时涂一次脸蛋和肩膀，否则晒伤好痛，我的肩膀疼了好多天&lt;/li&gt;
&lt;li&gt;浴巾每人一条，可以非常好的起到防晒作用，否则肩膀后背基本都会晒伤&lt;/li&gt;
&lt;li&gt;可爱塑料小提兜，可以把近视镜和泳镜等偶尔项目不让带的东西放里面，同时游玩时浴巾放在上面不会弄脏&lt;/li&gt;
&lt;li&gt;洗澡用品&lt;/li&gt;
&lt;li&gt;拖鞋最好每人带两双，因为在玩大波浪时人太多经常会有人穿错拖鞋，如果你不想穿别人的，最好自备两双，或者现场买45元一双的。记住，游玩时最好把鞋子藏到一个别人一般不动的地方。&lt;/li&gt;
&lt;li&gt;太阳伞就不用拿了，人太多不方便打。&lt;/li&gt;
&lt;li&gt;游泳圈，最好每人网上买一个，每人一个，园内45元租一个，太贵，都够买好几个了。玩大波浪如果有游泳圈就可以非常爽的体验波浪的壮观而不被拍到水底，有危险。&lt;/li&gt;
&lt;li&gt;水和零食可以自带一些，有时候会查有时候不查，看自己感觉了。&lt;/li&gt;
&lt;li&gt;&lt;p&gt;进去之后最左侧的第一个，第二个，第三个，都非常的好玩，建议进去先玩，然后大波浪有时间限制，看好时间再去玩。有几个项目12点以后才开，看好时间早点去排队把。&lt;/p&gt;
    
    </summary>
    
      <category term="旅游" scheme="http://liuhouer.github.io/categories/%E6%97%85%E6%B8%B8/"/>
    
    
      <category term="攻略" scheme="http://liuhouer.github.io/tags/%E6%94%BB%E7%95%A5/"/>
    
      <category term="游记" scheme="http://liuhouer.github.io/tags/%E6%B8%B8%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Springmvc自定义注解实现自定义拦截</title>
    <link href="http://liuhouer.github.io/2016/07/11/Springmvc%E8%87%AA%E5%AE%9A%E4%B9%89%E6%B3%A8%E8%A7%A3%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8B%A6%E6%88%AA/"/>
    <id>http://liuhouer.github.io/2016/07/11/Springmvc自定义注解实现自定义拦截/</id>
    <published>2016-07-11T15:46:49.000Z</published>
    <updated>2017-03-23T02:13:26.000Z</updated>
    
    <content type="html"><![CDATA[<p>我自己搭的springmvc的项目，想添加登陆校验。<br>最简易优雅的实现，在需要用户信息才可以操作的Controller的方法上面加上一个@CheckLogin就可以实现登陆校验。<br>假如未登录–&gt;跳转到登录页–&gt;登陆成功–&gt;自动跳回刚才要执行的动作方法。</p>
<p>用springmvc的handlerinterceptor的来实现。</p>
<h2 id="一-首先介绍一下action拦截器："><a href="#一-首先介绍一下action拦截器：" class="headerlink" title="一.首先介绍一下action拦截器："></a>一.首先介绍一下action拦截器：</h2><p>HandlerInterceptor是Spring MVC为我们提供的拦截器接口，来让我们实现自己的处理逻辑，HandlerInterceptor 的内容如下：</p>
<figure class="highlight aspectj"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">HandlerInterceptor</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">preHandle</span><span class="params">(</span></span></div><div class="line">            HttpServletRequest request, HttpServletResponse response,</div><div class="line">            Object <span class="keyword">handler</span>)</div><div class="line">            <span class="keyword">throws</span> Exception;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">postHandle</span><span class="params">(  </span></span></div><div class="line">        HttpServletRequest request, HttpServletResponse response,   </div><div class="line">        Object <span class="keyword">handler</span>, ModelAndView modelAndView)   </div><div class="line">        <span class="keyword">throws</span> Exception;  </div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">afterCompletion</span><span class="params">(  </span></span></div><div class="line">        HttpServletRequest request, HttpServletResponse response,   </div><div class="line">        Object <span class="keyword">handler</span>, Exception ex)  </div><div class="line">        <span class="keyword">throws</span> Exception;  </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>可以看到接口有3个方法，其含义如下：</p>
<blockquote>
<p>preHandle：在执行action里面的处理逻辑之前执行，它返回的是boolean，这里如果我们返回true在接着执行postHandle和afterCompletion，如果我们返回false则中断执行。</p>
<p>postHandle：在执行action里面的逻辑后返回视图之前执行。</p>
<p>afterCompletion：在action返回视图后执行。</p>
<p>HandlerInterceptorAdapter适配器是Spring<br>MVC为了方便我们使用HandlerInterceptor而对HandlerInterceptor<br>的默认实现，里面的3个方法没有做任何处理，在preHandle方法直接返回true，这样我们继承HandlerInterceptorAdapter后只需要实现3个方法中我们需要的方法即可，而不像继承HandlerInterceptor一样不管是否需要3个方法都要实现。</p>
<p>当然借助于HandlerInterceptor我们可以实现很多其它功能，比如日志记录、请求处理时间分析等，权限验证只是其中之一。</p>
</blockquote>
<a id="more"></a>
<h2 id="二-下面我们就来一步一步来完成注解式权限验证的功能。"><a href="#二-下面我们就来一步一步来完成注解式权限验证的功能。" class="headerlink" title="二.下面我们就来一步一步来完成注解式权限验证的功能。"></a>二.下面我们就来一步一步来完成注解式权限验证的功能。</h2><p>首先添加一个账户的Controller和登录的Action及视图来模拟在没有权限时跳转到登陆页面，内容分别如下：</p>
<h3 id="1-新建包com-bruce-interceptor包-添加自定义注解CheckLogin-java，内容如下："><a href="#1-新建包com-bruce-interceptor包-添加自定义注解CheckLogin-java，内容如下：" class="headerlink" title="1.新建包com.bruce.interceptor包,添加自定义注解CheckLogin.java，内容如下："></a>1.新建包com.bruce.interceptor包,添加自定义注解CheckLogin.java，内容如下：</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.bruce.interceptor;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.lang.annotation.Documented;</div><div class="line"><span class="keyword">import</span> java.lang.annotation.ElementType;</div><div class="line"><span class="keyword">import</span> java.lang.annotation.Inherited;</div><div class="line"><span class="keyword">import</span> java.lang.annotation.Retention;</div><div class="line"><span class="keyword">import</span> java.lang.annotation.RetentionPolicy;</div><div class="line"><span class="keyword">import</span> java.lang.annotation.Target;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line">登陆校验|此注解写在用于登录权限的Controller上面</div><div class="line"><span class="doctag">@author</span> bruce</div><div class="line"><span class="doctag">@date</span> 2016年7月11日</div><div class="line"><span class="doctag">@email</span> zhangyang226@gmail.com</div><div class="line"><span class="doctag">@site</span> http://blog.northpark.cn | http://northpark.cn | orginazation https://github.com/jellyband</div><div class="line"> * </div><div class="line"> */</div><div class="line"><span class="meta">@Documented</span></div><div class="line"><span class="meta">@Inherited</span></div><div class="line"><span class="meta">@Target</span>(ElementType.METHOD)</div><div class="line"><span class="meta">@Retention</span>(RetentionPolicy.RUNTIME)</div><div class="line"><span class="keyword">public</span> <span class="meta">@interface</span> CheckLogin &#123;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">validate</span><span class="params">()</span> <span class="keyword">default</span> <span class="keyword">true</span></span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="2-添加自己的拦截器实现CheckLogin继承于HandlerInterceptorAdapter，"><a href="#2-添加自己的拦截器实现CheckLogin继承于HandlerInterceptorAdapter，" class="headerlink" title="2.添加自己的拦截器实现CheckLogin继承于HandlerInterceptorAdapter，"></a>2.添加自己的拦截器实现CheckLogin继承于HandlerInterceptorAdapter，</h3><p>com.bruce.interceptor包中的LoginInterceptor.java 内容如下：</p>
<figure class="highlight aspectj"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.bruce.interceptor;</div><div class="line"></div><div class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</div><div class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</div><div class="line"></div><div class="line"><span class="keyword">import</span> org.springframework.web.method.HandlerMethod;</div><div class="line"><span class="keyword">import</span> org.springframework.web.servlet.ModelAndView;</div><div class="line"><span class="keyword">import</span> org.springframework.web.servlet.<span class="keyword">handler</span>.HandlerInterceptorAdapter;</div><div class="line"></div><div class="line"><span class="keyword">import</span> com.bruce.constant.BC\_Constant;</div><div class="line"><span class="keyword">import</span> com.bruce.model.User;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line">登陆拦截器.</div><div class="line"><span class="doctag">@author</span> zhangyang</div><div class="line"> *</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginInterceptor</span> <span class="keyword">extends</span> <span class="title">HandlerInterceptorAdapter</span> </span>&#123;</div><div class="line"></div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">boolean</span> <span class="title">preHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object <span class="keyword">handler</span>)</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line"></div><div class="line"></div><div class="line">    <span class="keyword">if</span>(<span class="keyword">handler</span>.getClass().isAssignableFrom(HandlerMethod.class))&#123;</div><div class="line">        CheckLogin checklogin = ((HandlerMethod) <span class="keyword">handler</span>).getMethodAnnotation(CheckLogin.class);</div><div class="line"></div><div class="line">        <span class="comment">//没有声明需要权限,或者声明不验证权限</span></div><div class="line">        <span class="keyword">if</span>(checklogin == <span class="keyword">null</span> || checklogin.validate() == <span class="keyword">false</span>)&#123;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">        &#125;<span class="keyword">else</span>&#123;                </div><div class="line">            <span class="comment">//在这里实现自己的权限验证逻辑</span></div><div class="line">            User user = (User) request.getSession().getAttribute(<span class="string">"user"</span>);</div><div class="line">            <span class="keyword">if</span>(user!=<span class="keyword">null</span>)&#123;<span class="comment">//如果验证成功返回true（这里直接写false来模拟验证失败的处理）</span></div><div class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">            &#125;<span class="keyword">else</span>&#123;<span class="comment">//如果验证失败</span></div><div class="line">                <span class="comment">//返回到登录界面</span></div><div class="line">                String url = request.getRequestURL().toString();</div><div class="line">                String[] strs = url.split(<span class="string">"8082/"</span>);</div><div class="line">                String postfix = strs[<span class="number">1</span>];</div><div class="line">                url = <span class="string">"http://"</span>+BC_Constant.Domain+<span class="string">"/"</span>+postfix;</div><div class="line">                response.sendRedirect(<span class="string">"/login?redirectURI="</span>+url);</div><div class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">            &#125;       </div><div class="line">        &#125;</div><div class="line">    &#125;<span class="keyword">else</span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;   </div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">  &#125;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">postHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object <span class="keyword">handler</span>, ModelAndView modelAndView)</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">    <span class="keyword">super</span>.postHandle(request, response, <span class="keyword">handler</span>, modelAndView);</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="3-配置项目的spring-mvc-xml添加如下内容："><a href="#3-配置项目的spring-mvc-xml添加如下内容：" class="headerlink" title="3.配置项目的spring-mvc.xml添加如下内容："></a>3.配置项目的spring-mvc.xml添加如下内容：</h3><figure class="highlight vbscript-html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"> &lt;!-- 定义拦截器 --&gt;</div><div class="line">&lt;mvc:interceptors&gt;  </div><div class="line">    &lt;!-- 国际化操作拦截器 如果采用基于（请求/Session/Cookie）则必需配置 --&gt; </div><div class="line">    &lt;bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" /&gt;  </div><div class="line">    &lt;!-- 如果不定义 mvc:mapping path 将拦截所有的URL请求 --&gt;</div><div class="line">    &lt;bean class="com.bruce.interceptor.LoginInterceptor"&gt;&lt;/bean&gt;</div><div class="line">&lt;/mvc:interceptors&gt;</div></pre></td></tr></table></figure>
<h3 id="4-具体的Controller写法"><a href="#4-具体的Controller写法" class="headerlink" title="4.具体的Controller写法"></a>4.具体的Controller写法</h3><figure class="highlight nimrod"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">//添加次注解，未登录的自动跳转到登录页</div><div class="line">@<span class="type">CheckLogin</span></div><div class="line">@<span class="type">RequestMapping</span>(<span class="string">"/add"</span>)</div><div class="line">public <span class="type">String</span> toAdd(<span class="type">ModelMap</span> map,<span class="type">String</span> userid,<span class="type">HttpServletRequest</span> request,<span class="type">HttpServletResponse</span> response) &#123;</div><div class="line"><span class="type">String</span> <span class="literal">result</span> = <span class="string">"/page/user/lyricAdd"</span>;</div><div class="line"><span class="keyword">return</span> <span class="literal">result</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>可以看到正确执行了权限判断逻辑，这样我们只需要在我们在需要权限验证的action上加上这个注解就可以实现权限控制功能了。</p>
<p>注解式权限验证的内容到此结束。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我自己搭的springmvc的项目，想添加登陆校验。&lt;br&gt;最简易优雅的实现，在需要用户信息才可以操作的Controller的方法上面加上一个@CheckLogin就可以实现登陆校验。&lt;br&gt;假如未登录–&amp;gt;跳转到登录页–&amp;gt;登陆成功–&amp;gt;自动跳回刚才要执行的动作方法。&lt;/p&gt;
&lt;p&gt;用springmvc的handlerinterceptor的来实现。&lt;/p&gt;
&lt;h2 id=&quot;一-首先介绍一下action拦截器：&quot;&gt;&lt;a href=&quot;#一-首先介绍一下action拦截器：&quot; class=&quot;headerlink&quot; title=&quot;一.首先介绍一下action拦截器：&quot;&gt;&lt;/a&gt;一.首先介绍一下action拦截器：&lt;/h2&gt;&lt;p&gt;HandlerInterceptor是Spring MVC为我们提供的拦截器接口，来让我们实现自己的处理逻辑，HandlerInterceptor 的内容如下：&lt;/p&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;HandlerInterceptor&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;preHandle&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            HttpServletRequest request, HttpServletResponse response,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            Object &lt;span class=&quot;keyword&quot;&gt;handler&lt;/span&gt;)&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;postHandle&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        HttpServletRequest request, HttpServletResponse response,   &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        Object &lt;span class=&quot;keyword&quot;&gt;handler&lt;/span&gt;, ModelAndView modelAndView)&lt;/span&gt;   &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception&lt;/span&gt;;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;afterCompletion&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        HttpServletRequest request, HttpServletResponse response,   &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        Object &lt;span class=&quot;keyword&quot;&gt;handler&lt;/span&gt;, Exception ex)&lt;/span&gt;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception&lt;/span&gt;;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可以看到接口有3个方法，其含义如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;preHandle：在执行action里面的处理逻辑之前执行，它返回的是boolean，这里如果我们返回true在接着执行postHandle和afterCompletion，如果我们返回false则中断执行。&lt;/p&gt;
&lt;p&gt;postHandle：在执行action里面的逻辑后返回视图之前执行。&lt;/p&gt;
&lt;p&gt;afterCompletion：在action返回视图后执行。&lt;/p&gt;
&lt;p&gt;HandlerInterceptorAdapter适配器是Spring&lt;br&gt;MVC为了方便我们使用HandlerInterceptor而对HandlerInterceptor&lt;br&gt;的默认实现，里面的3个方法没有做任何处理，在preHandle方法直接返回true，这样我们继承HandlerInterceptorAdapter后只需要实现3个方法中我们需要的方法即可，而不像继承HandlerInterceptor一样不管是否需要3个方法都要实现。&lt;/p&gt;
&lt;p&gt;当然借助于HandlerInterceptor我们可以实现很多其它功能，比如日志记录、请求处理时间分析等，权限验证只是其中之一。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="java" scheme="http://liuhouer.github.io/categories/java/"/>
    
    
      <category term="自定义注解" scheme="http://liuhouer.github.io/tags/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%B3%A8%E8%A7%A3/"/>
    
      <category term="springmvc" scheme="http://liuhouer.github.io/tags/springmvc/"/>
    
  </entry>
  
  <entry>
    <title>孤独大侠</title>
    <link href="http://liuhouer.github.io/2016/05/26/%E5%AD%A4%E7%8B%AC%E5%A4%A7%E4%BE%A0/"/>
    <id>http://liuhouer.github.io/2016/05/26/孤独大侠/</id>
    <published>2016-05-26T15:46:49.000Z</published>
    <updated>2017-03-23T02:13:26.000Z</updated>
    
    <content type="html"><![CDATA[<p>作者：森目</p>
<p>有一个大侠很孤独，孤独得不知道做什么好，于是决定去追杀一个恶霸。恶霸被追得满世界跑，跑着跑着，亲戚朋友都跑没了，于是恶霸也变得很孤独。为了方便，我们不妨称这两人为孤独大侠和孤独恶霸。</p>
<p>孤独大侠追着孤独恶霸，从早到晚，从春到冬，从左到右，从北到南。追着追着，他们感到实在太他妈的孤独了，于是约定好每天午觉的时候聊上一聊。为了保证彼此的安全，他们睡在两座相邻的山峰上，隔空用传音聊天。有时孤独大侠生病了，拉下了距离，两个人就在隔得很远的山峰上用“远得不能再远的传音”喊话。两个人叽里呱啦聊得火热，果然一点儿都不孤独了。高兴起来的孤独大侠觉得追杀孤独恶霸好像也没有什么特别的意义，就经常故意放慢步伐，好让他多歇一会儿，不要跑得那么累。偶尔聊得特别高兴，孤独大侠还会给孤独恶霸放个假，让他回家探探亲，看看老婆抱抱孩子。但没放几天，孤独大侠又会去追孤独恶霸，因为他又感到无比的孤独了。</p>
<p>他们聊得越来越投契，越来越觉得对方理应是自己这辈子最好的朋友，从来没有任何人能像对方那样了解自己。有一回，他们甚至就隔着块大石头聊了一晚上，直到清晨的露水打湿干裂的嘴唇，才勉强挪动僵硬的双腿开始例行的追和逃。还有一回，他们隔着一条河交换了食物，孤独大侠吃了孤独恶霸的烤兔，觉得好吃，竖了下大拇指。孤独恶霸吃了孤独大侠的烤鱼，更觉得好吃，抱了一下拳。那时天已擦黑，孤独大侠忽然想起今天还没有追过孤独恶霸，貌似没有办法对自己交差，连忙说声对不住，“嗖”地一声，朝孤独恶霸头顶两尺高处打过去一颗铁丸。孤独恶霸摸着头嘿嘿一笑，牙齿很白。</p>
<p>某天，排名比孤独大侠还要高出许多的另一位大侠（据说就是头号大侠，我们不妨称之为未知大侠）路过碰到了正在休息的孤独恶霸。本来未知大侠也不屑于搭理这种小角色，可看到孤独恶霸笑得实在太开心，不由想起自己已经孤独很久，也没个人可以说话解闷。于是他就微笑上前，想交个朋友。不料对方正沉浸在和十几座山外的孤独大侠的聊天当中，居然没理他。未知大侠三番两次得不到回应，一怒之下运出“打谁谁死神功”轰了过去。孤独恶霸这次本来已经死翘翘了，但是闻讯赶来的孤独大侠舍不得他死，费尽九牛二虎之力，求了不少人，终于把他救活。</p>
<p>开始追逃的前几年，每到春天最宜人的日子，管督察的大侠都会不远不近地跟着孤独大侠进行督查，这时两人就只好以命相搏，飞刀，铁丸满天飞。当然，每当督察大侠责问孤独大侠为什么不杀了孤独恶霸时，孤独大侠都会借口距离太远不方便操作，始终没有使出绝技“重得接不住的掌”来痛下杀手。后来，督察大侠也就懒得陪他们满世界乱跑，侠界也就彻底失去了他们的消息。</p>
<p>不过，孤独大侠仍然在追杀着孤独恶霸，其实对方早已提议——既然大家交情都这么好了，为什么不停止追逃而化敌为友呢？孤独大侠想了很久说，不行，因为除了这个，我实在不知道做什么好。又过了一阵子，在一次兴高采烈的聊天之后，孤独大侠终于同意了对方的请求，决定试上一试，便和孤独恶霸一起回了家。孤独大侠在孤独恶霸家做客好几个月，开始也觉得确实十分快活，绝无孤独感。可惜时间一久，浑身瘙痒，痒得呆不住，只好趁孤独恶霸一家熟睡之际逃走了。孤独恶霸晨起发现对方跑掉了，本以为自己会大笑三声说危险解除了，我高枕无忧啦，没想到却被一种突然而至的孤独击中。他虽然很爱自己的妻子和孩子，很想多陪陪他们，但最后还是出门追孤独大侠去了。</p>
<p>这一追，就是整整一年，因为孤独大侠实在逃得太快，孤独恶霸往往只能看到他的残影。在这年的最后一天，气喘吁吁的孤独恶霸终于追上了孤独大侠，孤独恶霸扶着腰正想问对方为什么一直不开“远得不能再远的传音”，孤独大侠却忽然变了脸色，运起“重得接不住的掌”打了过来。因为过了整整一年，孤独大侠已经变得十分极其太过孤独了，他已经升级为“终极孤独大侠”，终极孤独的他，必然要对孤独恶霸实行终极追杀。孤独恶霸心想这回必然歇菜了，挡也是白费。没想到，由于孤独大侠已经升级为“终极孤独大侠”，他的“重得接不住的掌”也自动升级为了“终极重得接不住的掌”，还没等发出多远，这个掌就因为自身太重直接砸到了地上，砸出了一个深坑，爆出漫天尘土，差点砸到了自己的脚尖。等烟尘散尽，灰头土脸的孤独大侠看了看同样灰头土脸的孤独恶霸，终于忍不住哈哈地笑了，孤独恶霸抓了抓脑袋，也嘿嘿地笑了起来。</p>
<p>从此两人继续追来逃去，聊东聊西的生活，他们仍然感到对方是这辈子最值得珍惜的朋友。一直追啊追啊，逃啊逃啊，直到孤独大侠都退休了，直到孤独恶霸也退休了，直到孤独恶霸的孩子都生第三个孩子了，直到孤独恶霸的妻子老死了，直到他们都死掉了，他们还是好朋友。可是，他们到底为什么那么投缘啊？</p>
<p>永远没有人知道，这成了侠界和恶霸界永远的谜。</p>
<hr>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;作者：森目&lt;/p&gt;
&lt;p&gt;有一个大侠很孤独，孤独得不知道做什么好，于是决定去追杀一个恶霸。恶霸被追得满世界跑，跑着跑着，亲戚朋友都跑没了，于是恶霸也变得很孤独。为了方便，我们不妨称这两人为孤独大侠和孤独恶霸。&lt;/p&gt;
&lt;p&gt;孤独大侠追着孤独恶霸，从早到晚，从春到冬，从左到右
    
    </summary>
    
      <category term="小说" scheme="http://liuhouer.github.io/categories/%E5%B0%8F%E8%AF%B4/"/>
    
    
      <category term="小说" scheme="http://liuhouer.github.io/tags/%E5%B0%8F%E8%AF%B4/"/>
    
  </entry>
  
  <entry>
    <title>蛇先生×小仓鼠</title>
    <link href="http://liuhouer.github.io/2016/05/23/%E8%9B%87%E5%85%88%E7%94%9F%C3%97%E5%B0%8F%E4%BB%93%E9%BC%A0/"/>
    <id>http://liuhouer.github.io/2016/05/23/蛇先生×小仓鼠/</id>
    <published>2016-05-23T15:46:49.000Z</published>
    <updated>2017-03-23T02:13:26.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="蛇先生×小仓鼠"><a href="#蛇先生×小仓鼠" class="headerlink" title="蛇先生×小仓鼠"></a>蛇先生×小仓鼠</h2><h3 id="1-蛇先生是动物园的蛇先生。"><a href="#1-蛇先生是动物园的蛇先生。" class="headerlink" title="1.蛇先生是动物园的蛇先生。"></a>1.蛇先生是动物园的蛇先生。</h3><p>小仓鼠是动物园里蛇先生的晚餐。<br>“蛇先生！你打算吃我吗！”<br>“……”<br>“蛇先生！你确定不先洗洗吗！”<br>“……”<br>“蛇先生！！你吃东西不拔毛吗！！”<br>“……”<br>“蛇先生！不拔毛的话……”<br>“闭嘴！再吵我就真的吃了你！”</p>
<h3 id="2-反正蛇先生还是动物园里的蛇先生。"><a href="#2-反正蛇先生还是动物园里的蛇先生。" class="headerlink" title="2.反正蛇先生还是动物园里的蛇先生。"></a>2.反正蛇先生还是动物园里的蛇先生。</h3><p>小仓鼠却变成了蛇先生的储备粮。<br>“蛇先生！今天你饿了吗！”<br>“……”<br>“蛇先生！！那你现在饿吗！”<br>“……”<br>“蛇先生！你吃不吃玉米粒啊！”<br>“……”<br>“蛇先生！你……”<br>蛇先生张开蛇嘴，吐出蛇信子，露出凶煞的表情。<br>“……蛇先生你终于肯吃我了吗？”<br>“……”<br>“那你拔毛吗！”<br>“滚。”<br>蛇先生一个扫尾把小仓鼠咕噜咕噜滚走了。</p>
<h3 id="3-蛇先生成了动物园第一条不吃仓鼠的蛇。"><a href="#3-蛇先生成了动物园第一条不吃仓鼠的蛇。" class="headerlink" title="3.蛇先生成了动物园第一条不吃仓鼠的蛇。"></a>3.蛇先生成了动物园第一条不吃仓鼠的蛇。</h3><p>小仓鼠成了动物园最著名的仓鼠。<br>蛇先生用尾尖点点仓鼠鼓鼓的腮帮子。<br>“这个是什么？”<br>“这似窝的粮似！！”<br>蛇先生用力戳了戳。<br>“很疼的！！！！！”<br>蛇先生张开嘴，“你还敢吼我。”<br>小仓鼠不舍的捂住腮帮子。<br>“…那你可以等我吃完再吃我吗？”<br>蛇先生收回蛇信子，溜去一边儿睡觉去了。<br>“好吧。”</p>
<h3 id="4-蛇先生是动物园中最不缺肉的蛇。"><a href="#4-蛇先生是动物园中最不缺肉的蛇。" class="headerlink" title="4.蛇先生是动物园中最不缺肉的蛇。"></a>4.蛇先生是动物园中最不缺肉的蛇。</h3><p>小仓鼠是动物园中长肉最快的仓鼠。<br>“你怎么这么胖了？”<br>“…因为没有跑轮！”<br>蛇先生将小仓鼠扫到自己身上。<br>“跑吧。”<br>“蛇先生你身上好滑！！！！”<br>“闭嘴，再不跑我吃了你。”<br>“蛇先生你身上好凉！！”<br>“闭嘴，再啰嗦我就吃了你。”<br>“蛇先生你身上还有花纹！！！”<br>“闭嘴！再多嘴我就……”<br>“蛇先生你身上一点儿毛都没有！！”<br>蛇先生很挫败。<br>为什么这招不管用了呢？</p>
<h3 id="5-蛇先生是动物园中最不怕热的蛇。"><a href="#5-蛇先生是动物园中最不怕热的蛇。" class="headerlink" title="5.蛇先生是动物园中最不怕热的蛇。"></a>5.蛇先生是动物园中最不怕热的蛇。</h3><p>小仓鼠是动物园中最奄奄一息的仓鼠。<br>“好热好热好热好热！！！”<br>“……”<br>“真的好热！！！”<br>“……”<br>“以前仓鼠窝还有纳凉板呢！！！”<br>“……”<br>“为什么蛇先生就没有呢！！”<br>“……”<br>“蛇先生你不热吗！！”<br>“你想说什么？”<br>“……我可以躺在你身上睡一觉吗？”<br>“……”<br>“蛇先生身上特别凉快的！！！”<br>“……”<br>“还滑滑的！！”<br>“……”<br>“还……”<br>“闭嘴，上来，吵醒我你就死定了。”<br>于是小仓鼠欢快的跑到蛇先生身上睡觉去了。<br>饲养员送食时，看到盘着蛇身休息的蛇先生，身上还有个四只爪子平爬的小东西。<br>“……那是什么？”<br>“是仓鼠。”<br>“它怎么不吃了？”<br>“……大概是……恋爱了。”</p>
<h3 id="6-蛇先生是动物园中最奇葩的蛇。"><a href="#6-蛇先生是动物园中最奇葩的蛇。" class="headerlink" title="6.蛇先生是动物园中最奇葩的蛇。"></a>6.蛇先生是动物园中最奇葩的蛇。</h3><p>小仓鼠是动物园中最幸福的仓鼠。<br>饲养员惊奇。<br>游客也很惊奇。<br>“哇！！你看！那条蛇不吃仓鼠！”<br>“原来真的不吃！”<br>“叽叽喳喳喳喳叽叽……”<br>小仓鼠抬头问问蛇先生。<br>“蛇先生蛇先生他们在看什么！！”<br>“看你，和我。”<br>“啊！为什么！！”<br>“因为我们相处的很愉快。”<br>小仓鼠噗嗤噗嗤的爬上蛇先生身上，抱着蛇先生后脑狠狠亲了一口。<br>“当然要愉快！！！”<br>“…给我滚下去。”<br>“哇！妈妈！你看那条蛇不仅不吃仓鼠！还会脸红啊！！！”</p>
<p>小仓鼠到现在都不懂为什么蛇先生一直不吃自己。<br>“蛇先生！！蛇先生！！”<br>“……”<br>“你为什么不吃我啊！！”<br>“嫌脏。”<br>“我每天都有口水浴的！！！”<br>“嫌腻。”<br>“我每天都有在你身上锻炼的！！！”<br>“嫌小。”<br>“你看你看我都胖了一圈儿了！！！”<br>“……”</p>
<p>蛇先生的窝里，每天小仓鼠都会这么问它。<br>然而，蛇先生依旧不会吃它。</p>
<p>真是个美好的动物园。</p>
<p>真是个美好的蛇先生，和小仓鼠。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;蛇先生×小仓鼠&quot;&gt;&lt;a href=&quot;#蛇先生×小仓鼠&quot; class=&quot;headerlink&quot; title=&quot;蛇先生×小仓鼠&quot;&gt;&lt;/a&gt;蛇先生×小仓鼠&lt;/h2&gt;&lt;h3 id=&quot;1-蛇先生是动物园的蛇先生。&quot;&gt;&lt;a href=&quot;#1-蛇先生是动物园的蛇先生。&quot; cla
    
    </summary>
    
      <category term="碎碎念" scheme="http://liuhouer.github.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
    
      <category term="碎碎念" scheme="http://liuhouer.github.io/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
  </entry>
  
  <entry>
    <title>微单微世界</title>
    <link href="http://liuhouer.github.io/2016/05/21/%E5%BE%AE%E5%8D%95%E5%BE%AE%E4%B8%96%E7%95%8C/"/>
    <id>http://liuhouer.github.io/2016/05/21/微单微世界/</id>
    <published>2016-05-21T07:41:15.000Z</published>
    <updated>2017-03-23T02:13:26.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>它并不是我的花 我只是恰好途经了它的盛放</strong><br><strong>同步更新到分类-微世界</strong></p>
<p><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/67923945.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/87724692.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/12485394.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/43890907.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/33553156.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/71478007.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/54986814.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/19144292.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/8199880.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/22002353.jpg" alt=""></p>
<a id="more"></a>
<p><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/4250594.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/27349057.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/5353150.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/14551624.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/44291243.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/24813716.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/11940907.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/68535462.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/80630521.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/9539985.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/72368393.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/736041.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/62232648.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/1922292.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/58676817.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/5059352.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/92142896.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/90931502.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/99907801.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/28671294.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/30456407.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/43635238.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/75427677.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/60633573.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/51121352.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/80237220.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/58739069.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/40293444.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/46482768.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/90842627.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/58891007.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/85673753.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/36957423.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/63416581.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/43682545.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/12911677.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/27480103.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/46201941.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/39895040.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/58071090.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/97721109.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/99720024.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/41347985.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/57287468.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/58052617.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/82046383.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/70513407.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/20933265.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/24137689.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/44710976.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/98087416.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/2296695.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/20876858.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/36754958.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/8224310.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/66144086.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/36997812.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/94912415.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/46883400.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/5424044.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/97024871.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/29077709.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/63745429.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/8802639.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/61168856.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/13431417.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/77343907.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/53725141.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/61394292.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/37811455.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/96847249.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/97167936.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/70637654.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/13261990.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/8579430.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/69715639.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/12452625.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/15057804.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/34872169.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/54260144.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/98764925.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/26910959.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/40154282.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/80472748.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/69254957.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/39436645.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/35736376.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/13777103.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/17161150.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/18020041.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/97809510.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/19341926.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/73013812.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/91059830.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/77122246.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/36177757.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/71255168.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/38292901.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/39724383.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/63510372.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/90132350.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/92195544.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/97754586.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/70234156.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/82616165.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/6465239.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/77455387.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/97308300.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/8734743.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/11411136.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/49924280.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/17626469.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/9514521.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/84847209.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/71190776.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/79498613.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/90186468.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/2280965.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/67909421.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/3507117.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/31285534.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/70129004.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/32561928.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/88388885.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/22827148.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/68179222.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/73356339.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/34936555.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/45691011.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/53341019.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/66355665.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/74158591.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/90480919.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/78069816.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/18364390.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/63343391.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/58089407.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/79295694.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/68550970.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/10120905.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/25253483.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/20525904.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/54814351.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/51936564.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/66305730.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/20217637.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/18376955.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/95473693.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/8022878.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/2548507.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/22567190.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/87097142.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/93640356.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/2625165.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/23572264.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/47201793.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/79634344.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/92474787.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/24045219.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/3332624.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/59313255.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/97385176.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/81333415.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/51074526.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/92274071.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/60737741.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/54248646.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/41732815.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/6850992.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/35591552.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/89161001.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/2790463.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/23733752.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/78701625.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/43446926.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/92410902.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/20626919.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/13265853.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/1082248.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/88052571.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/26218088.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/10229120.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/7025945.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/35564673.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/24593583.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/21019374.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/55629085.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/72073293.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/97577415.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/10815851.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/7342314.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/23905886.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/72522054.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/64530486.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/27603753.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/51133941.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/36136841.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/37997725.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/74640770.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/26758866.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/94819125.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/92509617.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/33071204.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/84115437.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/48994646.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/63274873.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/81832883.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/71478007.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/49799674.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/60690168.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/29963222.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/55824697.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/73197198.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/42745813.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/76000228.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/92599096.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/79098461.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/73231938.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/82183515.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/5875088.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/26252839.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/84980763.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/61973899.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/30275762.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/13751123.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/28242219.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/75988397.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/55074488.jpg" alt=""><br><img src="http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/51096235.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;它并不是我的花 我只是恰好途经了它的盛放&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;同步更新到分类-微世界&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/67923945.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/87724692.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/12485394.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/43890907.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/33553156.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/71478007.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/54986814.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/19144292.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/8199880.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://7xubu6.com1.z0.glb.clouddn.com/16-5-21/22002353.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="摄影" scheme="http://liuhouer.github.io/categories/%E6%91%84%E5%BD%B1/"/>
    
    
      <category term="摄影" scheme="http://liuhouer.github.io/tags/%E6%91%84%E5%BD%B1/"/>
    
  </entry>
  
  <entry>
    <title>日志维度分析以及自动邮件发送</title>
    <link href="http://liuhouer.github.io/2016/04/26/%E6%97%A5%E5%BF%97%E7%BB%B4%E5%BA%A6%E5%88%86%E6%9E%90%E4%BB%A5%E5%8F%8A%E8%87%AA%E5%8A%A8%E9%82%AE%E4%BB%B6%E5%8F%91%E9%80%81/"/>
    <id>http://liuhouer.github.io/2016/04/26/日志维度分析以及自动邮件发送/</id>
    <published>2016-04-26T07:41:15.000Z</published>
    <updated>2017-03-23T02:13:26.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="今天要统计下各种维度下的数据，访问量等等，写了几个方法，实现了维度分析，并将返回结果自动发送邮件到自定义邮箱"><a href="#今天要统计下各种维度下的数据，访问量等等，写了几个方法，实现了维度分析，并将返回结果自动发送邮件到自定义邮箱" class="headerlink" title="今天要统计下各种维度下的数据，访问量等等，写了几个方法，实现了维度分析，并将返回结果自动发送邮件到自定义邮箱"></a>今天要统计下各种维度下的数据，访问量等等，写了几个方法，实现了维度分析，并将返回结果自动发送邮件到自定义邮箱</h2><h3 id="主要实现类"><a href="#主要实现类" class="headerlink" title="主要实现类"></a>主要实现类</h3><figure class="highlight dart"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">public <span class="keyword">static</span> <span class="keyword">void</span> main(<span class="built_in">String</span>[] args) &#123;</div><div class="line"><span class="keyword">try</span>&#123;</div><div class="line"></div><div class="line"><span class="built_in">List</span>&lt;trackVO&gt; tlist = <span class="keyword">new</span> ArrayList&lt;trackVO&gt;();</div><div class="line"><span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt; list = ReadFile(<span class="string">"/Users/jeyy/Documents/test_pc.access.log.2016-04-25"</span>);</div><div class="line"><span class="comment">//System.out.println(JsonContext);</span></div><div class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; list.size(); i++) &#123;</div><div class="line"></div><div class="line"><span class="comment">//System.out.println(list.get(i));</span></div><div class="line">trackVO model =  JsonUtil.jsonUtil.jsonToModel(list.<span class="keyword">get</span>(i), trackVO.<span class="keyword">class</span>);</div><div class="line">tlist.add(model);</div><div class="line"></div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"> <span class="comment">//实现统计逻辑</span></div><div class="line"></div><div class="line"> <span class="built_in">Map</span>&lt;<span class="built_in">String</span>, Integer&gt; m = getCount(tlist,<span class="string">"pageUrl"</span>);</div><div class="line"></div><div class="line"></div><div class="line"> <span class="comment">//打印统计结果|发送邮件</span></div><div class="line"> <span class="built_in">String</span> rs = printMap(m);</div><div class="line"></div><div class="line"></div><div class="line"> EmailUtils.emailUtil.analyseLog(<span class="string">"test@qq.com"</span>, rs);</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">&#125;<span class="keyword">catch</span>(Exception e)&#123;</div><div class="line">e.printStackTrace();</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<a id="more"></a>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/** * 读取文件返回string</span></div><div class="line"></div><div class="line">* <span class="doctag">@param</span> Path</div><div class="line">    * <span class="doctag">@return</span></div><div class="line">    */</div><div class="line">       <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">List</span>&lt;String&gt; ReadFile(String Path)&#123;</div><div class="line">        File file = <span class="keyword">new</span> File(Path);</div><div class="line">       <span class="keyword">List</span>&lt;String&gt; <span class="keyword">list</span> = <span class="keyword">new</span> ArrayList&lt;String&gt;();</div><div class="line">       Scanner scanner = <span class="keyword">null</span>;</div><div class="line">       <span class="keyword">try</span> &#123;</div><div class="line">       scanner = <span class="keyword">new</span> Scanner(file, <span class="string">"utf-8"</span>);</div><div class="line">       <span class="keyword">while</span> (scanner.hasNextLine()) &#123;</div><div class="line">       StringBuilder buffer = <span class="keyword">new</span> StringBuilder();</div><div class="line">       buffer.append(scanner.nextLine());</div><div class="line">       <span class="keyword">list</span>.add(buffer.toString());</div><div class="line">       &#125;</div><div class="line"></div><div class="line">       &#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</div><div class="line">       <span class="comment">// TODO Auto-generated catch block </span></div><div class="line"></div><div class="line">       &#125; <span class="keyword">finally</span> &#123;</div><div class="line">       <span class="keyword">if</span> (scanner != <span class="keyword">null</span>) &#123;</div><div class="line">       scanner.close();</div><div class="line">       &#125;</div><div class="line">       &#125;</div><div class="line"></div><div class="line">       <span class="keyword">return</span> <span class="keyword">list</span>;</div><div class="line">       &#125;</div></pre></td></tr></table></figure>
<figure class="highlight dart"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/** * 实现统计逻辑</span></div><div class="line"></div><div class="line">* @param tlist</div><div class="line">    */</div><div class="line">       public <span class="keyword">static</span> <span class="built_in">Map</span>&lt;<span class="built_in">String</span>,Integer&gt; getCount(<span class="built_in">List</span>&lt;trackVO&gt; tlist,<span class="built_in">String</span> column) &#123;</div><div class="line">       <span class="built_in">Map</span>&lt;<span class="built_in">String</span>,Integer&gt; m = <span class="keyword">new</span> HashMap&lt;<span class="built_in">String</span>,Integer&gt;();</div><div class="line">       <span class="comment">//用word初使化m，m中包含了所有不重复的单词</span></div><div class="line">       <span class="keyword">for</span>(<span class="built_in">int</span> i=<span class="number">0</span>;i&lt;tlist.size();i++)&#123;</div><div class="line">       <span class="built_in">String</span> word  = <span class="string">""</span>;</div><div class="line">       word = caseColumn(tlist, column, i, word);</div><div class="line">       m.put(word,<span class="number">0</span>);</div><div class="line">       &#125;</div><div class="line">       <span class="built_in">Set</span>&lt;<span class="built_in">String</span>&gt; <span class="keyword">set</span> = m.keySet();</div><div class="line">       <span class="comment">//用word中的每个单词与m中的单词比较，发现相同的就统计一次   </span></div><div class="line">       <span class="keyword">for</span>(<span class="built_in">int</span> i=<span class="number">0</span>;i&lt;tlist.size();i++)&#123;</div><div class="line">       <span class="built_in">String</span> word = <span class="string">""</span>;</div><div class="line">       word = caseColumn(tlist, column, i, word);</div><div class="line">       <span class="built_in">Iterator</span>&lt;<span class="built_in">String</span>&gt; it = <span class="keyword">set</span>.iterator();</div><div class="line">       <span class="keyword">while</span>(it.hasNext())&#123;</div><div class="line">         <span class="built_in">String</span> k = it.next();</div><div class="line">         <span class="keyword">if</span>(word.equals(k))&#123;</div><div class="line">       <span class="built_in">int</span> c = m.<span class="keyword">get</span>(k);                 </div><div class="line">       c++;</div><div class="line">       m.put(word,c);</div><div class="line">       &#125;</div><div class="line">       &#125;                         </div><div class="line">       &#125;</div><div class="line">       m = sortMap(m);</div><div class="line"></div><div class="line">       <span class="comment">//System.out.println(m);</span></div><div class="line">       <span class="keyword">return</span> m;</div><div class="line">       &#125;</div></pre></td></tr></table></figure>
<figure class="highlight lasso"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/** * 根据column判断字段的取值</span></div><div class="line"></div><div class="line"> * @param tlist</div><div class="line">     * @param column</div><div class="line">     * @param i</div><div class="line">     * @param word</div><div class="line">     * @return</div><div class="line">     */</div><div class="line">        <span class="keyword">public</span> static <span class="built_in">String</span> caseColumn(<span class="built_in">List</span>&lt;trackVO&gt; tlist, <span class="built_in">String</span> column, int i, <span class="built_in">String</span> word) &#123;</div><div class="line">        <span class="keyword">if</span>(<span class="string">"cookieId"</span>.<span class="keyword">equals</span>(column))&#123;</div><div class="line">        word = tlist.get(i).getCookieId();</div><div class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="string">"currentTime"</span>.<span class="keyword">equals</span>(column))&#123;</div><div class="line">        word = tlist.get(i).getCurrentTime();</div><div class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="string">"from"</span>.<span class="keyword">equals</span>(column))&#123;</div><div class="line">        word = tlist.get(i).getFrom();</div><div class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="string">"ip"</span>.<span class="keyword">equals</span>(column))&#123;</div><div class="line">        word = tlist.get(i).getIp();</div><div class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="string">"moudle"</span>.<span class="keyword">equals</span>(column))&#123;</div><div class="line">        word = tlist.get(i).getMoudle();</div><div class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="string">"pageUrl"</span>.<span class="keyword">equals</span>(column))&#123;</div><div class="line">        word = tlist.get(i).getPageUrl();</div><div class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="string">"spider"</span>.<span class="keyword">equals</span>(column))&#123;</div><div class="line">        word = tlist.get(i).getSpider();</div><div class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="string">"userId"</span>.<span class="keyword">equals</span>(column))&#123;</div><div class="line">        word = tlist.get(i).getUserId();</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> word;</div><div class="line">        &#125;</div><div class="line">    ----</div><div class="line"></div><div class="line"></div><div class="line">    <span class="comment">//Map根据value排序</span></div><div class="line">        <span class="keyword">public</span> static <span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">Integer</span>&gt; sortMap(<span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">Integer</span>&gt; <span class="built_in">map</span>) &#123;</div><div class="line">        <span class="built_in">List</span>&lt;<span class="built_in">Map</span>.Entry&lt;<span class="built_in">String</span>, <span class="built_in">Integer</span>&gt;&gt; <span class="built_in">list</span> = <span class="literal">new</span> LinkedList&lt;<span class="built_in">Map</span>.Entry&lt;<span class="built_in">String</span>, <span class="built_in">Integer</span>&gt;&gt;(<span class="built_in">map</span>.entrySet());</div><div class="line">        Comparator&lt;<span class="built_in">Map</span>.Entry&lt;<span class="built_in">String</span>, <span class="built_in">Integer</span>&gt;&gt; c = <span class="literal">new</span> Comparator&lt;<span class="built_in">Map</span>.Entry&lt;<span class="built_in">String</span>, <span class="built_in">Integer</span>&gt;&gt;() &#123;</div><div class="line">        <span class="keyword">public</span> int compare(Entry&lt;<span class="built_in">String</span>, <span class="built_in">Integer</span>&gt; o1, Entry&lt;<span class="built_in">String</span>, <span class="built_in">Integer</span>&gt; o2) &#123;</div><div class="line">        <span class="keyword">return</span> -(o1.getValue() - o2.getValue()); <span class="comment">//倒序排列</span></div><div class="line">        &#125;</div><div class="line">        &#125;;</div><div class="line">        Collections.sort(<span class="built_in">list</span>, c);</div><div class="line">        <span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">Integer</span>&gt; result = <span class="literal">new</span> LinkedHashMap&lt;<span class="built_in">String</span>, <span class="built_in">Integer</span>&gt;();</div><div class="line"></div><div class="line">for (Iterator&lt;Entry&lt;<span class="built_in">String</span>, <span class="built_in">Integer</span>&gt;&gt; it = <span class="built_in">list</span>.iterator(); it.hasNext();) &#123;</div><div class="line"><span class="built_in">Map</span>.Entry&lt;<span class="built_in">String</span>, <span class="built_in">Integer</span>&gt; entry = (<span class="built_in">Map</span>.Entry&lt;<span class="built_in">String</span>, <span class="built_in">Integer</span>&gt;) it.next();</div><div class="line">result.put(entry.getKey(), entry.getValue());</div><div class="line">&#125;</div><div class="line"><span class="keyword">return</span> result;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight nimrod"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">//遍历<span class="type">Map</span>并且返回排版好的<span class="type">String</span>字符串</div><div class="line"></div><div class="line">public <span class="keyword">static</span> <span class="type">String</span> printMap(<span class="type">Map</span>&lt;<span class="type">String</span>, <span class="type">Integer</span>&gt; map) &#123;</div><div class="line"><span class="type">StringBuilder</span> sb = new <span class="type">StringBuilder</span>();</div><div class="line">sb.append(<span class="string">"&lt;html&gt;&lt;body&gt;&lt;p style=\"margin-left: 30px;\"&gt;&lt;font size=\"5\" color=\"rgb(216,206,178)\" &gt;日志分析&lt;/font&gt;&lt;/p&gt;"</span>);</div><div class="line"></div><div class="line">sb.append(<span class="string">"&lt;p style=\"background-color:rgb(163,210,202);margin-left: 30px;\"&gt;"</span>);</div><div class="line">sb.append(<span class="string">"统计"</span>+<span class="string">"||||"</span>+<span class="string">"次&lt;br&gt;"</span>);</div><div class="line">sb.append(<span class="string">"&lt;br&gt;"</span>);</div><div class="line"><span class="type">Iterator</span>&lt;<span class="type">Map</span>.<span class="type">Entry</span>&lt;<span class="type">String</span>, <span class="type">Integer</span>&gt;&gt; <span class="keyword">iterator</span> = map.entrySet().<span class="keyword">iterator</span>();</div><div class="line"><span class="keyword">while</span> (<span class="keyword">iterator</span>.hasNext()) &#123;</div><div class="line"><span class="type">Map</span>.<span class="type">Entry</span>&lt;<span class="type">String</span>, <span class="type">Integer</span>&gt; entry = <span class="keyword">iterator</span>.next();</div><div class="line">sb.append(entry.getKey()+<span class="string">"||||"</span>+entry.getValue().toString());</div><div class="line">sb.append(<span class="string">"&lt;br&gt;"</span>);</div><div class="line">//<span class="type">System</span>.<span class="keyword">out</span>.println(entry.getKey() + <span class="string">"----&gt;"</span> + entry.getValue().toString());</div><div class="line">&#125;</div><div class="line">sb.append(<span class="string">"----analysed by bruce----&lt;br/&gt;&lt;br/&gt;"</span> + <span class="string">"&lt;/p&gt;"</span> + <span class="string">"&lt;/body&gt;&lt;/html&gt;"</span>);</div><div class="line"></div><div class="line"><span class="keyword">return</span> sb.toString();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="辅助实现方法"><a href="#辅助实现方法" class="headerlink" title="辅助实现方法"></a>辅助实现方法</h3><h4 id="trackVO"><a href="#trackVO" class="headerlink" title="trackVO"></a>trackVO</h4><figure class="highlight typescript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> trackVO &#123;</div><div class="line"><span class="keyword">public</span> <span class="built_in">String</span> cookieId      ; <span class="comment">//         :9f7c9520f094e534c3313bf92405a56b</span></div><div class="line"><span class="keyword">public</span> <span class="built_in">String</span> currentTime   ; <span class="comment">//            :1461599856952</span></div><div class="line"><span class="keyword">public</span> <span class="built_in">String</span> <span class="keyword">from</span>          ; <span class="comment">//     :</span></div><div class="line"><span class="keyword">public</span> <span class="built_in">String</span> ip            ; <span class="comment">//   :111.206.241.76</span></div><div class="line"><span class="keyword">public</span> <span class="built_in">String</span> moudle        ; <span class="comment">//       :web_access</span></div><div class="line"><span class="keyword">public</span> <span class="built_in">String</span> pageUrl       ; <span class="comment">//        :www.test.com/</span></div><div class="line"><span class="keyword">public</span> <span class="built_in">String</span> spider        ; <span class="comment">//       :false</span></div><div class="line"><span class="keyword">public</span> <span class="built_in">String</span> userId        ; <span class="comment">//       :</span></div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="built_in">String</span> getCookieId() &#123;</div><div class="line"><span class="keyword">return</span> cookieId;</div><div class="line">&#125;</div><div class="line"><span class="keyword">public</span> <span class="built_in">void</span> setCookieId(<span class="built_in">String</span> cookieId) &#123;</div><div class="line"><span class="keyword">this</span>.cookieId = cookieId;</div><div class="line">&#125;</div><div class="line"><span class="keyword">public</span> <span class="built_in">String</span> getCurrentTime() &#123;</div><div class="line"><span class="keyword">return</span> currentTime;</div><div class="line">&#125;</div><div class="line"><span class="keyword">public</span> <span class="built_in">void</span> setCurrentTime(<span class="built_in">String</span> currentTime) &#123;</div><div class="line"><span class="keyword">this</span>.currentTime = currentTime;</div><div class="line">&#125;</div><div class="line"><span class="keyword">public</span> <span class="built_in">String</span> getFrom() &#123;</div><div class="line"><span class="keyword">return</span> <span class="keyword">from</span>;</div><div class="line">&#125;</div><div class="line"><span class="keyword">public</span> <span class="built_in">void</span> setFrom(<span class="built_in">String</span> <span class="keyword">from</span>) &#123;</div><div class="line"><span class="keyword">this</span>.from = <span class="keyword">from</span>;</div><div class="line">&#125;</div><div class="line"><span class="keyword">public</span> <span class="built_in">String</span> getIp() &#123;</div><div class="line"><span class="keyword">return</span> ip;</div><div class="line">&#125;</div><div class="line"><span class="keyword">public</span> <span class="built_in">void</span> setIp(<span class="built_in">String</span> ip) &#123;</div><div class="line"><span class="keyword">this</span>.ip = ip;</div><div class="line">&#125;</div><div class="line"><span class="keyword">public</span> <span class="built_in">String</span> getMoudle() &#123;</div><div class="line"><span class="keyword">return</span> moudle;</div><div class="line">&#125;</div><div class="line"><span class="keyword">public</span> <span class="built_in">void</span> setMoudle(<span class="built_in">String</span> moudle) &#123;</div><div class="line"><span class="keyword">this</span>.moudle = moudle;</div><div class="line">&#125;</div><div class="line"><span class="keyword">public</span> <span class="built_in">String</span> getPageUrl() &#123;</div><div class="line"><span class="keyword">return</span> pageUrl;</div><div class="line">&#125;</div><div class="line"><span class="keyword">public</span> <span class="built_in">void</span> setPageUrl(<span class="built_in">String</span> pageUrl) &#123;</div><div class="line"><span class="keyword">this</span>.pageUrl = pageUrl;</div><div class="line">&#125;</div><div class="line"><span class="keyword">public</span> <span class="built_in">String</span> getSpider() &#123;</div><div class="line"><span class="keyword">return</span> spider;</div><div class="line">&#125;</div><div class="line"><span class="keyword">public</span> <span class="built_in">void</span> setSpider(<span class="built_in">String</span> spider) &#123;</div><div class="line"><span class="keyword">this</span>.spider = spider;</div><div class="line">&#125;</div><div class="line"><span class="keyword">public</span> <span class="built_in">String</span> getUserId() &#123;</div><div class="line"><span class="keyword">return</span> userId;</div><div class="line">&#125;</div><div class="line"><span class="keyword">public</span> <span class="built_in">void</span> setUserId(<span class="built_in">String</span> userId) &#123;</div><div class="line"><span class="keyword">this</span>.userId = userId;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="EmailUtils"><a href="#EmailUtils" class="headerlink" title="EmailUtils"></a>EmailUtils</h4><figure class="highlight processing"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> class EmailUtils &#123;</div><div class="line"><span class="keyword">private</span> <span class="keyword">static</span> Logger <span class="built_in">log</span> =LoggerFactory.getLogger(EmailUtils.class);</div><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> EmailUtils emailUtil = <span class="keyword">new</span> EmailUtils();</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line">日志分析auto发送</div><div class="line"></div><div class="line">    @param toEmail</div><div class="line">    @param usrId</div><div class="line">    @param authCode</div><div class="line">     */</div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> analyseLog(<span class="keyword">String</span> toEmail,<span class="keyword">String</span> cont) &#123;</div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line"></div><div class="line"><span class="keyword">String</span> host = <span class="string">"smtp.163.com"</span>;</div><div class="line"><span class="keyword">String</span> myEmail = <span class="string">"test@163.com"</span>;</div><div class="line"><span class="keyword">String</span> myName = <span class="string">"小布"</span>;</div><div class="line"><span class="keyword">String</span> myPassword = Base64Util.JIEMI(<span class="string">"MTM0ODM3MjQwNTEwMDAwMDA="</span>);</div><div class="line"><span class="comment">// 接收者邮箱</span></div><div class="line"><span class="keyword">String</span> to = toEmail;</div><div class="line"><span class="keyword">String</span> subject = <span class="string">"日志分析"</span>;</div><div class="line"><span class="keyword">String</span> mailConent = <span class="string">"日志分析"</span>;</div><div class="line"></div><div class="line">HtmlEmail email = <span class="keyword">new</span> HtmlEmail();</div><div class="line">email.setAuthentication(myEmail, myPassword);</div><div class="line">email.setHostName(host);</div><div class="line">email.addTo(to, <span class="string">"亲"</span>);</div><div class="line">email.setFrom(myEmail);</div><div class="line">email.setSubject(subject);</div><div class="line"><span class="comment">// 注意，发送内容时，后面这段会让中文正常显示，否则乱码</span></div><div class="line">email.setCharset(<span class="string">"utf-8"</span>);</div><div class="line">email.setHtmlMsg(cont); <span class="comment">/* 邮件内容 */</span></div><div class="line"><span class="comment">// 添加附件对象</span></div><div class="line"><span class="comment">// email.attach(attachment);</span></div><div class="line"><span class="comment">// 发送</span></div><div class="line">email.send();</div><div class="line">System.err.<span class="built_in">println</span>(<span class="string">"邮件发送成功"</span>);</div><div class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line"><span class="comment">// <span class="doctag">TODO:</span> handle exception</span></div><div class="line">e.printStackTrace();</div><div class="line">System.err.<span class="built_in">println</span>(<span class="string">"邮件发送失败"</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="实现效果"><a href="#实现效果" class="headerlink" title="实现效果"></a>实现效果</h3><p><img src="http://7xpfpd.com1.z0.glb.clouddn.com/post_/analyselog.png" alt="enter description here"></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;今天要统计下各种维度下的数据，访问量等等，写了几个方法，实现了维度分析，并将返回结果自动发送邮件到自定义邮箱&quot;&gt;&lt;a href=&quot;#今天要统计下各种维度下的数据，访问量等等，写了几个方法，实现了维度分析，并将返回结果自动发送邮件到自定义邮箱&quot; class=&quot;headerlink&quot; title=&quot;今天要统计下各种维度下的数据，访问量等等，写了几个方法，实现了维度分析，并将返回结果自动发送邮件到自定义邮箱&quot;&gt;&lt;/a&gt;今天要统计下各种维度下的数据，访问量等等，写了几个方法，实现了维度分析，并将返回结果自动发送邮件到自定义邮箱&lt;/h2&gt;&lt;h3 id=&quot;主要实现类&quot;&gt;&lt;a href=&quot;#主要实现类&quot; class=&quot;headerlink&quot; title=&quot;主要实现类&quot;&gt;&lt;/a&gt;主要实现类&lt;/h3&gt;&lt;figure class=&quot;highlight dart&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;public &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; main(&lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt;[] args) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;List&lt;/span&gt;&amp;lt;trackVO&amp;gt; tlist = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;trackVO&amp;gt;();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;List&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt;&amp;gt; list = ReadFile(&lt;span class=&quot;string&quot;&gt;&quot;/Users/jeyy/Documents/test_pc.access.log.2016-04-25&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//System.out.println(JsonContext);&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; list.size(); i++) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//System.out.println(list.get(i));&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;trackVO model =  JsonUtil.jsonUtil.jsonToModel(list.&lt;span class=&quot;keyword&quot;&gt;get&lt;/span&gt;(i), trackVO.&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;tlist.add(model);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;span class=&quot;comment&quot;&gt;//实现统计逻辑&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;span class=&quot;built_in&quot;&gt;Map&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt;, Integer&amp;gt; m = getCount(tlist,&lt;span class=&quot;string&quot;&gt;&quot;pageUrl&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;span class=&quot;comment&quot;&gt;//打印统计结果|发送邮件&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt; rs = printMap(m);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; EmailUtils.emailUtil.analyseLog(&lt;span class=&quot;string&quot;&gt;&quot;test@qq.com&quot;&lt;/span&gt;, rs);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt;(Exception e)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;e.printStackTrace();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="java" scheme="http://liuhouer.github.io/categories/java/"/>
    
    
      <category term="java" scheme="http://liuhouer.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>nodejs规范工具grunt</title>
    <link href="http://liuhouer.github.io/2016/04/11/Nodejs%E8%A7%84%E8%8C%83%E5%B7%A5%E5%85%B7-grunt/"/>
    <id>http://liuhouer.github.io/2016/04/11/Nodejs规范工具-grunt/</id>
    <published>2016-04-11T10:41:10.000Z</published>
    <updated>2017-03-23T02:13:26.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>一个应用开发到一定阶段，普遍会遇到一个问题。当功能越来越多，代码量越来越大，bug修复越来越频繁，开发人员一波一波的交替，…..应该用会向着越来越不可控发展。我们不能再准确估计新功能的开发时间，也不知道一个bug修复后是否会引发另一个bug出现。所有的程序开发，都会面临着这样的问题。</p>
<p>C/C++程序通过makefile管理编译测试打包的过程，Java程序通过Maven,Ant实现项目构建管理功能，Python有pip，Ruby有gem。在Nodejs的领域，我们同样需要一个项目构建工具，这就是Grunt。Grunt可以执行像压缩, 编译, 单元测试, 代码检查以及打包发布的任务。</p>
<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><ul>
<li>Grunt介绍</li>
<li>Grunt安装</li>
<li>Grunt使用</li>
<li>Grunt常用插件：<br>1).grunt-contrib-uglify：压缩js代码<br>2).grunt-contrib-concat：合并js文件<br>3).grunt-contrib-qunit：单元测试<br>4).grunt-contrib-jshint：js代码检查<br>5).grunt-contrib-watch：文件监控</li>
</ul>
<h2 id="1-Grunt介绍"><a href="#1-Grunt介绍" class="headerlink" title="1.Grunt介绍"></a>1.Grunt介绍</h2><p>Grunt是一个自动化的项目构建工具. 如果你需要重复的执行像压缩, 编译, 单元测试, 代码检查以及打包发布的任务. 那么你可以使用Grunt来处理这些任务, 你所需要做的只是配置好Grunt, 这样能很大程度的简化你的工作.</p>
<p>如果在团队中使用Grunt, 你只需要与其他人员约定好使用Grunt应该规避的问题, 就能够很方便的自动化的处理大部分的常见工作任务, 你所付出的努力几乎为0.</p>
<p><img src="http://7xpfpd.com1.z0.glb.clouddn.com/post.adbbde95-83cf-4f20-95ad-353123b4f3e7.jpg" alt=""></p>
<a id="more"></a>    
<h2 id="2-Grunt安装"><a href="#2-Grunt安装" class="headerlink" title="2. Grunt安装"></a>2. Grunt安装</h2><p>Grunt和Grunt插件都是通过npm, Node.js包管理器安装和管理的.</p>
<p>我的系统环境</p>
<p>win7 64bit<br>Nodejs:v0.10.5<br>Npm:1.2.19<br>    ~ D:\workspace\javascript&gt;node -v<br>    v0.10.5</p>
<pre><code>~ D:\workspace\javascript&gt;npm -v
1.2.19
</code></pre><p>在系统中，我们已经安装好了Nodejs和npm。win7安装nodejs请参考文章：Nodejs开发框架Express3.0开发手记–从零开始</p>
<p>安装grunt-cli<br>grunt-cli并不grunt，grunt-cli的作用是管理本地各版本的grunt，让命令行可以直接执行grunt命令。</p>
<p>下面全局安装grunt-cli(-g)</p>
<pre><code>~ D:\workspace\javascript&gt;npm install -g grunt-cli

D:\toolkit\nodejs\grunt -&gt; D:\toolkit\nodejs\node_modules\grunt-cli\bin\grunt
grunt-cli@0.1.9 D:\toolkit\nodejs\node_modules\grunt-cli
├── resolve@0.3.1
├── nopt@1.0.10 (abbrev@1.0.4)
└── findup-sync@0.1.2 (lodash@1.0.1, glob@3.1.21)
</code></pre><p>我们看到grunt-cli似乎做了一个软件链接，把grunt脚本复制到nodejs安装根目录里。</p>
<p>接下来全局安装grunt</p>
<pre><code>~ D:\workspace\javascript&gt;npm install -g grunt

~ D:\workspace\javascript&gt;grunt
grunt-cli: The grunt command line interface. (v0.1.9)

Fatal error: Unable to find local grunt.

If you&apos;re seeing this message, either a Gruntfile wasn&apos;t found or grunt
hasn&apos;t been installed locally to your project. For more information about
installing and configuring grunt, please see the Getting Started guide:

http://gruntjs.com/getting-started
</code></pre><p>执行grunt命令，我们发现系统报错了，提示不能加载本地库。因为，grunt命令执行，是需要当前目录中包括package.json和Gruntfile.js两个文件。</p>
<p>package.json，是npm项目配置文件<br>Gruntfile.js，是专门用来配置grunt的配置文件</p>
<p>接下来，我们创建一个express3的项目。</p>
<p> D:\workspace\javascript&gt;express -e nodejs-grunt<br> D:\workspace\javascript&gt;cd nodejs-grunt &amp;&amp; npm install<br> D:\workspace\javascript\nodejs-grunt&gt;npm install grunt –save-dev<br>安装-save-dev，就可以，直接把grunt作为devDependencies写入的package.json中。</p>
<pre><code>~ vi package.json

{
  &quot;name&quot;: &quot;nodejs-grunt&quot;,
  &quot;version&quot;: &quot;0.0.1&quot;,
  &quot;private&quot;: true,
  &quot;scripts&quot;: {
&quot;start&quot;: &quot;node app.js&quot;
  },
  &quot;dependencies&quot;: {
&quot;express&quot;: &quot;3.2.2&quot;,
&quot;ejs&quot;: &quot;*&quot;
  },
  &quot;devDependencies&quot;: {
&quot;grunt&quot;: &quot;~0.4.1&quot;,
  }
}
</code></pre><p>然后，我们再执行grunt，系统提示缺少Gruntfile文件</p>
<pre><code>~ D:\workspace\javascript\nodejs-grunt&gt;grunt
A valid Gruntfile could not be found. Please see the getting started guide for
more information on how to configure grunt: http://gruntjs.com/getting-started
Fatal error: Unable to find Gruntfile.
</code></pre><p>创建Gruntfile文件</p>
<pre><code>~ vi Gruntfile.js

module.exports = function(grunt) {
  // Project configuration.
  grunt.initConfig({
pkg: grunt.file.readJSON(&apos;package.json&apos;),
uglify: {
  options: {
banner: &apos;/*! &lt;%= pkg.name %&gt; &lt;%= grunt.template.today(&quot;yyyy-mm-dd&quot;) %&gt; */\n&apos;
  },
  build: {
src: &apos;src/&lt;%= pkg.name %&gt;.js&apos;,
dest: &apos;build/&lt;%= pkg.name %&gt;.min.js&apos;
  }
}
  });
  // Load the plugin that provides the &quot;uglify&quot; task.
  grunt.loadNpmTasks(&apos;grunt-contrib-uglify&apos;);
  // Default task(s).
  grunt.registerTask(&apos;default&apos;, [&apos;uglify&apos;]);
};
</code></pre><p>再次运行grunt，这时提示是grunt-contrib-uglify包找不到，是Gruntfile.js配置文件中的错误了。</p>
<pre><code>~ D:\workspace\javascript\nodejs-grunt&gt;grunt
</code></pre><blockquote>
<blockquote>
<pre><code>Local Npm module &quot;grunt-contrib-uglify&quot; not found. Is it installed?
Warning: Task &quot;uglify&quot; not found. Use --force to continue.
</code></pre><p>我们编辑package.js, 在devDependencies中增加grunt-contrib-uglify的依赖库</p>
</blockquote>
</blockquote>
<pre><code>~ vi package.js
{
  &quot;name&quot;: &quot;application-name&quot;,
  &quot;version&quot;: &quot;0.0.1&quot;,
  &quot;private&quot;: true,
  &quot;scripts&quot;: {
&quot;start&quot;: &quot;node app.js&quot;
  },
  &quot;dependencies&quot;: {
&quot;express&quot;: &quot;3.2.2&quot;,
&quot;ejs&quot;: &quot;*&quot;
  },
  &quot;devDependencies&quot;: {
&quot;grunt&quot;: &quot;~0.4.1&quot;
&quot;grunt-contrib-uglify&quot;: &quot;~0.1.1&quot;
  }
}

~ D:\workspace\javascript\nodejs-grunt&gt;npm install
</code></pre><p>我们创建两个目录src和build，和nodejs-grunt.js的文件</p>
<pre><code>~ D:\workspace\javascript\nodejs-grunt&gt;mkdir src
~ D:\workspace\javascript\nodejs-grunt&gt;mkdir build

~ D:\workspace\javascript\nodejs-grunt&gt;vi src/nodejs-grunt.js
var sayHello = function(name){
return &quot;Hello &quot; + name;
}
</code></pre><p>我们再执行grunt</p>
<pre><code>~ D:\workspace\javascript\nodejs-grunt&gt;grunt
Running &quot;uglify:build&quot; (uglify) task
File &quot;build/nodejs-grunt.min.js&quot; created.
Uncompressed size: 59 bytes.
Compressed size: 40 bytes gzipped (43 bytes minified).

Done, without errors.
</code></pre><p>grunt运行正常，并且执行了uglify:build的任务。打开build/nodejs-grunt.min.js文件</p>
<pre><code>~ D:\workspace\javascript\nodejs-grunt&gt;vi build/nodejs-grunt.min.js

/*! nodejs-grunt 2013-08-17 */
var sayHello=function(l){return&quot;Hello &quot;+l};
</code></pre><p>我们可以看到一个新生成的压缩文件nodejs-grunt.min.js。</p>
<p>上面的例子，是一个js文件压缩的例子。</p>
<h2 id="3-Grunt使用"><a href="#3-Grunt使用" class="headerlink" title="3.  Grunt使用"></a>3.  Grunt使用</h2><p>我们可以通过help帮助，看一下grunt怎么用。</p>
<pre><code>~ D:\workspace\javascript\nodejs-grunt&gt;grunt --help
Grunt: The JavaScript Task Runner (v0.4.1)

Usage
 grunt [options] [task [task ...]]

Options
--help, -h  Display this help text.
--base  Specify an alternate base path. By default, all file paths are
relative to the Gruntfile. (grunt.file.setBase) *
--no-color  Disable colored output.
   --gruntfile  Specify an alternate Gruntfile. By default, grunt looks in the
current or parent directories for the nearest Gruntfile.js or
Gruntfile.coffee file.
   --debug, -d  Enable debugging mode for tasks that support it.
   --stack  Print a stack trace when exiting with a warning or fatal error.
   --force, -f  A way to force your way past warnings. Want a suggestion? Don&apos;t
use this option, fix your code.
   --tasks  Additional directory paths to scan for task and &quot;extra&quot; files.
(grunt.loadTasks) *
 --npm  Npm-installed grunt plugins to scan for task and &quot;extra&quot; files.
(grunt.loadNpmTasks) *
--no-write  Disable writing files (dry run).
 --verbose, -v  Verbose mode. A lot more information output.
 --version, -V  Print the grunt version. Combine with --verbose for more info.
  --completion  Output shell auto-completion rules. See the grunt-cli
documentation for more information.

Options marked with * have methods exposed via the grunt API and should instead
be specified inside the Gruntfile wherever possible.

Available tasks
uglify  Minify files with UglifyJS. *
   default  Alias for &quot;uglify&quot; task.

Tasks run in the order specified. Arguments may be passed to tasks that accept
them by using colons, like &quot;lint:files&quot;. Tasks marked with * are &quot;multi tasks&quot;
and will iterate over all sub-targets if no argument is specified.

The list of available tasks may change based on tasks directories or grunt
plugins specified in the Gruntfile or via command-line options.

For more information, see http://gruntjs.com/
</code></pre><p><strong>有两方面是我们需要注意的：</strong></p>
<ul>
<li>Options: grunt支持的命令</li>
<li><p>Available tasks: 当目录可执行的任务</p>
<h2 id="4-Grunt常用插件"><a href="#4-Grunt常用插件" class="headerlink" title="4.  Grunt常用插件"></a>4.  Grunt常用插件</h2></li>
<li><p>grunt-contrib-uglify：压缩js代码</p>
</li>
<li>grunt-contrib-concat：合并js文件</li>
<li>grunt-contrib-qunit：单元测试</li>
<li>grunt-contrib-jshint：js代码检查</li>
<li>grunt-contrib-watch：监控文件修改并重新执行注册的任务<h4 id="1-grunt-contrib-uglify：是执行压缩JS代码的任务"><a href="#1-grunt-contrib-uglify：是执行压缩JS代码的任务" class="headerlink" title="1). grunt-contrib-uglify：是执行压缩JS代码的任务"></a>1). grunt-contrib-uglify：是执行压缩JS代码的任务</h4>具体操作请查看”2.Grunt安装”，</li>
</ul>
<h4 id="2-grunt-contrib-concat：是执行合并文件的任务。"><a href="#2-grunt-contrib-concat：是执行合并文件的任务。" class="headerlink" title="2). grunt-contrib-concat：是执行合并文件的任务。"></a>2). grunt-contrib-concat：是执行合并文件的任务。</h4><p>插件安装及更新到配置</p>
<p> D:\workspace\javascript\nodejs-grunt&gt;npm install grunt-contrib-concat –save-dev<br>修改Gruntfile.js文件</p>
<pre><code>grunt.initConfig({
pkg: grunt.file.readJSON(&apos;package.json&apos;),
concat:{
  options: {
//定义一个字符串插入没个文件之间用于连接输出
separator: &apos;;&apos;
  },
  dist: {
  src: [&apos;src/*.js&apos;],
  dest: &apos;build/&lt;%= pkg.name %&gt;.cat.js&apos;
  }
},
  });
grunt.loadNpmTasks(&apos;grunt-contrib-qunit&apos;);
grunt.registerTask(&apos;default&apos;, [&apos;uglify&apos;,&apos;concat&apos;]);
</code></pre><p>在src目录，新增加文件src/sayBye.js</p>
<pre><code>~ vi src/sayBye.js

var sayBye = function(name){
return &quot;Bye &quot; + name;
}
</code></pre><p>执行concat任务</p>
<pre><code>~ D:\workspace\javascript\nodejs-grunt&gt;grunt concat
Running &quot;concat:dist&quot; (concat) task
File &quot;build/nodejs-grunt.cat.js&quot; created.

Done, without errors.
</code></pre><p>查看生成的文件build/nodejs-grunt.cat.js</p>
<pre><code>~ vi build/nodejs-grunt.cat.js

var sayHello = function(name){
return &quot;Hello &quot; + name;
};var sayBye = function(name){
return &quot;Bye &quot; + name;
}
</code></pre><p>两个文件完全的合并。</p>
<h4 id="3-grunt-contrib-qunit：是执行QUint单元测试的任务。"><a href="#3-grunt-contrib-qunit：是执行QUint单元测试的任务。" class="headerlink" title="3). grunt-contrib-qunit：是执行QUint单元测试的任务。"></a>3). grunt-contrib-qunit：是执行QUint单元测试的任务。</h4><p>插件安装及更新到配置</p>
<p> D:\workspace\javascript\nodejs-grunt&gt;npm install grunt-contrib-qunit –save-dev<br>修改Gruntfile.js文件</p>
<pre><code>grunt.initConfig({
pkg: grunt.file.readJSON(&apos;package.json&apos;),
qunit: {
  files: [&apos;test/*.html&apos;]
}
  });
grunt.loadNpmTasks(&apos;grunt-contrib-qunit&apos;);
grunt.registerTask(&apos;default&apos;, [&apos;uglify&apos;,&apos;concat&apos;,&apos;qunit&apos;]);
</code></pre><p>创建一个test目录，并编写用于测试的qunit.html文件</p>
<pre><code>~ mkdir test
~ vi test/qunit.html
&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot; &quot;http://www.w3.org/TR/html4/loose.dtd&quot;&gt;
&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot;&gt;
&lt;link rel=&quot;stylesheet&quot; href=&quot;http://github.com/jquery/qunit/raw/master/qunit/qunit.css&quot; type=&quot;text/css&quot; media=&quot;screen&quot; /&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;http://github.com/jquery/qunit/raw/master/qunit/qunit.js&quot;&gt;&lt;/script&gt;
&lt;script&gt;
test(&quot;hello&quot;, function() {
ok(true, &quot;world&quot;);
});
&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;h1 id=&quot;qunit-header&quot;&gt;QUnit example&lt;/h1&gt;
&lt;h2 id=&quot;qunit-banner&quot;&gt;&lt;/h2&gt;
&lt;h2 id=&quot;qunit-userAgent&quot;&gt;&lt;/h2&gt;
&lt;ol id=&quot;qunit-tests&quot;&gt;&lt;/ol&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre><p>执行qunit命令</p>
<pre><code>~ D:\workspace\javascript\nodejs-grunt&gt;grunt qunit
Running &quot;qunit:files&quot; (qunit) task
Testing test/qunit.html .OK
</code></pre><blockquote>
<blockquote>
<pre><code>1 assertions passed (67ms)
</code></pre></blockquote>
</blockquote>
<pre><code>Done, without errors.
</code></pre><p>完成单元测试！！</p>
<h4 id="4-grunt-contrib-jshint：是执行代码验证的任务"><a href="#4-grunt-contrib-jshint：是执行代码验证的任务" class="headerlink" title="4). grunt-contrib-jshint：是执行代码验证的任务"></a>4). grunt-contrib-jshint：是执行代码验证的任务</h4><p>插件安装及更新到配置</p>
<pre><code>~ D:\workspace\javascript\nodejs-grunt&gt;npm install grunt-contrib-jshint --save-dev
</code></pre><p>修改Gruntfile.js文件</p>
<pre><code>grunt.initConfig({
pkg: grunt.file.readJSON(&apos;package.json&apos;),
jshint: {
files: [&apos;gruntfile.js&apos;, &apos;src/*.js&apos;, &apos;build/*.js&apos;],
options: {
globals: {
exports: true
}
}
}
  });
grunt.loadNpmTasks(&apos;grunt-contrib-jshint&apos;);
grunt.registerTask(&apos;default&apos;, [&apos;uglify&apos;,&apos;concat&apos;,&apos;qunit&apos;,&apos;jshint&apos;]);
</code></pre><p>执行jshint代码检查</p>
<pre><code>~ D:\workspace\javascript\nodejs-grunt&gt;grunt jshint
Running &quot;jshint:files&quot; (jshint) task
Linting src/nodejs-grunt.js ...ERROR
[L3:C2] W033: Missing semicolon.
}
Linting build/nodejs-grunt.cat.js ...ERROR
[L5:C2] W033: Missing semicolon.
}
Linting build/nodejs-grunt.min.js ...ERROR
[L2:C42] W033: Missing semicolon.
var sayHello=function(l){return&quot;Hello &quot;+l};

Warning: Task &quot;jshint:files&quot; failed. Use --force to continue.

Aborted due to warnings.
</code></pre><p>好多的错误啊，细看一下，都是”丢失分号”的错误。</p>
<pre><code>~ vi src/sayBye.js
var sayBye = function(name){
return &quot;Bye &quot; + name;
};
</code></pre><p>增加最后一行的分号，解决上面的错误。</p>
<h4 id="5-grunt-contrib-watch，是监控指定文件被修改，重新启动已注册的任务"><a href="#5-grunt-contrib-watch，是监控指定文件被修改，重新启动已注册的任务" class="headerlink" title="5). grunt-contrib-watch，是监控指定文件被修改，重新启动已注册的任务"></a>5). grunt-contrib-watch，是监控指定文件被修改，重新启动已注册的任务</h4><p>我感觉这个插入，就点类似于supervisor的功能。</p>
<p>插件安装及更新到配置</p>
<pre><code>~ D:\workspace\javascript\nodejs-grunt&gt;npm install grunt-contrib-watch --save-dev
</code></pre><p>修改Gruntfile.js文件</p>
<pre><code>grunt.initConfig({
pkg: grunt.file.readJSON(&apos;package.json&apos;),
watch: {
files: [&apos;&lt;%= jshint.files %&gt;&apos;],
tasks: [&apos;jshint&apos;, &apos;qunit&apos;]
}
  });
grunt.loadNpmTasks(&apos;grunt-contrib-watch&apos;);
grunt.registerTask(&apos;default&apos;, [&apos;uglify&apos;,&apos;concat&apos;,&apos;qunit&apos;,&apos;jshint&apos;]);
</code></pre><p>执行watch任务</p>
<pre><code>~ D:\workspace\javascript\nodejs-grunt&gt;grunt watch
Running &quot;watch&quot; task
Waiting...OK
</code></pre><p><strong><em>手动修改src/sayBye.js文件，下面watch的任务被触发</em></strong></p>
<blockquote>
<blockquote>
<pre><code>File &quot;src\sayBye.js&quot; changed.
</code></pre></blockquote>
</blockquote>
<pre><code>Running &quot;jshint:files&quot; (jshint) task
Linting src/sayBye.js ...ERROR
[L3:C2] W033: Missing semicolon.
}
Linting build/nodejs-grunt.cat.js ...ERROR
[L3:C3] W032: Unnecessary semicolon.
};;var sayBye = function(name){
Linting build/nodejs-grunt.min.js ...ERROR
[L2:C42] W033: Missing semicolon.
var sayHello=function(l){return&quot;Hello &quot;+l};

Warning: Task &quot;jshint:files&quot; failed. Use --force to continue.

Aborted due to warnings.
Completed in 0.770s at Sat Aug 17 2013 20:49:15 GMT+0800 (中国标准时间) - Waiting...
</code></pre><p>上面介绍的5个任务，可能是我们比较常用配置的任务，大家也可以按照需要指定自己的任务。</p>
<p>下面贴上所最终的package.json和Gruntfile.js文件代码</p>
<pre><code>package.json


{
  &quot;name&quot;: &quot;nodejs-grunt&quot;,
  &quot;version&quot;: &quot;0.0.1&quot;,
  &quot;private&quot;: true,
  &quot;scripts&quot;: {
&quot;start&quot;: &quot;node app.js&quot;
  },
  &quot;dependencies&quot;: {
&quot;express&quot;: &quot;3.2.2&quot;,
&quot;ejs&quot;: &quot;*&quot;
  },
  &quot;devDependencies&quot;: {
&quot;grunt&quot;: &quot;~0.4.1&quot;,
&quot;grunt-contrib-uglify&quot;: &quot;~0.1.1&quot;,
&quot;grunt-contrib-concat&quot;: &quot;~0.3.0&quot;,
&quot;grunt-contrib-qunit&quot;: &quot;~0.2.2&quot;,
&quot;grunt-contrib-jshint&quot;: &quot;~0.6.3&quot;,
&quot;grunt-contrib-watch&quot;: &quot;~0.5.2&quot;
  }
}
Gruntfile.js


module.exports = function(grunt) {

  // Project configuration.
  grunt.initConfig({
pkg: grunt.file.readJSON(&apos;package.json&apos;),
uglify: {
  options: {
banner: &apos;/*! &lt;%= pkg.name %&gt; &lt;%= grunt.template.today(&quot;yyyy-mm-dd&quot;) %&gt; */\n&apos;
  },
  build: {
src: &apos;src/&lt;%= pkg.name %&gt;.js&apos;,
dest: &apos;build/&lt;%= pkg.name %&gt;.min.js&apos;
  }
},
concat:{
  options: {
//定义一个字符串插入没个文件之间用于连接输出
separator: &apos;;&apos;
  },
  dist: {
  src: [&apos;src/*.js&apos;],
  dest: &apos;build/&lt;%= pkg.name %&gt;.cat.js&apos;
  }
},
qunit: {
  files: [&apos;test/*.html&apos;]
},
jshint: {
files: [&apos;gruntfile.js&apos;, &apos;src/*.js&apos;, &apos;build/*.js&apos;],
options: {
globals: {
exports: true
}
}
},
watch: {
files: [&apos;&lt;%= jshint.files %&gt;&apos;],
tasks: [&apos;jshint&apos;, &apos;qunit&apos;]
}
  });

  grunt.loadNpmTasks(&apos;grunt-contrib-uglify&apos;);
  grunt.loadNpmTasks(&apos;grunt-contrib-concat&apos;);
  grunt.loadNpmTasks(&apos;grunt-contrib-qunit&apos;);
  grunt.loadNpmTasks(&apos;grunt-contrib-jshint&apos;);
  grunt.loadNpmTasks(&apos;grunt-contrib-watch&apos;);

  // Default task(s).
  grunt.registerTask(&apos;default&apos;, [&apos;uglify&apos;,&apos;concat&apos;,&apos;qunit&apos;,&apos;jshint&apos;]);

};
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;一个应用开发到一定阶段，普遍会遇到一个问题。当功能越来越多，代码量越来越大，bug修复越来越频繁，开发人员一波一波的交替，…..应该用会向着越来越不可控发展。我们不能再准确估计新功能的开发时间，也不知道一个bug修复后是否会引发另一个bug出现。所有的程序开发，都会面临着这样的问题。&lt;/p&gt;
&lt;p&gt;C/C++程序通过makefile管理编译测试打包的过程，Java程序通过Maven,Ant实现项目构建管理功能，Python有pip，Ruby有gem。在Nodejs的领域，我们同样需要一个项目构建工具，这就是Grunt。Grunt可以执行像压缩, 编译, 单元测试, 代码检查以及打包发布的任务。&lt;/p&gt;
&lt;h1 id=&quot;目录&quot;&gt;&lt;a href=&quot;#目录&quot; class=&quot;headerlink&quot; title=&quot;目录&quot;&gt;&lt;/a&gt;目录&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;Grunt介绍&lt;/li&gt;
&lt;li&gt;Grunt安装&lt;/li&gt;
&lt;li&gt;Grunt使用&lt;/li&gt;
&lt;li&gt;Grunt常用插件：&lt;br&gt;1).grunt-contrib-uglify：压缩js代码&lt;br&gt;2).grunt-contrib-concat：合并js文件&lt;br&gt;3).grunt-contrib-qunit：单元测试&lt;br&gt;4).grunt-contrib-jshint：js代码检查&lt;br&gt;5).grunt-contrib-watch：文件监控&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;1-Grunt介绍&quot;&gt;&lt;a href=&quot;#1-Grunt介绍&quot; class=&quot;headerlink&quot; title=&quot;1.Grunt介绍&quot;&gt;&lt;/a&gt;1.Grunt介绍&lt;/h2&gt;&lt;p&gt;Grunt是一个自动化的项目构建工具. 如果你需要重复的执行像压缩, 编译, 单元测试, 代码检查以及打包发布的任务. 那么你可以使用Grunt来处理这些任务, 你所需要做的只是配置好Grunt, 这样能很大程度的简化你的工作.&lt;/p&gt;
&lt;p&gt;如果在团队中使用Grunt, 你只需要与其他人员约定好使用Grunt应该规避的问题, 就能够很方便的自动化的处理大部分的常见工作任务, 你所付出的努力几乎为0.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xpfpd.com1.z0.glb.clouddn.com/post.adbbde95-83cf-4f20-95ad-353123b4f3e7.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="nodejs" scheme="http://liuhouer.github.io/categories/nodejs/"/>
    
      <category term="grunt" scheme="http://liuhouer.github.io/categories/nodejs/grunt/"/>
    
    
      <category term="nodejs" scheme="http://liuhouer.github.io/tags/nodejs/"/>
    
      <category term="grunt" scheme="http://liuhouer.github.io/tags/grunt/"/>
    
  </entry>
  
  <entry>
    <title>Gradle介绍及安装</title>
    <link href="http://liuhouer.github.io/2016/04/05/Gradle%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%AE%89%E8%A3%85/"/>
    <id>http://liuhouer.github.io/2016/04/05/Gradle介绍及安装/</id>
    <published>2016-04-05T12:36:32.000Z</published>
    <updated>2017-03-23T02:13:26.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="对Gradle进行一个简单的介绍，以及它的安装。"><a href="#对Gradle进行一个简单的介绍，以及它的安装。" class="headerlink" title="对Gradle进行一个简单的介绍，以及它的安装。"></a>对Gradle进行一个简单的介绍，以及它的安装。</h1><h2 id="Gradle介绍"><a href="#Gradle介绍" class="headerlink" title="Gradle介绍"></a>Gradle介绍</h2><ul>
<li>Gradle是一个基于JVM的构建工具，它提供了：</li>
<li>像Ant一样，通用灵活的构建工具</li>
<li>可以切换的，基于约定的构建框架</li>
<li>强大的多工程构建支持</li>
<li>基于Apache Ivy的强大的依赖管理</li>
<li>支持maven, Ivy仓库</li>
<li>支持传递性依赖管理，而不需要远程仓库或者是pom.xml和ivy.xml配置文件。</li>
<li>对Ant的任务做了很好的集成</li>
<li>基于Groovy，build脚本使用Groovy编写</li>
<li>有广泛的领域模型支持构建<h2 id="Gradle-概述"><a href="#Gradle-概述" class="headerlink" title="Gradle 概述"></a>Gradle 概述</h2></li>
<li>基于声明和基于约定的构建。</li>
<li>依赖型的编程语言。</li>
<li>可以结构化构建，易于维护和理解。</li>
<li>有高级的API允许你在构建执行的整个过程当中，对它的核心进行监视，或者是配置它的行为。</li>
<li>有良好的扩展性。有增量构建功能来克服性能瓶颈问题。</li>
<li>多项目构建的支持。</li>
<li>多种方式的依赖管理。</li>
<li>是第一个构建集成工具。集成了Ant, maven的功能。</li>
<li>易于移值。</li>
<li>脚本采用Groovy编写，易于维护。</li>
<li>通过Gradle Wrapper允许你在没有安装Gradle的机器上进行Gradle构建。</li>
<li>自由，开源。</li>
</ul>
<a id="more"></a>
<h2 id="Gradle-安装"><a href="#Gradle-安装" class="headerlink" title="Gradle 安装"></a>Gradle 安装</h2><p>1，安装JDK，并配置<code>JAVA\_HOME</code>环境变量。因为Gradle是用Groovy编写的，而Groovy基于JAVA。另外，Java版本要不小于1.5.<br>2，下载。地址是：<code>http://www.gradle.org/downloads</code>。在这里下载你要的版本。<br>3，解压。如果你下载的是gradle-xx-all.zip的完整包，它会有以下内容：</p>
<ul>
<li>二进制文件</li>
<li>用户手册（包括PDF和HTML两种版本）</li>
<li>DSL参考指南</li>
<li>API手册（包括Javadoc和Groovydoc）</li>
<li>样例</li>
<li>源代码，仅供参考使用。<br>4，配置环境变量。配置<code>GRADLE\_HOME</code>到你的gradle根目录当中，然后把<code>%GRADLE\_HOME%/bin</code>（linux或mac的是<code>$GRADLE\_HOME/bin</code>）加到PATH的环境变量。<br>linux用户可以在/.bashrc文件中配置。</li>
</ul>
<p>配置完成之后，运行<code>gradle -v</code>，检查一下是否安装无误。如果安装正确，它会打印出Gradle的版本信息，包括它的构建信息，Groovy, Ant, Ivy, 当前JVM和当前系统的版本信息。</p>
<p>另外，可以通过<code>GRADLE\_OPTS</code>或<code>JAVA\_OPTS</code>来配置Gradle运行时的JVM参数。不过，JAVA_OPTS设置的参数也会影响到其他的JAVA应用程序。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;对Gradle进行一个简单的介绍，以及它的安装。&quot;&gt;&lt;a href=&quot;#对Gradle进行一个简单的介绍，以及它的安装。&quot; class=&quot;headerlink&quot; title=&quot;对Gradle进行一个简单的介绍，以及它的安装。&quot;&gt;&lt;/a&gt;对Gradle进行一个简单的介绍，以及它的安装。&lt;/h1&gt;&lt;h2 id=&quot;Gradle介绍&quot;&gt;&lt;a href=&quot;#Gradle介绍&quot; class=&quot;headerlink&quot; title=&quot;Gradle介绍&quot;&gt;&lt;/a&gt;Gradle介绍&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Gradle是一个基于JVM的构建工具，它提供了：&lt;/li&gt;
&lt;li&gt;像Ant一样，通用灵活的构建工具&lt;/li&gt;
&lt;li&gt;可以切换的，基于约定的构建框架&lt;/li&gt;
&lt;li&gt;强大的多工程构建支持&lt;/li&gt;
&lt;li&gt;基于Apache Ivy的强大的依赖管理&lt;/li&gt;
&lt;li&gt;支持maven, Ivy仓库&lt;/li&gt;
&lt;li&gt;支持传递性依赖管理，而不需要远程仓库或者是pom.xml和ivy.xml配置文件。&lt;/li&gt;
&lt;li&gt;对Ant的任务做了很好的集成&lt;/li&gt;
&lt;li&gt;基于Groovy，build脚本使用Groovy编写&lt;/li&gt;
&lt;li&gt;有广泛的领域模型支持构建&lt;h2 id=&quot;Gradle-概述&quot;&gt;&lt;a href=&quot;#Gradle-概述&quot; class=&quot;headerlink&quot; title=&quot;Gradle 概述&quot;&gt;&lt;/a&gt;Gradle 概述&lt;/h2&gt;&lt;/li&gt;
&lt;li&gt;基于声明和基于约定的构建。&lt;/li&gt;
&lt;li&gt;依赖型的编程语言。&lt;/li&gt;
&lt;li&gt;可以结构化构建，易于维护和理解。&lt;/li&gt;
&lt;li&gt;有高级的API允许你在构建执行的整个过程当中，对它的核心进行监视，或者是配置它的行为。&lt;/li&gt;
&lt;li&gt;有良好的扩展性。有增量构建功能来克服性能瓶颈问题。&lt;/li&gt;
&lt;li&gt;多项目构建的支持。&lt;/li&gt;
&lt;li&gt;多种方式的依赖管理。&lt;/li&gt;
&lt;li&gt;是第一个构建集成工具。集成了Ant, maven的功能。&lt;/li&gt;
&lt;li&gt;易于移值。&lt;/li&gt;
&lt;li&gt;脚本采用Groovy编写，易于维护。&lt;/li&gt;
&lt;li&gt;通过Gradle Wrapper允许你在没有安装Gradle的机器上进行Gradle构建。&lt;/li&gt;
&lt;li&gt;自由，开源。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Gradle" scheme="http://liuhouer.github.io/categories/Gradle/"/>
    
    
      <category term="Gradle" scheme="http://liuhouer.github.io/tags/Gradle/"/>
    
  </entry>
  
  <entry>
    <title>恶棍快车之旅</title>
    <link href="http://liuhouer.github.io/2016/03/26/%E6%81%B6%E6%A3%8D%E5%BF%AB%E8%BD%A6%E4%B9%8B%E6%97%85/"/>
    <id>http://liuhouer.github.io/2016/03/26/恶棍快车之旅/</id>
    <published>2016-03-26T15:46:49.000Z</published>
    <updated>2017-03-23T02:13:26.000Z</updated>
    
    <content type="html"><![CDATA[<p>万圣节，出没在小区里的快递员穿上了动物外套，一只毛茸茸的熊头出现在门禁对讲屏上，着实吓人一跳。最近，她并没有在网店上下过单，好奇心让她早早地打开门。一只“大灰熊”从电梯里出来，麻溜地摘下熊头套，递给她一封信。<br>关门，拆信，里面是一张明信片形式的参观券，上面印有一列火车。她想起来了，前几天去逛商场时，促销活动是“恶棍快车之旅”，她漫不经心地签上了自己的地址，随后就忘了这事儿了。还真的要去参观吗？她走向厨房，将明信片贴在冰箱门上，冰箱压缩器恰好轰鸣起来，不知怎地，她的视线恍惚了，冰箱不再是冰箱，而是一只卡住白鲸的长方形笼子，一头白鲸眼神悲哀地在其中扭动，她扶住冰箱门，定神一看，果然只是幻觉。</p>
<p>“你知道方块鲸吗？一条鲸鱼卡在方块里了。”吃晚饭时，她不经意地说。</p>
<p>“下午办公室里还在聊这个呢。”丈夫疲倦的脸上，闪出兴奋的光，对神秘的事情，他一向热衷，“说是恶棍快车进入终点站时，会发出一种鲸鱼的叫声，就像一头鲸鱼卡在方块里，慢慢地，慢慢地窒息……”丈夫夸张地做了一个掉脑袋的动作，随后总结：即使是机器人，面对死亡，也是会被痛苦折磨的，所以，他们最好别干坏事。<br>胃不太舒服，她不想继续这个话题了。</p>
<p>晚上，他们早早地躺下。她睡了一小会儿，眼皮又睁开了，陷入了所谓的对自己完全无能为力的失眠的长夜。思绪拉扯得很开，散漫，像血瘀女子脸上的红血丝。肚子里不知发生了什么事情，不断有咕噜噜的叫声，焦躁与烦闷一阵阵地涌上来，脸颊像傍晚的天边，堆满了绚烂的火烧云。后来，月光透过窗帘缝洒到被子上，她安静了下来，一遍遍地想到海，如果那辆列车真的在终点站掉下去的话，会不会径直掉到大海里，如果是在海水里，鲸鱼就不会被卡住了吧。头一回，她对身边人的呼噜声没有反感，聆听着，像在海边住着的人，呼噜声只是海浪，她从未去过海边——现在，她对海可以一遍又一遍地猜想。</p>
<p><img src="http://7xpfpd.com1.z0.glb.clouddn.com/manga.tumblr_o46qpvKaN51rrzs5no1_1280.png" alt=""><br><a id="more"></a></p>
<p>海是浓烈的，可能裹住人就不松动，紧紧地缠绕着；海是稀松的，像晒干了的棉花，轻的在被面下一抖，都能看到棉丝之间的空隙；海是僵硬的，像被烧得通红的铁块突然面对一盆冷水，发出咝咝声，接着便缩小了自己的热度，老老实实地固化了……<br>嘴角有一个小泡泡嘟出来，她舔了一下，满不在乎地起床去厨房取上明信片，收拾了一个挎包，掂了掂房间钥匙，甩进包里，关上门，就向地铁走去。搭乘驶向郊区的地铁，一小时后就能转站到恶棍快车。她为什么会知道这条路线？光线昏暗的车厢里，她挖出了一件少女时代的往事。高考那年，父母专门租了一个家教机器人来家里，辅导她的功课，除了晚上陪她做作业到深夜，其它时候他就跟一个暂住她家的远方亲戚没什么两样。她经常偷偷看他，他去洗手间时，她也从门缝里瞄看，他用热水洗脸，刮幼嫩的胡子，还喜欢喷佛手柑味的古龙香水；为了让自己看上去显得老成一点，他总是故意地耷拉下嘴角，拉出两条本来没有的法令纹。本来一切都会顺利，租期一到，她会准备一样小礼物送给他做纪念，在他所属的AI公司接他回去之后，她还要给他写电子邮件，保持联系。然而接近考期的某一天，他带了一个另一家AI公司的女机器人回来，旁若无人地与她在家里天台上呆了一个晚上，她所服务的家庭因为她的失踪报了警，AI管理局派了警察过来，带走了他，罪名是诱拐与破坏服务。那个女机器人也被带走了，据说她是被动犯罪的一方，返厂维修就可以了。他也去维修了吗？她问过父母，他们安慰她说应该是的，但她心里隐约有另一个答案，当时电视新闻里播放过AI管理局道德伦理委员会的声明：即将制定AI惩戒细则，将一些干坏事的机器人直接送往监狱。</p>
<p>夜浓得化不开，从黎明到破晓之间的距离特别漫长，她坐在候车室里，不停地看手表，数着秒针的滴答，直到她车票上显示的那个时间。</p>
<p>根据明信片上的介绍，作为参观者，她应该去最后一节车厢，在快到终点站时，这节车厢会与前面的车厢脱节，停留在铁轨上，车厢里的参观者能透过车窗看到其他车厢一节节地掉入深渊状的地下监狱。这种设置能让AI使用者们放心，清楚地看到那些“彻底坏掉了”的机器人会得到什么样的下场。可是，一些使用者并不喜欢车厢下落过程中，机器人的惨叫声，毕竟，如今的他们长得跟真实人类没什么差别，谁是机器人谁是真实人类，平时就很容易搞错，更别提参观时了。而更多的人还是乐意去看一看，多少像古代抱着极大热情观看绞刑实施的人，对死亡与厄运有着奇怪的痴迷。上车时，她先上了最后一节车厢，又迅速溜下来，去到前面一节。  </p>
<p>是卧铺车厢，她找到一个空铺，躺上去。火车开动的瞬间，她睡着了。醒来时，黎明的光线照亮了一切，她看到对面床上的一个男人睡姿不雅，呈大字型地躺着，窄小的床容不下他的一条胳膊与腿，它们铃铛一般晃荡在床沿。阳光从窗户外伸入大手，紧紧握住他的身体，他像一株旷野上的藤蔓，强悍而骄傲地炫耀着不被干扰的优越感。这时，她反而被阳光中的阴影部分打动，鼻子抽吸起来，对即将发生的各种想象使她无法平静下来。</p>
<p>他醒了。他把手掌摊在她面前，他拿眼角余光看她，似乎掌握了她的秘密，他把她当成一个专攻星座、塔罗、梅花心易的占卜机器人了。</p>
<p>算个命吧。他说。</p>
<p>他的手掌大而松软，她的手指划过那几条纹路时，一股青草混杂着牛马的粪便味升腾，她没有捂住鼻子，反而深深地吸了口气，胸腔与鼻翼舒爽地抽动了一下。“你放过牛？骑过马？你有一个农场？”她试探性地问。他哈哈大笑，她认为那是嘲笑。但这想法阻止不了他把她的手指卷起来，卷得完整，仿佛烟丝被卷在纸中。在她的手心里，是他刚放入的一瓶淡绿色药水，上面的标签写着“LSD通用型”。“喝下去。”他命令她。她没有拒绝。随后，他们并肩坐在床上，等药力开始作用，“感觉到了没有？”他问。“什么？”她的脑袋已经开始变得庞大，耳膜上是大自然的各种声音，夜深人静时听到的天籁的放大声，一张薄雾拉丝的面罩徐缓地从额头顶端下落，一层层地，不断地下落，面罩却没有因此变得更厚，依旧朦胧与透明，映照出一幕幕她熟悉与陌生的画面，她不由自主地大笑起来，她听到他也在笑，“好好享受吧，”他说，“以后想尝试就再也没有了。”双手贴住她的太阳穴，他将她的脑袋向自己拉近，抵到自己的额头上，充满红血丝的眼睛盯着她的眼睛，“那下面，什么也没有，但你一下子摔不死，没有供给，没有检修，你的身体会慢慢生锈、断裂、成为瘸子、瞎子与聋子，最后，你再也爬不动了，一动也不能动，大脑死机了。死了。”他叨叨着，抱住她，开始亲她。</p>
<p>接下来，她经历的似乎是：火车呜咽一声停下，他带她去了一个陌生城市的一间陌生的屋子；又或者是，他们所在的这节车厢脱离了其他车厢，从铁轨上滚下山坡。地点不确定，她清晰地记得，在一个封闭的空间里，他和她在一起，睡觉，做爱，说话，喝水，吃一点点东西，在一种难以分辨是快乐还是痛苦的情绪作用下，她哭了很长时间。而他的脸呈狮子状，张口的样子像是随时准备咆哮。她无法不屈从。</p>
<p>   “你害怕什么？”他问。</p>
<p>   “害怕你害怕的。”她说。  </p>
<p>   “骗子，你害怕暴露身份，你压根就不是我的同类。”他试探她。</p>
<p>   “我是。”</p>
<p>   “你不是。”</p>
<p>争辩很无谓。他们用身体解决。冷感的乳头被抚摩坚硬后，他便进入了，不等她略微潮湿。但是，那突如其来的冲击激发了她喉咙里的怒火，她后来居上地成了主控者。这点让他很惬意，并发出享受的哼哼唧唧。</p>
<p>   “你果然是我们中的一个。”他说，“但你像在逃避什么？”</p>
<p>   “逃避本身。”她说。</p>
<p>她很不自信地说出“逃避本身”四字。任何词语都有一个身体。逃避本身是一条没有尽头的巷子，巷子里躲藏着无数被驱逐的千奇百怪的人，有他的同类，也包括她的同类。</p>
<p>   “逃避本身与现实中的你关联在哪里？”</p>
<p>   “关联就是我真的不是你们的同类。”她哆嗦着，终于喊了出来。</p>
<p>   “骗子！”他不信任地看着她，摇晃她，“如果你真的不是我的同类，你就不会在这节车厢里。”</p>
<p>她不知该怎么向他道歉，好在，浑身的晕眩被新升涌的血流击退，她已有力气驱赶幻觉。甩开他，她跑向紧急隔离门，用明信片上的二维码扫过电子眼，进入火车的最后一节车厢。药力仍有残余，到终点站时，她如一只收紧的海葵蜷缩在角落里。前面的车厢开始下坠，发出惊心动魄的巨响，她听到身旁几个站立的参观者发出啧啧声，一个人说：“真壮观啊！”另一个人说：“安全了，那些恶棍再也不会来打扰我们了。”她勉强站起来，去看他们看着的景象，一个巨大的深渊暗黑无边，一节节车厢像断裂的巨人肢体落下去，她分明被一种“整个人类历史的阴影”穿过，影子向地心陷落，她分明听到一种鲸鱼的哀鸣。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;万圣节，出没在小区里的快递员穿上了动物外套，一只毛茸茸的熊头出现在门禁对讲屏上，着实吓人一跳。最近，她并没有在网店上下过单，好奇心让她早早地打开门。一只“大灰熊”从电梯里出来，麻溜地摘下熊头套，递给她一封信。&lt;br&gt;关门，拆信，里面是一张明信片形式的参观券，上面印有一列火车。她想起来了，前几天去逛商场时，促销活动是“恶棍快车之旅”，她漫不经心地签上了自己的地址，随后就忘了这事儿了。还真的要去参观吗？她走向厨房，将明信片贴在冰箱门上，冰箱压缩器恰好轰鸣起来，不知怎地，她的视线恍惚了，冰箱不再是冰箱，而是一只卡住白鲸的长方形笼子，一头白鲸眼神悲哀地在其中扭动，她扶住冰箱门，定神一看，果然只是幻觉。&lt;/p&gt;
&lt;p&gt;“你知道方块鲸吗？一条鲸鱼卡在方块里了。”吃晚饭时，她不经意地说。&lt;/p&gt;
&lt;p&gt;“下午办公室里还在聊这个呢。”丈夫疲倦的脸上，闪出兴奋的光，对神秘的事情，他一向热衷，“说是恶棍快车进入终点站时，会发出一种鲸鱼的叫声，就像一头鲸鱼卡在方块里，慢慢地，慢慢地窒息……”丈夫夸张地做了一个掉脑袋的动作，随后总结：即使是机器人，面对死亡，也是会被痛苦折磨的，所以，他们最好别干坏事。&lt;br&gt;胃不太舒服，她不想继续这个话题了。&lt;/p&gt;
&lt;p&gt;晚上，他们早早地躺下。她睡了一小会儿，眼皮又睁开了，陷入了所谓的对自己完全无能为力的失眠的长夜。思绪拉扯得很开，散漫，像血瘀女子脸上的红血丝。肚子里不知发生了什么事情，不断有咕噜噜的叫声，焦躁与烦闷一阵阵地涌上来，脸颊像傍晚的天边，堆满了绚烂的火烧云。后来，月光透过窗帘缝洒到被子上，她安静了下来，一遍遍地想到海，如果那辆列车真的在终点站掉下去的话，会不会径直掉到大海里，如果是在海水里，鲸鱼就不会被卡住了吧。头一回，她对身边人的呼噜声没有反感，聆听着，像在海边住着的人，呼噜声只是海浪，她从未去过海边——现在，她对海可以一遍又一遍地猜想。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xpfpd.com1.z0.glb.clouddn.com/manga.tumblr_o46qpvKaN51rrzs5no1_1280.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="碎碎念" scheme="http://liuhouer.github.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
    
      <category term="碎碎念" scheme="http://liuhouer.github.io/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
  </entry>
  
  <entry>
    <title>为什么我们不会谈恋爱了</title>
    <link href="http://liuhouer.github.io/2016/03/17/%E4%B8%BA%E4%BB%80%E4%B9%88%E6%88%91%E4%BB%AC%E4%B8%8D%E4%BC%9A%E8%B0%88%E6%81%8B%E7%88%B1%E4%BA%86/"/>
    <id>http://liuhouer.github.io/2016/03/17/为什么我们不会谈恋爱了/</id>
    <published>2016-03-17T11:39:06.000Z</published>
    <updated>2017-03-23T02:13:26.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近看到了一篇文章</p>
<h1 id="《为什么我们不会谈恋爱了？》"><a href="#《为什么我们不会谈恋爱了？》" class="headerlink" title="《为什么我们不会谈恋爱了？》"></a>《为什么我们不会谈恋爱了？》</h1><p><strong>文丨烟波人长安</strong></p>
<p>   我有一个朋友，单身好些年，最近看了几场爱情电影，少女心勃发，哭着喊着要谈恋爱。我说这个简单啊，满世界是男人，总有一个你看上眼的吧？难不成你看上的是吴彦祖？<br>朋友说不是啊，你不觉得谈恋爱很难吗？<br>哪里难了？我反问，喜欢就表白，成功了就在一起，不成功找下一个，不难啊。<br>你说得轻松。朋友说，第一眼看上了，要找机会说话吧？万一聊不到一块儿怎么办？两个人都不说话，给谁默哀呢？有了共同话题，就要考虑将来一起生活，是不是又一堆问题？到我这年纪，恋爱多数都是奔着结婚去的，我总不能等结婚了，发现不合适，再离婚吧？<br>哦，她今年27，家里催婚，已经催了两年。<br>真的，都快不会谈恋爱了。朋友说。<br>这种时候，一般都应该我出马，告诉她爱情很美好恋爱很温馨喜欢就要上一类的话，灌一碗鸡汤，打一打鸡血，安慰加鼓励。<br>但我仔细想想她那一连串问句，发现我没有办法说些这样的话。<br>再仔细想想，周围单身的朋友一大把，年龄相仿境遇相似，每年的愿望都是脱单，但他娘的，一直没有实现过。也不是没有“好像还挺合适的”那个人，但都没有走到一起。<br>什么时候，谈恋爱变得这么难了？</p>
<p><img src="http://7xpfpd.com1.z0.glb.clouddn.com/tumblr_o44wjcP5Jq1rrzs5no1_1280.png" alt="(～﹃～)~zZ" title="(～﹃～)~zZ"></p>
<a id="more"></a> 
<p>想想我们上学的时候，好像一切都很容易。<br>小学对一个人有好感，可能就因为他是班长、她辫子长，初中对一个人有好感，可能就因为他个子高、她喜欢笑，高中对一个人有好感，可能就因为他学习好、她爱看书。那会儿世界很单纯，不着急表白，不指望回报，看他一眼都觉得开心，天天幻想上学路上会不会偶遇、食堂排队他会不会就在前头，上午出操偶尔打个照面，都面红耳热、心跳能停两分钟。<br>那会儿的恋爱也很容易，偷偷传个纸条、课间在楼梯拐角说说话、躲着家长把那些小心思写在有锁的日记里，一起出去买个头绳，能做到敢拉个手的，我操，那都是英雄。<br>到了大学，“恋爱”这件事就开始复杂了，而且随着学龄见长，还在递增。大一，他够不够体贴、能不能全宿舍组队下副本的时候接你电话；大二，他情人节送你什么礼物、用不用心；大三，他暑假会不会陪你、每天的晚安短信有没有忘；大四，他对未来有没有规划、出国考研还是工作、需不需要异地、异地多久……<br>转眼到了工作，问题又发生了质变，他工资多少、花销多大、我们在哪里开始将来的生活、什么时候结婚、能不能买得起房、他家长怎么看我、要不要孩子、要几个……<br>这就好像学游泳，一开始只要不淹死就行，后来开始讲究姿势，姿势对了，还要力度，力度对了，就要追求速度（对我说的是游泳，你们不要想歪），发展到最后，标准泳池里不能一口气一个来回，你好意思说你会游泳？</p>
<p>甚至“喜欢”这个词，都会发生变化。年少时候喜欢一个人是“找不同”，越标新立异的，越招人喜欢；越是和自己不一样的，就越吸引你的注意。你活泼，他安静，他坐在那里，身上就有一道光。他抱着个篮球拍拍打打，你在教室一待就是一天，你一拢头发，他就看你一眼。<br>而一旦到了适婚的年纪，喜欢一个人就变成了“找相同”，兴趣、爱好、性格、家庭背景，有一点相悖，就多一道坎儿。你抱着电脑看韩剧，他说你俗不可耐；他一回家就打游戏，你说他没有上进心。说多了必然争吵，吵多了，一拍两散。<br>所以歌里唱的“我不想我不想不想长大”，不是唬人的。年龄越大，谈恋爱就越难，因为已经不再是你喜欢我我喜欢你就可以在一起的情况，他背后有他的父母，你背后有你的诉求，两个人站在一块儿，拿着笔画未来，结果一不小心，画出了两条不相交的平行线。</p>
<p>听别人说过一个故事。真假不知道，但很耐琢磨。<br>一个朋友的朋友，女孩，刚过二十五岁，一场旷日持久的恋爱惨淡收场，从此叫嚣一定要找个有钱的，多老都行。后来真的找到了一个。男方大她十岁，不过她不介意，欢天喜地地，搬进了别墅。<br>不到半年，女孩自己提出分手，又搬了出来。<br>不是男的不好，据她说，也是温柔体贴善解人意那种，但就有一个问题，两个人的生活方式相差太远。<br>男的大学没毕业就自己闯荡，拼到三十五岁，有两家公司，平时忙进忙出，很少有休息时间，休闲娱乐以深夜看球为主。女孩美国读的硕士，原则性不加班，工作绝对不带回家，电影话剧如数家珍。两个人一天说不了几句话，一说话就闹矛盾。她不明白他为什么没有时间陪她哪怕逛一次街，他不明白为什么她要看一些不搞笑、不刺激，全程都没几句台词的电影。<br>不是不理解，是没有办法理解。<br>女孩以为，为了别墅，她可以无条件忍让，后来发现如鲠在喉，吐不出来，咽不下去。<br>朋友们都羡慕她找了个有钱的，下半辈子吃穿不愁。她羡慕她们的男朋友虽然工薪一族，但每天都可以坐在一起，吃一顿晚饭。</p>
<p>一提到谈恋爱，我们每个人都说自己要求不高，有钱就可以、有胸就可以、一米八就可以、软妹子就可以，可真的要一起走下去，这些都变成了附加题，答对了加分，但能不能通过考试，看的反而不是这些。<br>有时候一想前路艰难，我们就退缩了。反正一个人好像也挺舒服，犯不着拿两个人生活的繁琐和磨合来折腾自己。<br>于是很长时间都是一个人。于是每一年结束，“脱单”后头都画着一个叉。<br>于是情人节闺密爽约去陪她临时取消加班的男朋友，你带着刚画好的妆缩在沙发里刷手机，外卖叫了一份单人餐。于是酒局未能成行好哥们儿在家哄老婆，你重新打开电脑鼠标停在熟悉的游戏上，犹豫是不是再打一盘。<br>于是你又翻开了朋友圈、微博，看看那个人在干什么。<br>看到Ta也是一个人过，你长出了一口气。<br>“情人节快乐！”你留言。</p>
<p>﻿</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近看到了一篇文章&lt;/p&gt;
&lt;h1 id=&quot;《为什么我们不会谈恋爱了？》&quot;&gt;&lt;a href=&quot;#《为什么我们不会谈恋爱了？》&quot; class=&quot;headerlink&quot; title=&quot;《为什么我们不会谈恋爱了？》&quot;&gt;&lt;/a&gt;《为什么我们不会谈恋爱了？》&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;文丨烟波人长安&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;   我有一个朋友，单身好些年，最近看了几场爱情电影，少女心勃发，哭着喊着要谈恋爱。我说这个简单啊，满世界是男人，总有一个你看上眼的吧？难不成你看上的是吴彦祖？&lt;br&gt;朋友说不是啊，你不觉得谈恋爱很难吗？&lt;br&gt;哪里难了？我反问，喜欢就表白，成功了就在一起，不成功找下一个，不难啊。&lt;br&gt;你说得轻松。朋友说，第一眼看上了，要找机会说话吧？万一聊不到一块儿怎么办？两个人都不说话，给谁默哀呢？有了共同话题，就要考虑将来一起生活，是不是又一堆问题？到我这年纪，恋爱多数都是奔着结婚去的，我总不能等结婚了，发现不合适，再离婚吧？&lt;br&gt;哦，她今年27，家里催婚，已经催了两年。&lt;br&gt;真的，都快不会谈恋爱了。朋友说。&lt;br&gt;这种时候，一般都应该我出马，告诉她爱情很美好恋爱很温馨喜欢就要上一类的话，灌一碗鸡汤，打一打鸡血，安慰加鼓励。&lt;br&gt;但我仔细想想她那一连串问句，发现我没有办法说些这样的话。&lt;br&gt;再仔细想想，周围单身的朋友一大把，年龄相仿境遇相似，每年的愿望都是脱单，但他娘的，一直没有实现过。也不是没有“好像还挺合适的”那个人，但都没有走到一起。&lt;br&gt;什么时候，谈恋爱变得这么难了？&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xpfpd.com1.z0.glb.clouddn.com/tumblr_o44wjcP5Jq1rrzs5no1_1280.png&quot; alt=&quot;(～﹃～)~zZ&quot; title=&quot;(～﹃～)~zZ&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="碎碎念" scheme="http://liuhouer.github.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
    
      <category term="碎碎念" scheme="http://liuhouer.github.io/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
  </entry>
  
  <entry>
    <title>hibernate基于注解的主键生成策略</title>
    <link href="http://liuhouer.github.io/2016/03/15/hibernate%E5%9F%BA%E4%BA%8E%E6%B3%A8%E8%A7%A3%E7%9A%84%E4%B8%BB%E9%94%AE%E7%94%9F%E6%88%90%E7%AD%96%E7%95%A5/"/>
    <id>http://liuhouer.github.io/2016/03/15/hibernate基于注解的主键生成策略/</id>
    <published>2016-03-15T07:18:21.000Z</published>
    <updated>2017-03-23T02:13:26.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="楔子"><a href="#楔子" class="headerlink" title="楔子"></a>楔子</h1><blockquote>
<p><strong>最近想把UUID32位的主键策略改为6位的INT自增的主键，来改善个人网站的优雅和简洁性。于是找了些资料整理在这。由于我的网站用的注解，来减少xml配置文件带来的烦躁，所以主键策略一定要是基于注解的。</strong></p>
</blockquote>
<h1 id="一-自定义主键生成策略，由-GenericGenerator实现。"><a href="#一-自定义主键生成策略，由-GenericGenerator实现。" class="headerlink" title="一. 自定义主键生成策略，由@GenericGenerator实现。**"></a>一. 自定义主键生成策略，由<em>@GenericGenerator</em>实现。**</h1><p><em>hibernate</em>在<em>JPA</em>的基础上进行了扩展，可以用一下方式引入<em>hibernate</em>独有的主键生成策略，就是通过<em>@GenericGenerator</em>加入的。**</p>
<p>比如说，<em>JPA</em>标准用法**<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">@Id  </div><div class="line">@GeneratedValue(GenerationType.AUTO)  </div><div class="line"></div><div class="line">就可以用hibernate特有以下用法来实现</div><div class="line"></div><div class="line">@GeneratedValue(generator = &quot;paymentableGenerator&quot;)     </div><div class="line">@GenericGenerator(name = &quot;paymentableGenerator&quot;, strategy = &quot;assigned&quot;)  </div><div class="line"></div><div class="line"></div><div class="line">@GenericGenerator的定义:</div><div class="line"></div><div class="line">@Target(&#123;PACKAGE, TYPE, METHOD, FIELD&#125;)   </div><div class="line">@Retention(RUNTIME)   </div><div class="line">public @interface GenericGenerator &#123;   </div><div class="line">  </div><div class="line">String name();   </div><div class="line">  </div><div class="line">String strategy();   </div><div class="line">  </div><div class="line">Parameter[] parameters() default &#123;&#125;;   </div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<ul>
<li>name属性指定生成器名称。</li>
<li>strategy属性指定具体生成器的类名。</li>
<li>parameters得到strategy指定的具体生成器所用到的参数。</li>
</ul>
<a id="more"></a>
<p>对于这些<em>hibernate</em>主键生成策略和各自的具体生成器之间的关系<em>,</em>在<em>org.hibernate.id.IdentifierGeneratorFactory</em>中指定了<em>,</em></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">static &#123;   </div><div class="line">   GENERATORS.put(&quot;uuid&quot;, UUIDHexGenerator.class);   </div><div class="line">   GENERATORS.put(&quot;hilo&quot;, TableHiLoGenerator.class);   </div><div class="line">   GENERATORS.put(&quot;assigned&quot;, Assigned.class);   </div><div class="line">   GENERATORS.put(&quot;identity&quot;, IdentityGenerator.class);   </div><div class="line">   GENERATORS.put(&quot;select&quot;, SelectGenerator.class);   </div><div class="line">   GENERATORS.put(&quot;sequence&quot;, SequenceGenerator.class);   </div><div class="line">   GENERATORS.put(&quot;seqhilo&quot;, SequenceHiLoGenerator.class);   </div><div class="line">   GENERATORS.put(&quot;increment&quot;, IncrementGenerator.class);   </div><div class="line">   GENERATORS.put(&quot;foreign&quot;, ForeignGenerator.class);   </div><div class="line">   GENERATORS.put(&quot;guid&quot;, GUIDGenerator.class);   </div><div class="line">   GENERATORS.put(&quot;uuid.hex&quot;, UUIDHexGenerator.class); //uuid.hex is deprecated   </div><div class="line">   GENERATORS.put(&quot;sequence-identity&quot;, SequenceIdentityGenerator.class);   </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="二-上面十二种策略，加上native，hibernate一共默认支持十三种生成策略。"><a href="#二-上面十二种策略，加上native，hibernate一共默认支持十三种生成策略。" class="headerlink" title="二. 上面十二种策略，加上native，hibernate一共默认支持十三种生成策略。"></a>二. 上面十二种策略，加上<em>native</em>，<em>hibernate</em>一共默认支持十三种生成策略。</h1><h2 id="1、native"><a href="#1、native" class="headerlink" title="1、native"></a>1、native</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">@GeneratedValue(generator = &quot;paymentableGenerator&quot;)     </div><div class="line">@GenericGenerator(name = &quot;paymentableGenerator&quot;, strategy = &quot;native&quot;)</div></pre></td></tr></table></figure>
<h2 id="2、uuid"><a href="#2、uuid" class="headerlink" title="2、uuid"></a>2、uuid</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">@GeneratedValue(generator = &quot;paymentableGenerator&quot;)     </div><div class="line">@GenericGenerator(name = &quot;paymentableGenerator&quot;, strategy = &quot;uuid&quot;)</div></pre></td></tr></table></figure>
<h2 id="3、hilo"><a href="#3、hilo" class="headerlink" title="3、hilo"></a>3、hilo</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">@GeneratedValue(generator = &quot;paymentableGenerator&quot;)     </div><div class="line">@GenericGenerator(name = &quot;paymentableGenerator&quot;, strategy = &quot;hilo&quot;)</div></pre></td></tr></table></figure>
<h2 id="4、assigned"><a href="#4、assigned" class="headerlink" title="4、assigned"></a>4、assigned</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">@GeneratedValue(generator = &quot;paymentableGenerator&quot;)     </div><div class="line">@GenericGenerator(name = &quot;paymentableGenerator&quot;, strategy = &quot;assigned&quot;)</div></pre></td></tr></table></figure>
<h2 id="5、identity"><a href="#5、identity" class="headerlink" title="5、identity"></a>5、identity</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">@GeneratedValue(generator = &quot;paymentableGenerator&quot;)     </div><div class="line">@GenericGenerator(name = &quot;paymentableGenerator&quot;, strategy = &quot;identity&quot;)</div></pre></td></tr></table></figure>
<h2 id="6、select"><a href="#6、select" class="headerlink" title="6、select"></a>6、select</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">@GeneratedValue(generator = &quot;paymentableGenerator&quot;)   </div><div class="line">@GenericGenerator(name=&quot;select&quot;, strategy=&quot;select&quot;,   </div><div class="line">      parameters = &#123; @Parameter(name = &quot;key&quot;, value = &quot;idstoerung&quot;) &#125;)</div></pre></td></tr></table></figure>
<h2 id="7、sequence"><a href="#7、sequence" class="headerlink" title="7、sequence"></a>7、sequence</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">@GeneratedValue(generator = &quot;paymentableGenerator&quot;)   </div><div class="line">@GenericGenerator(name = &quot;paymentableGenerator&quot;, strategy = &quot;sequence&quot;,   </div><div class="line">          parameters = &#123; @Parameter(name = &quot;sequence&quot;, value = &quot;seq_payablemoney&quot;) &#125;)</div></pre></td></tr></table></figure>
<h2 id="8、seqhilo"><a href="#8、seqhilo" class="headerlink" title="8、seqhilo"></a>8、seqhilo</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">@GeneratedValue(generator = &quot;paymentableGenerator&quot;)   </div><div class="line">@GenericGenerator(name = &quot;paymentableGenerator&quot;, strategy = &quot;seqhilo&quot;,   </div><div class="line">          parameters = &#123; @Parameter(name = &quot;max_lo&quot;, value = &quot;5&quot;) &#125;)</div></pre></td></tr></table></figure>
<h2 id="9、increment"><a href="#9、increment" class="headerlink" title="9、increment"></a>9、increment</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">@GeneratedValue(generator = &quot;paymentableGenerator&quot;)     </div><div class="line">@GenericGenerator(name = &quot;paymentableGenerator&quot;, strategy = &quot;increment&quot;)</div></pre></td></tr></table></figure>
<h2 id="10、foreign"><a href="#10、foreign" class="headerlink" title="10、foreign"></a>10、foreign</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line">@GeneratedValue(generator = &quot;idGenerator&quot;)   </div><div class="line">@GenericGenerator(name = &quot;idGenerator&quot;, strategy = &quot;foreign&quot;,parameters = &#123; @Parameter(name = &quot;property&quot;, value = &quot;employee&quot;) &#125;)  </div><div class="line"></div><div class="line"></div><div class="line">注意：直接使用@PrimaryKeyJoinColumn 报错（?）</div><div class="line"></div><div class="line">@OneToOne(cascade = CascadeType.ALL)   </div><div class="line">@PrimaryKeyJoinColumn   </div><div class="line">例如</div><div class="line"></div><div class="line">@Entity  </div><div class="line">public class Employee &#123;   </div><div class="line">  @Id Integer id;   </div><div class="line">       </div><div class="line">  @OneToOne @PrimaryKeyJoinColumn  </div><div class="line">   EmployeeInfo info;   </div><div class="line">      </div><div class="line">&#125;  </div><div class="line">应该为</div><div class="line"></div><div class="line">@Entity  </div><div class="line">public class Employee &#123;   </div><div class="line">  @Id   </div><div class="line">  @GeneratedValue(generator = &quot;idGenerator&quot;)   </div><div class="line">  @GenericGenerator(name = &quot;idGenerator&quot;, strategy = &quot;foreign&quot;,   </div><div class="line">          parameters = &#123; @Parameter(name = &quot;property&quot;, value = &quot;info&quot;) &#125;)   </div><div class="line">   Integer id;   </div><div class="line">       </div><div class="line">  @OneToOne  </div><div class="line">   EmployeeInfo info;   </div><div class="line">      </div><div class="line">&#125; </div><div class="line">``` </div><div class="line">## 11、guid</div></pre></td></tr></table></figure>
<p>@GeneratedValue(generator = “paymentableGenerator”)<br>@GenericGenerator(name = “paymentableGenerator”, strategy = “guid”)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">## 12、uuid.hex</div></pre></td></tr></table></figure></p>
<p>@GeneratedValue(generator = “paymentableGenerator”)<br>@GenericGenerator(name = “paymentableGenerator”, strategy = “uuid.hex”)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">## 13、sequence-identity</div></pre></td></tr></table></figure></p>
<p>@GeneratedValue(generator = “paymentableGenerator”)<br>@GenericGenerator(name = “paymentableGenerator”, strategy = “sequence-identity”,<br>          parameters = { @Parameter(name = “sequence”, value = “seq_payablemoney”) })  </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># 三、通过@GenericGenerator自定义主键生成策略</div><div class="line">如果实际应用中，主键策略为程序指定了就用程序指定的主键（*assigned*），没有指定就从*sequence*中取。**</div><div class="line">明显上面所讨论的策略都不满足，只好自己扩展了，集成*assigned*和*sequence*两种策略。</div></pre></td></tr></table></figure>
<p>public class AssignedSequenceGenerator extends SequenceGenerator implements<br>PersistentIdentifierGenerator, Configurable {<br>private String entityName;   </p>
<p>public void configure(Type type, Properties params, Dialect dialect) throws MappingException {<br>   entityName = params.getProperty(ENTITY_NAME);<br>  if (entityName==null) {<br>   throw new MappingException(“no entity name”);<br>   }   </p>
<p>  super.configure(type, params, dialect);<br>}   </p>
<p>public Serializable generate(SessionImplementor session, Object obj)<br>  throws HibernateException {   </p>
<p>   Serializable id = session.getEntityPersister( entityName, obj )<br>     .getIdentifier( obj, session.getEntityMode() );   </p>
<p>  if (id==null) {<br>    id = super.generate(session, obj);<br>   }   </p>
<p>  return id;<br>}<br>}<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">实际应用中，定义同sequence。</div></pre></td></tr></table></figure></p>
<p>@GeneratedValue(generator = “paymentableGenerator”)<br>@GenericGenerator(name = “paymentableGenerator”, strategy = “AssignedSequenceGenerator”,<br>      parameters = { @Parameter(name = “sequence”, value = “seq_payablemoney”) })  </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line">值得注意的是，定义的这种策略，就像打开了潘多拉魔盒，非常不可控。正常情况下，不建议这么做。</div><div class="line"> </div><div class="line">策略解释</div><div class="line"></div><div class="line">``` </div><div class="line"></div><div class="line">* “assigned”  </div><div class="line">  主键由外部程序负责生成，在   save()   之前指定一个。  </div><div class="line">  </div><div class="line">*  “hilo”  </div><div class="line">  通过hi/lo   算法实现的主键生成机制，需要额外的数据库表或字段提供高位值来源 </div><div class="line">   </div><div class="line">*  “seqhilo”  </div><div class="line">  与hilo   类似，通过hi/lo   算法实现的主键生成机制，需要数据库中的   Sequence，适用于支持   Sequence   的数据库，如Oracle。  </div><div class="line">  </div><div class="line">*  “increment”  </div><div class="line">  主键按数值顺序递增。此方式的实现机制为在当前应用实例中维持一个变量，以保存着当前的最大值，之后每次需要生成主键的时候将此值加1作为主键。这种方式可能产生的问题是：不能在集群下使用。  </div><div class="line">  </div><div class="line">*  “identity”  </div><div class="line">  采用数据库提供的主键生成机制。如DB2、SQL   Server、MySQL   中的主键生成机制。  </div><div class="line">  </div><div class="line">*  “sequence”  </div><div class="line">  采用数据库提供的   sequence   机制生成主键。如   Oralce   中的Sequence。  </div><div class="line">  </div><div class="line">*  “native”  </div><div class="line">  由   Hibernate  根据使用的数据库自行判断采用   identity、hilo、sequence   其中一种作为主键生成方式。    </div><div class="line">  </div><div class="line">*  “uuid.hex”  </div><div class="line">  由   Hibernate   基于128   位   UUID   算法   生成16   进制数值（编码后以长度32   的字符串表示）作为主键。  </div><div class="line">  </div><div class="line">*  “uuid.string”  </div><div class="line">  与uuid.hex   类似，只是生成的主键未进行编码（长度16），不能应用在   PostgreSQL   数据库中。  </div><div class="line">  </div><div class="line">*  “foreign”  </div><div class="line">  使用另外一个相关联的对象的标识符作为主键。</div></pre></td></tr></table></figure>
<hr>
<p>设置自增长主键的初始值</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">alter table test AUTO_INCREMENT = 500000;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;楔子&quot;&gt;&lt;a href=&quot;#楔子&quot; class=&quot;headerlink&quot; title=&quot;楔子&quot;&gt;&lt;/a&gt;楔子&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;最近想把UUID32位的主键策略改为6位的INT自增的主键，来改善个人网站的优雅和简洁性。于是找了些资料整理在这。由于我的网站用的注解，来减少xml配置文件带来的烦躁，所以主键策略一定要是基于注解的。&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;一-自定义主键生成策略，由-GenericGenerator实现。&quot;&gt;&lt;a href=&quot;#一-自定义主键生成策略，由-GenericGenerator实现。&quot; class=&quot;headerlink&quot; title=&quot;一. 自定义主键生成策略，由@GenericGenerator实现。**&quot;&gt;&lt;/a&gt;一. 自定义主键生成策略，由&lt;em&gt;@GenericGenerator&lt;/em&gt;实现。**&lt;/h1&gt;&lt;p&gt;&lt;em&gt;hibernate&lt;/em&gt;在&lt;em&gt;JPA&lt;/em&gt;的基础上进行了扩展，可以用一下方式引入&lt;em&gt;hibernate&lt;/em&gt;独有的主键生成策略，就是通过&lt;em&gt;@GenericGenerator&lt;/em&gt;加入的。**&lt;/p&gt;
&lt;p&gt;比如说，&lt;em&gt;JPA&lt;/em&gt;标准用法**&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;@Id  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;@GeneratedValue(GenerationType.AUTO)  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;就可以用hibernate特有以下用法来实现&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;@GeneratedValue(generator = &amp;quot;paymentableGenerator&amp;quot;)     &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;@GenericGenerator(name = &amp;quot;paymentableGenerator&amp;quot;, strategy = &amp;quot;assigned&amp;quot;)  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;@GenericGenerator的定义:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;@Target(&amp;#123;PACKAGE, TYPE, METHOD, FIELD&amp;#125;)   &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;@Retention(RUNTIME)   &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;public @interface GenericGenerator &amp;#123;   &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;String name();   &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;String strategy();   &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Parameter[] parameters() default &amp;#123;&amp;#125;;   &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;name属性指定生成器名称。&lt;/li&gt;
&lt;li&gt;strategy属性指定具体生成器的类名。&lt;/li&gt;
&lt;li&gt;parameters得到strategy指定的具体生成器所用到的参数。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="hibernate" scheme="http://liuhouer.github.io/categories/hibernate/"/>
    
    
      <category term="hibernate" scheme="http://liuhouer.github.io/tags/hibernate/"/>
    
  </entry>
  
  <entry>
    <title>雨巷</title>
    <link href="http://liuhouer.github.io/2016/03/06/%E9%9B%A8%E5%B7%B7/"/>
    <id>http://liuhouer.github.io/2016/03/06/雨巷/</id>
    <published>2016-03-06T03:50:36.000Z</published>
    <updated>2017-03-23T02:13:26.000Z</updated>
    
    <content type="html"><![CDATA[<!-- <img src="http://7xpfpd.com1.z0.glb.clouddn.com/post_.dingxiang.jpg" style="width: 208px;height: 208px;"></img> -->
<p><img src="http://7xpfpd.com1.z0.glb.clouddn.com/post_.dingxiang.jpg" alt="最喜欢的意境散文" title="最喜欢的意境散文"></p>
<p>撑着油纸伞，独自<br>彷徨在悠长、悠长<br>又寂寥的雨巷<br>我希望逢着<br>一个丁香一样地<br>结着愁怨的姑娘 </p>
<p>她是有<br>丁香一样的颜色<br>丁香一样的芬芳<br>丁香一样的忧愁<br>在雨中哀怨<br>哀怨又彷徨 </p>
<a id="more"></a> 
<p>她彷徨在这寂寥的雨巷<br>撑着油纸伞<br>像我一样<br>像我一样地<br>默默行着<br>寒漠、凄清，又惆怅 </p>
<p>她默默地走近<br>走近，又投出<br>太息一般的眼光<br>她飘过<br>像梦一般地<br>像梦一般地凄婉迷茫 </p>
<p>像梦中飘过<br>一枝丁香地<br>我身旁飘过这女郎<br>她静默地远了、远了<br>到了颓圮的篱墙<br>走尽这雨巷 </p>
<p>在雨的哀曲里<br>消了她的颜色<br>散了她的芬芳<br>消散了，甚至她的<br>太息般的眼光<br>丁香般的惆怅 </p>
<p>撑着油纸伞，独自<br>彷徨在悠长、悠长<br>又寂寥的雨巷<br>我希望飘过<br>一个丁香一样地<br>结着愁怨的姑娘</p>
]]></content>
    
    <summary type="html">
    
      &lt;!-- &lt;img src=&quot;http://7xpfpd.com1.z0.glb.clouddn.com/post_.dingxiang.jpg&quot; style=&quot;width: 208px;height: 208px;&quot;&gt;&lt;/img&gt; --&gt;
&lt;p&gt;&lt;img src=&quot;http://7xpfpd.com1.z0.glb.clouddn.com/post_.dingxiang.jpg&quot; alt=&quot;最喜欢的意境散文&quot; title=&quot;最喜欢的意境散文&quot;&gt;&lt;/p&gt;
&lt;p&gt;撑着油纸伞，独自&lt;br&gt;彷徨在悠长、悠长&lt;br&gt;又寂寥的雨巷&lt;br&gt;我希望逢着&lt;br&gt;一个丁香一样地&lt;br&gt;结着愁怨的姑娘 &lt;/p&gt;
&lt;p&gt;她是有&lt;br&gt;丁香一样的颜色&lt;br&gt;丁香一样的芬芳&lt;br&gt;丁香一样的忧愁&lt;br&gt;在雨中哀怨&lt;br&gt;哀怨又彷徨 &lt;/p&gt;
    
    </summary>
    
      <category term="碎碎念" scheme="http://liuhouer.github.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
    
      <category term="碎碎念" scheme="http://liuhouer.github.io/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
  </entry>
  
  <entry>
    <title>记梦有感</title>
    <link href="http://liuhouer.github.io/2016/01/05/dream-record/"/>
    <id>http://liuhouer.github.io/2016/01/05/dream-record/</id>
    <published>2016-01-05T15:12:11.000Z</published>
    <updated>2017-03-23T02:13:26.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://7xpfpd.com1.z0.glb.clouddn.com/image%2Farticle%2Ftumblr_dream_record.jpg" alt="my fantasy dream record" title="my fantasy dream record"></p>
<p>•   茫茫的人海中，你很难第一时间发现我。</p>
<p>•   有时候我希望我是一个胖子，这样我可以多占点地方，有时候我希望我能赶紧秃顶，这样还会显得与众不同，可是我就是一个过着安安静静，一成不变生活的男人。</p>
<p>•   所以我期待改变，如果我注定改变不了自己，我希望我能改变下你的生活，带给你点依靠，让我有点责任。带给你些帮助，让我有点动力。带给你些温暖，让我有点充实。</p>
<a id="more"></a> 
<p>•   我可能会喜欢你的任性，矫情，蛮不讲理，也可能会喜欢你的无赖，泼皮，漫不经心。 亦或者，我会喜欢你的唠唠叨叨，黏黏糊糊。</p>
<p>•   请原谅的我笨拙，因为我实在描绘不出你的样子，但是我知道，一定有生气时撅起的嘴，一定要开心时放肆的笑，如果一定要在我们的画布上填上一点元素，可不可以有害羞的捶胸，埋首的娇嗔，不舍得凝望和对于上天赐予彼此的感恩.如果可以选择不要，可不可以让我偷偷的把眼泪，失望，怨恨，分离丢弃到垃圾桶里，让城市化妆师带他们去离我们遥远的深山老林，要么焚烧，要么深埋。</p>
<p>•   我期待，暂时也只是期待，因为我不知道我能不能令人满意，我唯一确定的就是我会努力，无论结果怎么样，我期待我能成为你清晨的一缕阳光，我期待我能成为你寒冬的一袭暖风，我期待我是你干涸时刻的一阵清露，我期待我是你孤独无助之际的一怀拥抱。</p>
<p>•   新的一年沉淀我的孤独，等待你的出现，因为我又积攒够了勇气再次出发。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://7xpfpd.com1.z0.glb.clouddn.com/image%2Farticle%2Ftumblr_dream_record.jpg&quot; alt=&quot;my fantasy dream record&quot; title=&quot;my fantasy dream record&quot;&gt;&lt;/p&gt;
&lt;p&gt;•   茫茫的人海中，你很难第一时间发现我。&lt;/p&gt;
&lt;p&gt;•   有时候我希望我是一个胖子，这样我可以多占点地方，有时候我希望我能赶紧秃顶，这样还会显得与众不同，可是我就是一个过着安安静静，一成不变生活的男人。&lt;/p&gt;
&lt;p&gt;•   所以我期待改变，如果我注定改变不了自己，我希望我能改变下你的生活，带给你点依靠，让我有点责任。带给你些帮助，让我有点动力。带给你些温暖，让我有点充实。&lt;/p&gt;
    
    </summary>
    
      <category term="随笔" scheme="http://liuhouer.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="思维" scheme="http://liuhouer.github.io/tags/%E6%80%9D%E7%BB%B4/"/>
    
  </entry>
  
</feed>
